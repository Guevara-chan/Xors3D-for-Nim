; *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
; Xors3D's low-level declarations.
; Converted in 2012 by Guevara-chan.
; *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*

Define *Library_ = OpenLibrary(#PB_Any, "xors3d.dll")

Prototype.L _xCreateLine3D_(fromX.F, fromY.F, fromZ.F, toX.F, toY.F, toZ.F, red.L, green.L, blue.L, alpha.L, useZBuffer.L)
Global xCreateLine3D_._xCreateLine3D_ = GetFunction(*Library_, "_xCreateLine3D@44")
Prototype.L _xCreateLine3D(fromX.F, fromY.F, fromZ.F, toX.F, toY.F, toZ.F, red.L, green.L, blue.L, alpha.L, useZBuffer.L)
Global xCreateLine3D._xCreateLine3D = GetFunction(*Library_, "xCreateLine3D")
Prototype.L _xLine3DOrigin_(line3d.L, x.F, y.F, z.F, isGlobal.L)
Global xLine3DOrigin_._xLine3DOrigin_ = GetFunction(*Library_, "_xLine3DOrigin@20")
Prototype.L _xLine3DOrigin(line3d.L, x.F, y.F, z.F, isGlobal.L)
Global xLine3DOrigin._xLine3DOrigin = GetFunction(*Library_, "xLine3DOrigin")
Prototype.L _xLine3DAddNode_(line3d.L, x.F, y.F, z.F, isGlobal.L)
Global xLine3DAddNode_._xLine3DAddNode_ = GetFunction(*Library_, "_xLine3DAddNode@20")
Prototype.L _xLine3DAddNode(line3d.L, x.F, y.F, z.F, isGlobal.L)
Global xLine3DAddNode._xLine3DAddNode = GetFunction(*Library_, "xLine3DAddNode")
Prototype.L _xLine3DColor(line3d.L, red.L, green.L, blue.L, alpha.L)
Global xLine3DColor._xLine3DColor = GetFunction(*Library_, "_xLine3DColor@20")
Prototype.L _xLine3DUseZBuffer(line3d.L, state.L)
Global xLine3DUseZBuffer._xLine3DUseZBuffer = GetFunction(*Library_, "_xLine3DUseZBuffer@8")
Prototype.F _xLine3DOriginX_(line3d.L, isGlobal.L)
Global xLine3DOriginX_._xLine3DOriginX_ = GetFunction(*Library_, "_xLine3DOriginX@8")
Prototype.F _xLine3DOriginX(line3d.L, isGlobal.L)
Global xLine3DOriginX._xLine3DOriginX = GetFunction(*Library_, "xLine3DOriginX")
Prototype.F _xLine3DOriginY_(line3d.L, isGlobal.L)
Global xLine3DOriginY_._xLine3DOriginY_ = GetFunction(*Library_, "_xLine3DOriginY@8")
Prototype.F _xLine3DOriginY(line3d.L, isGlobal.L)
Global xLine3DOriginY._xLine3DOriginY = GetFunction(*Library_, "xLine3DOriginY")
Prototype.F _xLine3DOriginZ_(line3d.L, isGlobal.L)
Global xLine3DOriginZ_._xLine3DOriginZ_ = GetFunction(*Library_, "_xLine3DOriginZ@8")
Prototype.F _xLine3DOriginZ(line3d.L, isGlobal.L)
Global xLine3DOriginZ._xLine3DOriginZ = GetFunction(*Library_, "xLine3DOriginZ")
Prototype.L _xLine3DNodesCount(line3d.L)
Global xLine3DNodesCount._xLine3DNodesCount = GetFunction(*Library_, "_xLine3DNodesCount@4")
Prototype.L _xLine3DNodePosition_(line3d.L, index.L, x.F, y.F, z.F, isGlobal.L)
Global xLine3DNodePosition_._xLine3DNodePosition_ = GetFunction(*Library_, "_xLine3DNodePosition@24")
Prototype.L _xLine3DNodePosition(line3d.L, index.L, x.F, y.F, z.F, isGlobal.L)
Global xLine3DNodePosition._xLine3DNodePosition = GetFunction(*Library_, "xLine3DNodePosition")
Prototype.F _xLine3DNodeX_(line3d.L, index.L, isGlobal.L)
Global xLine3DNodeX_._xLine3DNodeX_ = GetFunction(*Library_, "_xLine3DNodeX@12")
Prototype.F _xLine3DNodeX(line3d.L, index.L, isGlobal.L)
Global xLine3DNodeX._xLine3DNodeX = GetFunction(*Library_, "xLine3DNodeX")
Prototype.F _xLine3DNodeY_(line3d.L, index.L, isGlobal.L)
Global xLine3DNodeY_._xLine3DNodeY_ = GetFunction(*Library_, "_xLine3DNodeY@12")
Prototype.F _xLine3DNodeY(line3d.L, index.L, isGlobal.L)
Global xLine3DNodeY._xLine3DNodeY = GetFunction(*Library_, "xLine3DNodeY")
Prototype.F _xLine3DNodeZ_(line3d.L, index.L, isGlobal.L)
Global xLine3DNodeZ_._xLine3DNodeZ_ = GetFunction(*Library_, "_xLine3DNodeZ@12")
Prototype.F _xLine3DNodeZ(line3d.L, index.L, isGlobal.L)
Global xLine3DNodeZ._xLine3DNodeZ = GetFunction(*Library_, "xLine3DNodeZ")
Prototype.L _xLine3DRed(line3d.L)
Global xLine3DRed._xLine3DRed = GetFunction(*Library_, "_xLine3DRed@4")
Prototype.L _xLine3DGreen(line3d.L)
Global xLine3DGreen._xLine3DGreen = GetFunction(*Library_, "_xLine3DGreen@4")
Prototype.L _xLine3DBlue(line3d.L)
Global xLine3DBlue._xLine3DBlue = GetFunction(*Library_, "_xLine3DBlue@4")
Prototype.L _xLine3DAlpha(line3d.L)
Global xLine3DAlpha._xLine3DAlpha = GetFunction(*Library_, "_xLine3DAlpha@4")
Prototype.L _xGetLine3DUseZBuffer(line3d.L)
Global xGetLine3DUseZBuffer._xGetLine3DUseZBuffer = GetFunction(*Library_, "_xGetLine3DUseZBuffer@4")
Prototype.L _xDeleteLine3DNode(line3d.L, index.L)
Global xDeleteLine3DNode._xDeleteLine3DNode = GetFunction(*Library_, "_xDeleteLine3DNode@8")
Prototype.L _xClearLine3D(line3d.L)
Global xClearLine3D._xClearLine3D = GetFunction(*Library_, "_xClearLine3D@4")
Prototype.L _xLoadBrush_(path.P-Ascii, flags.L, xScale.F, yScale.F)
Global xLoadBrush_._xLoadBrush_ = GetFunction(*Library_, "_xLoadBrush@16")
Prototype.L _xLoadBrush(path.P-Ascii, flags.L, xScale.F, yScale.F)
Global xLoadBrush._xLoadBrush = GetFunction(*Library_, "xLoadBrush")
Prototype.L _xCreateBrush_(red.F, green.F, blue.F)
Global xCreateBrush_._xCreateBrush_ = GetFunction(*Library_, "_xCreateBrush@12")
Prototype.L _xCreateBrush(red.F, green.F, blue.F)
Global xCreateBrush._xCreateBrush = GetFunction(*Library_, "xCreateBrush")
Prototype.L _xFreeBrush(brush.L)
Global xFreeBrush._xFreeBrush = GetFunction(*Library_, "_xFreeBrush@4")
Prototype.L _xGetBrushTexture_(brush.L, index.L)
Global xGetBrushTexture_._xGetBrushTexture_ = GetFunction(*Library_, "_xGetBrushTexture@8")
Prototype.L _xGetBrushTexture(brush.L, index.L)
Global xGetBrushTexture._xGetBrushTexture = GetFunction(*Library_, "xGetBrushTexture")
Prototype.L _xBrushColor(brush.L, red.L, green.L, blue.L)
Global xBrushColor._xBrushColor = GetFunction(*Library_, "_xBrushColor@16")
Prototype.L _xBrushAlpha(brush.L, alpha.F)
Global xBrushAlpha._xBrushAlpha = GetFunction(*Library_, "_xBrushAlpha@8")
Prototype.L _xBrushShininess(brush.L, shininess.F)
Global xBrushShininess._xBrushShininess = GetFunction(*Library_, "_xBrushShininess@8")
Prototype.L _xBrushBlend(brush.L, blend.L)
Global xBrushBlend._xBrushBlend = GetFunction(*Library_, "_xBrushBlend@8")
Prototype.L _xBrushFX(brush.L, FX.L)
Global xBrushFX._xBrushFX = GetFunction(*Library_, "_xBrushFX@8")
Prototype.L _xBrushTexture_(brush.L, texture.L, frame.L, index.L)
Global xBrushTexture_._xBrushTexture_ = GetFunction(*Library_, "_xBrushTexture@16")
Prototype.L _xBrushTexture(brush.L, texture.L, frame.L, index.L)
Global xBrushTexture._xBrushTexture = GetFunction(*Library_, "xBrushTexture")
Prototype.I _xGetBrushName(brush.L)
Global xGetBrushName_._xGetBrushName = GetFunction(*Library_, "_xGetBrushName@4")
Macro xGetBrushName(brush) : PeekS(xGetBrushName_(brush), -1, #PB_Ascii) : EndMacro
Prototype.L _xBrushName(brush.L, name.P-Ascii)
Global xBrushName._xBrushName = GetFunction(*Library_, "_xBrushName@8")
Prototype.F _xGetBrushAlpha(brush.L)
Global xGetBrushAlpha._xGetBrushAlpha = GetFunction(*Library_, "_xGetBrushAlpha@4")
Prototype.L _xGetBrushBlend(brush.L)
Global xGetBrushBlend._xGetBrushBlend = GetFunction(*Library_, "_xGetBrushBlend@4")
Prototype.L _xGetBrushRed(brush.L)
Global xGetBrushRed._xGetBrushRed = GetFunction(*Library_, "_xGetBrushRed@4")
Prototype.L _xGetBrushGreen(brush.L)
Global xGetBrushGreen._xGetBrushGreen = GetFunction(*Library_, "_xGetBrushGreen@4")
Prototype.L _xGetBrushBlue(brush.L)
Global xGetBrushBlue._xGetBrushBlue = GetFunction(*Library_, "_xGetBrushBlue@4")
Prototype.L _xGetBrushFX(brush.L)
Global xGetBrushFX._xGetBrushFX = GetFunction(*Library_, "_xGetBrushFX@4")
Prototype.F _xGetBrushShininess(brush.L)
Global xGetBrushShininess._xGetBrushShininess = GetFunction(*Library_, "_xGetBrushShininess@4")
Prototype.L _xCameraFogMode(camera.L, mode.L)
Global xCameraFogMode._xCameraFogMode = GetFunction(*Library_, "_xCameraFogMode@8")
Prototype.L _xCameraFogColor(camera.L, red.L, green.L, blue.L)
Global xCameraFogColor._xCameraFogColor = GetFunction(*Library_, "_xCameraFogColor@16")
Prototype.L _xCameraFogRange(camera.L, nearRange.F, farRange.F)
Global xCameraFogRange._xCameraFogRange = GetFunction(*Library_, "_xCameraFogRange@12")
Prototype.L _xCameraClsColor_(camera.L, red.L, green.L, blue.L, alpha.L)
Global xCameraClsColor_._xCameraClsColor_ = GetFunction(*Library_, "_xCameraClsColor@20")
Prototype.L _xCameraClsColor(camera.L, red.L, green.L, blue.L, alpha.L)
Global xCameraClsColor._xCameraClsColor = GetFunction(*Library_, "xCameraClsColor")
Prototype.L _xCameraProjMode(camera.L, mode.L)
Global xCameraProjMode._xCameraProjMode = GetFunction(*Library_, "_xCameraProjMode@8")
Prototype.L _xCameraClsMode(camera.L, clearColor.L, clearZBuffer.L)
Global xCameraClsMode._xCameraClsMode = GetFunction(*Library_, "_xCameraClsMode@12")
Prototype.L _xSphereInFrustum(camera.L, x.F, y.F, z.F, radii.F)
Global xSphereInFrustum._xSphereInFrustum = GetFunction(*Library_, "_xSphereInFrustum@20")
Prototype.L _xCameraClipPlane(camera.L, index.L, enabled.L, a.F, b.F, c.F, d.F)
Global xCameraClipPlane._xCameraClipPlane = GetFunction(*Library_, "_xCameraClipPlane@28")
Prototype.L _xCameraRange(camera.L, nearRange.F, farRange.F)
Global xCameraRange._xCameraRange = GetFunction(*Library_, "_xCameraRange@12")
Prototype.L _xCameraViewport(camera.L, x.L, y.L, width.L, height.L)
Global xCameraViewport._xCameraViewport = GetFunction(*Library_, "_xCameraViewport@20")
Prototype.L _xCameraCropViewport(camera.L, x.L, y.L, width.L, height.L)
Global xCameraCropViewport._xCameraCropViewport = GetFunction(*Library_, "_xCameraCropViewport@20")
Prototype.L _xCreateCamera_(parent.L)
Global xCreateCamera_._xCreateCamera_ = GetFunction(*Library_, "_xCreateCamera@4")
Prototype.L _xCreateCamera(parent.L)
Global xCreateCamera._xCreateCamera = GetFunction(*Library_, "xCreateCamera")
Prototype.L _xCameraProject(camera.L, x.F, y.F, z.F)
Global xCameraProject._xCameraProject = GetFunction(*Library_, "_xCameraProject@16")
Prototype.L _xCameraProject2D(camera.L, x.L, y.L, zDistance.F)
Global xCameraProject2D._xCameraProject2D = GetFunction(*Library_, "_xCameraProject2D@16")
Prototype.F _xProjectedX()
Global xProjectedX._xProjectedX = GetFunction(*Library_, "_xProjectedX@0")
Prototype.F _xProjectedY()
Global xProjectedY._xProjectedY = GetFunction(*Library_, "_xProjectedY@0")
Prototype.F _xProjectedZ()
Global xProjectedZ._xProjectedZ = GetFunction(*Library_, "_xProjectedZ@0")
Prototype.L _xGetViewMatrix(camera.L)
Global xGetViewMatrix._xGetViewMatrix = GetFunction(*Library_, "_xGetViewMatrix@4")
Prototype.L _xGetProjectionMatrix(camera.L)
Global xGetProjectionMatrix._xGetProjectionMatrix = GetFunction(*Library_, "_xGetProjectionMatrix@4")
Prototype.L _xCameraZoom(camera.L, zoom.F)
Global xCameraZoom._xCameraZoom = GetFunction(*Library_, "_xCameraZoom@8")
Prototype.L _xGetViewProjMatrix(camera.L)
Global xGetViewProjMatrix._xGetViewProjMatrix = GetFunction(*Library_, "_xGetViewProjMatrix@4")
Prototype.L _xCollisions(srcType.L, destType.L, collideMethod.L, response.L)
Global xCollisions._xCollisions = GetFunction(*Library_, "_xCollisions@16")
Prototype.L _xClearCollisions()
Global xClearCollisions._xClearCollisions = GetFunction(*Library_, "_xClearCollisions@0")
Prototype.L _xResetEntity(entity.L)
Global xResetEntity._xResetEntity = GetFunction(*Library_, "_xResetEntity@4")
Prototype.L _xEntityRadius_(entity.L, xRadius.F, yRadius.F)
Global xEntityRadius_._xEntityRadius_ = GetFunction(*Library_, "_xEntityRadius@12")
Prototype.L _xEntityRadius(entity.L, xRadius.F, yRadius.F)
Global xEntityRadius._xEntityRadius = GetFunction(*Library_, "xEntityRadius")
Prototype.L _xEntityBox(entity.L, x.F, y.F, z.F, width.F, height.F, depth.F)
Global xEntityBox._xEntityBox = GetFunction(*Library_, "_xEntityBox@28")
Prototype.L _xEntityType_(entity.L, typeID.L, recurse.L)
Global xEntityType_._xEntityType_ = GetFunction(*Library_, "_xEntityType@12")
Prototype.L _xEntityType(entity.L, typeID.L, recurse.L)
Global xEntityType._xEntityType = GetFunction(*Library_, "xEntityType")
Prototype.L _xEntityCollided(entity.L, typeID.L)
Global xEntityCollided._xEntityCollided = GetFunction(*Library_, "_xEntityCollided@8")
Prototype.L _xCountCollisions(entity.L)
Global xCountCollisions._xCountCollisions = GetFunction(*Library_, "_xCountCollisions@4")
Prototype.F _xCollisionX(entity.L, index.L)
Global xCollisionX._xCollisionX = GetFunction(*Library_, "_xCollisionX@8")
Prototype.F _xCollisionY(entity.L, index.L)
Global xCollisionY._xCollisionY = GetFunction(*Library_, "_xCollisionY@8")
Prototype.F _xCollisionZ(entity.L, index.L)
Global xCollisionZ._xCollisionZ = GetFunction(*Library_, "_xCollisionZ@8")
Prototype.F _xCollisionNX(entity.L, index.L)
Global xCollisionNX._xCollisionNX = GetFunction(*Library_, "_xCollisionNX@8")
Prototype.F _xCollisionNY(entity.L, index.L)
Global xCollisionNY._xCollisionNY = GetFunction(*Library_, "_xCollisionNY@8")
Prototype.F _xCollisionNZ(entity.L, index.L)
Global xCollisionNZ._xCollisionNZ = GetFunction(*Library_, "_xCollisionNZ@8")
Prototype.F _xCollisionTime(entity.L, index.L)
Global xCollisionTime._xCollisionTime = GetFunction(*Library_, "_xCollisionTime@8")
Prototype.L _xCollisionEntity(entity.L, index.L)
Global xCollisionEntity._xCollisionEntity = GetFunction(*Library_, "_xCollisionEntity@8")
Prototype.L _xCollisionSurface(entity.L, index.L)
Global xCollisionSurface._xCollisionSurface = GetFunction(*Library_, "_xCollisionSurface@8")
Prototype.L _xCollisionTriangle(entity.L, index.L)
Global xCollisionTriangle._xCollisionTriangle = GetFunction(*Library_, "_xCollisionTriangle@8")
Prototype.L _xGetEntityType(entity.L)
Global xGetEntityType._xGetEntityType = GetFunction(*Library_, "_xGetEntityType@4")
Prototype.L _xRenderPostEffect(poly.L)
Global xRenderPostEffect._xRenderPostEffect = GetFunction(*Library_, "_xRenderPostEffect@4")
Prototype.L _xCreatePostEffectPoly(camera.L, mode.L)
Global xCreatePostEffectPoly._xCreatePostEffectPoly = GetFunction(*Library_, "_xCreatePostEffectPoly@8")
Prototype.L _xGetFunctionAddress(name.P-Ascii)
Global xGetFunctionAddress._xGetFunctionAddress = GetFunction(*Library_, "_xGetFunctionAddress@4")
Prototype.L _xLoadFXFile(path.P-Ascii)
Global xLoadFXFile._xLoadFXFile = GetFunction(*Library_, "_xLoadFXFile@4")
Prototype.L _xFreeEffect(effect.L)
Global xFreeEffect._xFreeEffect = GetFunction(*Library_, "_xFreeEffect@4")
Prototype.L _xSetEntityEffect_(entity.L, effect.L, index.L)
Global xSetEntityEffect_._xSetEntityEffect_ = GetFunction(*Library_, "_xSetEntityEffect@12")
Prototype.L _xSetEntityEffect(entity.L, effect.L, index.L)
Global xSetEntityEffect._xSetEntityEffect = GetFunction(*Library_, "xSetEntityEffect")
Prototype.L _xSetSurfaceEffect_(surface.L, effect.L, index.L)
Global xSetSurfaceEffect_._xSetSurfaceEffect_ = GetFunction(*Library_, "_xSetSurfaceEffect@12")
Prototype.L _xSetSurfaceEffect(surface.L, effect.L, index.L)
Global xSetSurfaceEffect._xSetSurfaceEffect = GetFunction(*Library_, "xSetSurfaceEffect")
Prototype.L _xSetBonesArrayName_(entity.L, arrayName.P-Ascii, layer.L)
Global xSetBonesArrayName_._xSetBonesArrayName_ = GetFunction(*Library_, "_xSetBonesArrayName@12")
Prototype.L _xSetBonesArrayName(entity.L, arrayName.P-Ascii, layer.L)
Global xSetBonesArrayName._xSetBonesArrayName = GetFunction(*Library_, "xSetBonesArrayName")
Prototype.L _xSurfaceBonesArrayName_(surface.L, arrayName.P-Ascii, layer.L)
Global xSurfaceBonesArrayName_._xSurfaceBonesArrayName_ = GetFunction(*Library_, "_xSurfaceBonesArrayName@12")
Prototype.L _xSurfaceBonesArrayName(surface.L, arrayName.P-Ascii, layer.L)
Global xSurfaceBonesArrayName._xSurfaceBonesArrayName = GetFunction(*Library_, "xSurfaceBonesArrayName")
Prototype.L _xSetEffectInt_(entity.L, name.P-Ascii, value.L, layer.L)
Global xSetEffectInt_._xSetEffectInt_ = GetFunction(*Library_, "_xSetEffectInt@16")
Prototype.L _xSetEffectInt(entity.L, name.P-Ascii, value.L, layer.L)
Global xSetEffectInt._xSetEffectInt = GetFunction(*Library_, "xSetEffectInt")
Prototype.L _xSurfaceEffectInt_(surface.L, name.P-Ascii, value.L, layer.L)
Global xSurfaceEffectInt_._xSurfaceEffectInt_ = GetFunction(*Library_, "_xSurfaceEffectInt@16")
Prototype.L _xSurfaceEffectInt(surface.L, name.P-Ascii, value.L, layer.L)
Global xSurfaceEffectInt._xSurfaceEffectInt = GetFunction(*Library_, "xSurfaceEffectInt")
Prototype.L _xSetEffectFloat_(entity.L, name.P-Ascii, value.F, layer.L)
Global xSetEffectFloat_._xSetEffectFloat_ = GetFunction(*Library_, "_xSetEffectFloat@16")
Prototype.L _xSetEffectFloat(entity.L, name.P-Ascii, value.F, layer.L)
Global xSetEffectFloat._xSetEffectFloat = GetFunction(*Library_, "xSetEffectFloat")
Prototype.L _xSurfaceEffectFloat_(surface.L, name.P-Ascii, value.F, layer.L)
Global xSurfaceEffectFloat_._xSurfaceEffectFloat_ = GetFunction(*Library_, "_xSurfaceEffectFloat@16")
Prototype.L _xSurfaceEffectFloat(surface.L, name.P-Ascii, value.F, layer.L)
Global xSurfaceEffectFloat._xSurfaceEffectFloat = GetFunction(*Library_, "xSurfaceEffectFloat")
Prototype.L _xSetEffectBool_(entity.L, name.P-Ascii, value.L, layer.L)
Global xSetEffectBool_._xSetEffectBool_ = GetFunction(*Library_, "_xSetEffectBool@16")
Prototype.L _xSetEffectBool(entity.L, name.P-Ascii, value.L, layer.L)
Global xSetEffectBool._xSetEffectBool = GetFunction(*Library_, "xSetEffectBool")
Prototype.L _xSurfaceEffectBool_(surface.L, name.P-Ascii, value.L, layer.L)
Global xSurfaceEffectBool_._xSurfaceEffectBool_ = GetFunction(*Library_, "_xSurfaceEffectBool@16")
Prototype.L _xSurfaceEffectBool(surface.L, name.P-Ascii, value.L, layer.L)
Global xSurfaceEffectBool._xSurfaceEffectBool = GetFunction(*Library_, "xSurfaceEffectBool")
Prototype.L _xSetEffectVector_(entity.L, name.P-Ascii, x.F, y.F, z.F, w.F, layer.L)
Global xSetEffectVector_._xSetEffectVector_ = GetFunction(*Library_, "_xSetEffectVector@28")
Prototype.L _xSetEffectVector(entity.L, name.P-Ascii, x.F, y.F, z.F, w.F, layer.L)
Global xSetEffectVector._xSetEffectVector = GetFunction(*Library_, "xSetEffectVector")
Prototype.L _xSurfaceEffectVector_(surface.L, name.P-Ascii, x.F, y.F, z.F, w.F, layer.L)
Global xSurfaceEffectVector_._xSurfaceEffectVector_ = GetFunction(*Library_, "_xSurfaceEffectVector@28")
Prototype.L _xSurfaceEffectVector(surface.L, name.P-Ascii, x.F, y.F, z.F, w.F, layer.L)
Global xSurfaceEffectVector._xSurfaceEffectVector = GetFunction(*Library_, "xSurfaceEffectVector")
Prototype.L _xSetEffectVectorArray_(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectVectorArray_._xSetEffectVectorArray_ = GetFunction(*Library_, "_xSetEffectVectorArray@20")
Prototype.L _xSetEffectVectorArray(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectVectorArray._xSetEffectVectorArray = GetFunction(*Library_, "xSetEffectVectorArray")
Prototype.L _xSurfaceEffectVectorArray_(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectVectorArray_._xSurfaceEffectVectorArray_ = GetFunction(*Library_, "_xSurfaceEffectVectorArray@20")
Prototype.L _xSurfaceEffectVectorArray(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectVectorArray._xSurfaceEffectVectorArray = GetFunction(*Library_, "xSurfaceEffectVectorArray")
Prototype.L _xSurfaceEffectMatrixArray_(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectMatrixArray_._xSurfaceEffectMatrixArray_ = GetFunction(*Library_, "_xSurfaceEffectMatrixArray@20")
Prototype.L _xSurfaceEffectMatrixArray(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectMatrixArray._xSurfaceEffectMatrixArray = GetFunction(*Library_, "xSurfaceEffectMatrixArray")
Prototype.L _xSurfaceEffectFloatArray_(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectFloatArray_._xSurfaceEffectFloatArray_ = GetFunction(*Library_, "_xSurfaceEffectFloatArray@20")
Prototype.L _xSurfaceEffectFloatArray(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectFloatArray._xSurfaceEffectFloatArray = GetFunction(*Library_, "xSurfaceEffectFloatArray")
Prototype.L _xSurfaceEffectIntArray_(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectIntArray_._xSurfaceEffectIntArray_ = GetFunction(*Library_, "_xSurfaceEffectIntArray@20")
Prototype.L _xSurfaceEffectIntArray(surface.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSurfaceEffectIntArray._xSurfaceEffectIntArray = GetFunction(*Library_, "xSurfaceEffectIntArray")
Prototype.L _xSetEffectMatrixArray_(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectMatrixArray_._xSetEffectMatrixArray_ = GetFunction(*Library_, "_xSetEffectMatrixArray@20")
Prototype.L _xSetEffectMatrixArray(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectMatrixArray._xSetEffectMatrixArray = GetFunction(*Library_, "xSetEffectMatrixArray")
Prototype.L _xSetEffectFloatArray_(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectFloatArray_._xSetEffectFloatArray_ = GetFunction(*Library_, "_xSetEffectFloatArray@20")
Prototype.L _xSetEffectFloatArray(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectFloatArray._xSetEffectFloatArray = GetFunction(*Library_, "xSetEffectFloatArray")
Prototype.L _xSetEffectIntArray_(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectIntArray_._xSetEffectIntArray_ = GetFunction(*Library_, "_xSetEffectIntArray@20")
Prototype.L _xSetEffectIntArray(entity.L, name.P-Ascii, value.L, count.L, layer.L)
Global xSetEffectIntArray._xSetEffectIntArray = GetFunction(*Library_, "xSetEffectIntArray")
Prototype.L _xCreateBufferVectors(count.L)
Global xCreateBufferVectors._xCreateBufferVectors = GetFunction(*Library_, "_xCreateBufferVectors@4")
Prototype.L _xBufferVectorsSetElement(buffer.L, number.L, x.F, y.F, z.F, w.F)
Global xBufferVectorsSetElement._xBufferVectorsSetElement = GetFunction(*Library_, "_xBufferVectorsSetElement@24")
Prototype.L _xCreateBufferMatrix(count.L)
Global xCreateBufferMatrix._xCreateBufferMatrix = GetFunction(*Library_, "_xCreateBufferMatrix@4")
Prototype.L _xBufferMatrixSetElement(buffer.L, number.L, matrix.L)
Global xBufferMatrixSetElement._xBufferMatrixSetElement = GetFunction(*Library_, "_xBufferMatrixSetElement@12")
Prototype.L _xBufferMatrixGetElement(buffer.L, number.L)
Global xBufferMatrixGetElement._xBufferMatrixGetElement = GetFunction(*Library_, "_xBufferMatrixGetElement@8")
Prototype.L _xCreateBufferFloats(count.L)
Global xCreateBufferFloats._xCreateBufferFloats = GetFunction(*Library_, "_xCreateBufferFloats@4")
Prototype.L _xBufferFloatsSetElement(buffer.L, number.L, value.F)
Global xBufferFloatsSetElement._xBufferFloatsSetElement = GetFunction(*Library_, "_xBufferFloatsSetElement@12")
Prototype.F _xBufferFloatsGetElement(buffer.L, number.L)
Global xBufferFloatsGetElement._xBufferFloatsGetElement = GetFunction(*Library_, "_xBufferFloatsGetElement@8")
Prototype.L _xBufferDelete(buffer.L)
Global xBufferDelete._xBufferDelete = GetFunction(*Library_, "_xBufferDelete@4")
Prototype.L _xSetEffectMatrixWithElements_(entity.L, name.P-Ascii, m11.F, m12.F, m13.F, m14.F, m21.F, m22.F, m23.F, m24.F, m31.F, m32.F, m33.F, m34.F, m41.F, m42.F, m43.F, m44.F, layer.L)
Global xSetEffectMatrixWithElements_._xSetEffectMatrixWithElements_ = GetFunction(*Library_, "_xSetEffectMatrixWithElements@76")
Prototype.L _xSetEffectMatrixWithElements(entity.L, name.P-Ascii, m11.F, m12.F, m13.F, m14.F, m21.F, m22.F, m23.F, m24.F, m31.F, m32.F, m33.F, m34.F, m41.F, m42.F, m43.F, m44.F, layer.L)
Global xSetEffectMatrixWithElements._xSetEffectMatrixWithElements = GetFunction(*Library_, "xSetEffectMatrixWithElements")
Prototype.L _xSetEffectMatrix_(entity.L, name.P-Ascii, matrix.L, layer.L)
Global xSetEffectMatrix_._xSetEffectMatrix_ = GetFunction(*Library_, "_xSetEffectMatrix@16")
Prototype.L _xSetEffectMatrix(entity.L, name.P-Ascii, matrix.L, layer.L)
Global xSetEffectMatrix._xSetEffectMatrix = GetFunction(*Library_, "xSetEffectMatrix")
Prototype.L _xSurfaceEffectMatrix_(surface.L, name.P-Ascii, matrix.L, layer.L)
Global xSurfaceEffectMatrix_._xSurfaceEffectMatrix_ = GetFunction(*Library_, "_xSurfaceEffectMatrix@16")
Prototype.L _xSurfaceEffectMatrix(surface.L, name.P-Ascii, matrix.L, layer.L)
Global xSurfaceEffectMatrix._xSurfaceEffectMatrix = GetFunction(*Library_, "xSurfaceEffectMatrix")
Prototype.L _xSurfaceEffectMatrixWithElements_(surface.L, name.P-Ascii, m11.F, m12.F, m13.F, m14.F, m21.F, m22.F, m23.F, m24.F, m31.F, m32.F, m33.F, m34.F, m41.F, m42.F, m43.F, m44.F, layer.L)
Global xSurfaceEffectMatrixWithElements_._xSurfaceEffectMatrixWithElements_ = GetFunction(*Library_, "_xSurfaceEffectMatrixWithElements@76")
Prototype.L _xSurfaceEffectMatrixWithElements(surface.L, name.P-Ascii, m11.F, m12.F, m13.F, m14.F, m21.F, m22.F, m23.F, m24.F, m31.F, m32.F, m33.F, m34.F, m41.F, m42.F, m43.F, m44.F, layer.L)
Global xSurfaceEffectMatrixWithElements._xSurfaceEffectMatrixWithElements = GetFunction(*Library_, "xSurfaceEffectMatrixWithElements")
Prototype.L _xSetEffectEntityTexture_(entity.L, name.P-Ascii, index.L, layer.L)
Global xSetEffectEntityTexture_._xSetEffectEntityTexture_ = GetFunction(*Library_, "_xSetEffectEntityTexture@16")
Prototype.L _xSetEffectEntityTexture(entity.L, name.P-Ascii, index.L, layer.L)
Global xSetEffectEntityTexture._xSetEffectEntityTexture = GetFunction(*Library_, "xSetEffectEntityTexture")
Prototype.L _xSetEffectTexture_(entity.L, name.P-Ascii, texture.L, frame.L, layer.L, isRecursive.L)
Global xSetEffectTexture_._xSetEffectTexture_ = GetFunction(*Library_, "_xSetEffectTexture@24")
Prototype.L _xSetEffectTexture(entity.L, name.P-Ascii, texture.L, frame.L, layer.L, isRecursive.L)
Global xSetEffectTexture._xSetEffectTexture = GetFunction(*Library_, "xSetEffectTexture")
Prototype.L _xSurfaceEffectTexture_(surface.L, name.P-Ascii, texture.L, frame.L, layer.L)
Global xSurfaceEffectTexture_._xSurfaceEffectTexture_ = GetFunction(*Library_, "_xSurfaceEffectTexture@20")
Prototype.L _xSurfaceEffectTexture(surface.L, name.P-Ascii, texture.L, frame.L, layer.L)
Global xSurfaceEffectTexture._xSurfaceEffectTexture = GetFunction(*Library_, "xSurfaceEffectTexture")
Prototype.L _xSurfaceEffectMatrixSemantic_(surface.L, name.P-Ascii, value.L, layer.L)
Global xSurfaceEffectMatrixSemantic_._xSurfaceEffectMatrixSemantic_ = GetFunction(*Library_, "_xSurfaceEffectMatrixSemantic@16")
Prototype.L _xSurfaceEffectMatrixSemantic(surface.L, name.P-Ascii, value.L, layer.L)
Global xSurfaceEffectMatrixSemantic._xSurfaceEffectMatrixSemantic = GetFunction(*Library_, "xSurfaceEffectMatrixSemantic")
Prototype.L _xSetEffectMatrixSemantic_(entity.L, name.P-Ascii, value.L, layer.L)
Global xSetEffectMatrixSemantic_._xSetEffectMatrixSemantic_ = GetFunction(*Library_, "_xSetEffectMatrixSemantic@16")
Prototype.L _xSetEffectMatrixSemantic(entity.L, name.P-Ascii, value.L, layer.L)
Global xSetEffectMatrixSemantic._xSetEffectMatrixSemantic = GetFunction(*Library_, "xSetEffectMatrixSemantic")
Prototype.L _xDeleteSurfaceConstant_(surface.L, name.P-Ascii, layer.L)
Global xDeleteSurfaceConstant_._xDeleteSurfaceConstant_ = GetFunction(*Library_, "_xDeleteSurfaceConstant@12")
Prototype.L _xDeleteSurfaceConstant(surface.L, name.P-Ascii, layer.L)
Global xDeleteSurfaceConstant._xDeleteSurfaceConstant = GetFunction(*Library_, "xDeleteSurfaceConstant")
Prototype.L _xDeleteEffectConstant_(entity.L, name.P-Ascii, layer.L)
Global xDeleteEffectConstant_._xDeleteEffectConstant_ = GetFunction(*Library_, "_xDeleteEffectConstant@12")
Prototype.L _xDeleteEffectConstant(entity.L, name.P-Ascii, layer.L)
Global xDeleteEffectConstant._xDeleteEffectConstant = GetFunction(*Library_, "xDeleteEffectConstant")
Prototype.L _xClearSurfaceConstants_(surface.L, layer.L)
Global xClearSurfaceConstants_._xClearSurfaceConstants_ = GetFunction(*Library_, "_xClearSurfaceConstants@8")
Prototype.L _xClearSurfaceConstants(surface.L, layer.L)
Global xClearSurfaceConstants._xClearSurfaceConstants = GetFunction(*Library_, "xClearSurfaceConstants")
Prototype.L _xClearEffectConstants_(entity.L, layer.L)
Global xClearEffectConstants_._xClearEffectConstants_ = GetFunction(*Library_, "_xClearEffectConstants@8")
Prototype.L _xClearEffectConstants(entity.L, layer.L)
Global xClearEffectConstants._xClearEffectConstants = GetFunction(*Library_, "xClearEffectConstants")
Prototype.L _xSetEffectTechnique_(entity.L, name.P-Ascii, layer.L)
Global xSetEffectTechnique_._xSetEffectTechnique_ = GetFunction(*Library_, "_xSetEffectTechnique@12")
Prototype.L _xSetEffectTechnique(entity.L, name.P-Ascii, layer.L)
Global xSetEffectTechnique._xSetEffectTechnique = GetFunction(*Library_, "xSetEffectTechnique")
Prototype.L _xSurfaceTechnique_(surface.L, name.P-Ascii, layer.L)
Global xSurfaceTechnique_._xSurfaceTechnique_ = GetFunction(*Library_, "_xSurfaceTechnique@12")
Prototype.L _xSurfaceTechnique(surface.L, name.P-Ascii, layer.L)
Global xSurfaceTechnique._xSurfaceTechnique = GetFunction(*Library_, "xSurfaceTechnique")
Prototype.L _xValidateEffectTechnique(effect.L, name.P-Ascii)
Global xValidateEffectTechnique._xValidateEffectTechnique = GetFunction(*Library_, "_xValidateEffectTechnique@8")
Prototype.L _xSetEntityShaderLayer(entity.L, layer.L)
Global xSetEntityShaderLayer._xSetEntityShaderLayer = GetFunction(*Library_, "_xSetEntityShaderLayer@8")
Prototype.L _xGetEntityShaderLayer(entity.L)
Global xGetEntityShaderLayer._xGetEntityShaderLayer = GetFunction(*Library_, "_xGetEntityShaderLayer@4")
Prototype.L _xSetSurfaceShaderLayer(surface.L, layer.L)
Global xSetSurfaceShaderLayer._xSetSurfaceShaderLayer = GetFunction(*Library_, "_xSetSurfaceShaderLayer@8")
Prototype.L _xGetSurfaceShaderLayer(surface.L)
Global xGetSurfaceShaderLayer._xGetSurfaceShaderLayer = GetFunction(*Library_, "_xGetSurfaceShaderLayer@4")
Prototype.L _xSetFXInt(effect.L, name.P-Ascii, value.L)
Global xSetFXInt._xSetFXInt = GetFunction(*Library_, "_xSetFXInt@12")
Prototype.L _xSetFXFloat(effect.L, name.P-Ascii, value.F)
Global xSetFXFloat._xSetFXFloat = GetFunction(*Library_, "_xSetFXFloat@12")
Prototype.L _xSetFXBool(effect.L, name.P-Ascii, value.L)
Global xSetFXBool._xSetFXBool = GetFunction(*Library_, "_xSetFXBool@12")
Prototype.L _xSetFXVector_(effect.L, name.P-Ascii, x.F, y.F, z.F, w.F)
Global xSetFXVector_._xSetFXVector_ = GetFunction(*Library_, "_xSetFXVector@24")
Prototype.L _xSetFXVector(effect.L, name.P-Ascii, x.F, y.F, z.F, w.F)
Global xSetFXVector._xSetFXVector = GetFunction(*Library_, "xSetFXVector")
Prototype.L _xSetFXVectorArray(effect.L, name.P-Ascii, value.L, count.L)
Global xSetFXVectorArray._xSetFXVectorArray = GetFunction(*Library_, "_xSetFXVectorArray@16")
Prototype.L _xSetFXMatrixArray(effect.L, name.P-Ascii, value.L, count.L)
Global xSetFXMatrixArray._xSetFXMatrixArray = GetFunction(*Library_, "_xSetFXMatrixArray@16")
Prototype.L _xSetFXFloatArray(effect.L, name.P-Ascii, value.L, count.L)
Global xSetFXFloatArray._xSetFXFloatArray = GetFunction(*Library_, "_xSetFXFloatArray@16")
Prototype.L _xSetFXIntArray(effect.L, name.P-Ascii, value.L, count.L)
Global xSetFXIntArray._xSetFXIntArray = GetFunction(*Library_, "_xSetFXIntArray@16")
Prototype.L _xSetFXEntityMatrix(effect.L, name.P-Ascii, matrix.L)
Global xSetFXEntityMatrix._xSetFXEntityMatrix = GetFunction(*Library_, "_xSetFXEntityMatrix@12")
Prototype.L _xSetFXTexture_(effect.L, name.P-Ascii, texture.L, frame.L)
Global xSetFXTexture_._xSetFXTexture_ = GetFunction(*Library_, "_xSetFXTexture@16")
Prototype.L _xSetFXTexture(effect.L, name.P-Ascii, texture.L, frame.L)
Global xSetFXTexture._xSetFXTexture = GetFunction(*Library_, "xSetFXTexture")
Prototype.L _xSetFXMatrixSemantic(effect.L, name.P-Ascii, value.L)
Global xSetFXMatrixSemantic._xSetFXMatrixSemantic = GetFunction(*Library_, "_xSetFXMatrixSemantic@12")
Prototype.L _xDeleteFXConstant(effect.L, name.P-Ascii)
Global xDeleteFXConstant._xDeleteFXConstant = GetFunction(*Library_, "_xDeleteFXConstant@8")
Prototype.L _xClearFXConstants(effect.L)
Global xClearFXConstants._xClearFXConstants = GetFunction(*Library_, "_xClearFXConstants@4")
Prototype.L _xSetFXTechnique(effect.L, name.P-Ascii)
Global xSetFXTechnique._xSetFXTechnique = GetFunction(*Library_, "_xSetFXTechnique@8")
Prototype.L _xCreateEmitter_(psystem.L, parent.L)
Global xCreateEmitter_._xCreateEmitter_ = GetFunction(*Library_, "_xCreateEmitter@8")
Prototype.L _xCreateEmitter(psystem.L, parent.L)
Global xCreateEmitter._xCreateEmitter = GetFunction(*Library_, "xCreateEmitter")
Prototype.L _xEmitterEnable(emitter.L, state.L)
Global xEmitterEnable._xEmitterEnable = GetFunction(*Library_, "_xEmitterEnable@8")
Prototype.L _xEmitterEnabled(emitter.L)
Global xEmitterEnabled._xEmitterEnabled = GetFunction(*Library_, "_xEmitterEnabled@4")
Prototype.L _xEmitterGetPSystem(emitter.L)
Global xEmitterGetPSystem._xEmitterGetPSystem = GetFunction(*Library_, "_xEmitterGetPSystem@4")
Prototype.L _xEmitterAddParticle(emitter.L)
Global xEmitterAddParticle._xEmitterAddParticle = GetFunction(*Library_, "_xEmitterAddParticle@4")
Prototype.L _xEmitterFreeParticle(emitter.L, particle.L)
Global xEmitterFreeParticle._xEmitterFreeParticle = GetFunction(*Library_, "_xEmitterFreeParticle@8")
Prototype.L _xEmitterValidateParticle(emitter.L, particle.L)
Global xEmitterValidateParticle._xEmitterValidateParticle = GetFunction(*Library_, "_xEmitterValidateParticle@8")
Prototype.L _xEmitterCountParticles(emitter.L)
Global xEmitterCountParticles._xEmitterCountParticles = GetFunction(*Library_, "_xEmitterCountParticles@4")
Prototype.L _xEmitterGetParticle(emitter.L, index.L)
Global xEmitterGetParticle._xEmitterGetParticle = GetFunction(*Library_, "_xEmitterGetParticle@8")
Prototype.L _xEmitterAlive(emitter.L)
Global xEmitterAlive._xEmitterAlive = GetFunction(*Library_, "_xEmitterAlive@4")
Prototype.L _xExtractAnimSeq_(entity.L, firstFrame.L, lastFrame.L, sequence.L)
Global xExtractAnimSeq_._xExtractAnimSeq_ = GetFunction(*Library_, "_xExtractAnimSeq@16")
Prototype.L _xExtractAnimSeq(entity.L, firstFrame.L, lastFrame.L, sequence.L)
Global xExtractAnimSeq._xExtractAnimSeq = GetFunction(*Library_, "xExtractAnimSeq")
Prototype.L _xLoadAnimSeq(entity.L, path.P-Ascii)
Global xLoadAnimSeq._xLoadAnimSeq = GetFunction(*Library_, "_xLoadAnimSeq@8")
Prototype.L _xSetAnimSpeed_(entity.L, speed.F, rootBone.P-Ascii)
Global xSetAnimSpeed_._xSetAnimSpeed_ = GetFunction(*Library_, "_xSetAnimSpeed@12")
Prototype.L _xSetAnimSpeed(entity.L, speed.F, rootBone.P-Ascii)
Global xSetAnimSpeed._xSetAnimSpeed = GetFunction(*Library_, "xSetAnimSpeed")
Prototype.F _xAnimSpeed_(entity.L, rootBone.P-Ascii)
Global xAnimSpeed_._xAnimSpeed_ = GetFunction(*Library_, "_xAnimSpeed@8")
Prototype.F _xAnimSpeed(entity.L, rootBone.P-Ascii)
Global xAnimSpeed._xAnimSpeed = GetFunction(*Library_, "xAnimSpeed")
Prototype.L _xAnimating_(entity.L, rootBone.P-Ascii)
Global xAnimating_._xAnimating_ = GetFunction(*Library_, "_xAnimating@8")
Prototype.L _xAnimating(entity.L, rootBone.P-Ascii)
Global xAnimating._xAnimating = GetFunction(*Library_, "xAnimating")
Prototype.F _xAnimTime_(entity.L, rootBone.P-Ascii)
Global xAnimTime_._xAnimTime_ = GetFunction(*Library_, "_xAnimTime@8")
Prototype.F _xAnimTime(entity.L, rootBone.P-Ascii)
Global xAnimTime._xAnimTime = GetFunction(*Library_, "xAnimTime")
Prototype.L _xAnimate_(entity.L, mode.L, speed.F, sequence.L, translate.F, rootBone.P-Ascii)
Global xAnimate_._xAnimate_ = GetFunction(*Library_, "_xAnimate@24")
Prototype.L _xAnimate(entity.L, mode.L, speed.F, sequence.L, translate.F, rootBone.P-Ascii)
Global xAnimate._xAnimate = GetFunction(*Library_, "xAnimate")
Prototype.L _xAnimSeq_(entity.L, rootBone.P-Ascii)
Global xAnimSeq_._xAnimSeq_ = GetFunction(*Library_, "_xAnimSeq@8")
Prototype.L _xAnimSeq(entity.L, rootBone.P-Ascii)
Global xAnimSeq._xAnimSeq = GetFunction(*Library_, "xAnimSeq")
Prototype.F _xAnimLength_(entity.L, rootBone.P-Ascii)
Global xAnimLength_._xAnimLength_ = GetFunction(*Library_, "_xAnimLength@8")
Prototype.F _xAnimLength(entity.L, rootBone.P-Ascii)
Global xAnimLength._xAnimLength = GetFunction(*Library_, "xAnimLength")
Prototype.L _xSetAnimTime_(entity.L, time.F, sequence.L, rootBone.P-Ascii)
Global xSetAnimTime_._xSetAnimTime_ = GetFunction(*Library_, "_xSetAnimTime@16")
Prototype.L _xSetAnimTime(entity.L, time.F, sequence.L, rootBone.P-Ascii)
Global xSetAnimTime._xSetAnimTime = GetFunction(*Library_, "xSetAnimTime")
Prototype.L _xSetAnimFrame_(entity.L, frame.F, sequence.L, rootBone.P-Ascii)
Global xSetAnimFrame_._xSetAnimFrame_ = GetFunction(*Library_, "_xSetAnimFrame@16")
Prototype.L _xSetAnimFrame(entity.L, frame.F, sequence.L, rootBone.P-Ascii)
Global xSetAnimFrame._xSetAnimFrame = GetFunction(*Library_, "xSetAnimFrame")
Prototype.L _xEntityAutoFade(entity.L, nearRange.F, farRange.F)
Global xEntityAutoFade._xEntityAutoFade = GetFunction(*Library_, "_xEntityAutoFade@12")
Prototype.L _xEntityOrder(entity.L, order.L)
Global xEntityOrder._xEntityOrder = GetFunction(*Library_, "_xEntityOrder@8")
Prototype.L _xFreeEntity(entity.L)
Global xFreeEntity._xFreeEntity = GetFunction(*Library_, "_xFreeEntity@4")
Prototype.L _xCopyEntity_(entity.L, parent.L, cloneBuffers.L)
Global xCopyEntity_._xCopyEntity_ = GetFunction(*Library_, "_xCopyEntity@12")
Prototype.L _xCopyEntity(entity.L, parent.L, cloneBuffers.L)
Global xCopyEntity._xCopyEntity = GetFunction(*Library_, "xCopyEntity")
Prototype.L _xPaintEntity(entity.L, brush.L)
Global xPaintEntity._xPaintEntity = GetFunction(*Library_, "_xPaintEntity@8")
Prototype.L _xEntityShininess(entity.L, shininess.F)
Global xEntityShininess._xEntityShininess = GetFunction(*Library_, "_xEntityShininess@8")
Prototype.L _xEntityPickMode_(entity.L, mode.L, obscurer.L, recursive.L)
Global xEntityPickMode_._xEntityPickMode_ = GetFunction(*Library_, "_xEntityPickMode@16")
Prototype.L _xEntityPickMode(entity.L, mode.L, obscurer.L, recursive.L)
Global xEntityPickMode._xEntityPickMode = GetFunction(*Library_, "xEntityPickMode")
Prototype.L _xEntityTexture_(entity.L, texture.L, frame.L, index.L, isRecursive.L)
Global xEntityTexture_._xEntityTexture_ = GetFunction(*Library_, "_xEntityTexture@20")
Prototype.L _xEntityTexture(entity.L, texture.L, frame.L, index.L, isRecursive.L)
Global xEntityTexture._xEntityTexture = GetFunction(*Library_, "xEntityTexture")
Prototype.L _xEntityFX(entity.L, fx.L)
Global xEntityFX._xEntityFX = GetFunction(*Library_, "_xEntityFX@8")
Prototype.L _xGetParent(entity.L)
Global xGetParent._xGetParent = GetFunction(*Library_, "_xGetParent@4")
Prototype.L _xSetFrustumSphere(entity.L, x.F, y.F, z.F, radii.F)
Global xSetFrustumSphere._xSetFrustumSphere = GetFunction(*Library_, "_xSetFrustumSphere@20")
Prototype.L _xCalculateFrustumVolume(entity.L)
Global xCalculateFrustumVolume._xCalculateFrustumVolume = GetFunction(*Library_, "_xCalculateFrustumVolume@4")
Prototype.L _xEntityParent_(entity.L, parent.L, isGlobal.L)
Global xEntityParent_._xEntityParent_ = GetFunction(*Library_, "_xEntityParent@12")
Prototype.L _xEntityParent(entity.L, parent.L, isGlobal.L)
Global xEntityParent._xEntityParent = GetFunction(*Library_, "xEntityParent")
Prototype.L _xShowEntity(entity.L)
Global xShowEntity._xShowEntity = GetFunction(*Library_, "_xShowEntity@4")
Prototype.L _xHideEntity(entity.L)
Global xHideEntity._xHideEntity = GetFunction(*Library_, "_xHideEntity@4")
Prototype.L _xNameEntity(entity.L, name.P-Ascii)
Global xNameEntity._xNameEntity = GetFunction(*Library_, "_xNameEntity@8")
Prototype.L _xSetEntityQuaternion(entity.L, quaternion.L)
Global xSetEntityQuaternion._xSetEntityQuaternion = GetFunction(*Library_, "_xSetEntityQuaternion@8")
Prototype.L _xSetEntityMatrix(entity.L, matrix.L)
Global xSetEntityMatrix._xSetEntityMatrix = GetFunction(*Library_, "_xSetEntityMatrix@8")
Prototype.L _xEntityAlpha(entity.L, alpha.F)
Global xEntityAlpha._xEntityAlpha = GetFunction(*Library_, "_xEntityAlpha@8")
Prototype.L _xEntityColor(entity.L, red.L, green.L, blue.L)
Global xEntityColor._xEntityColor = GetFunction(*Library_, "_xEntityColor@16")
Prototype.L _xEntitySpecularColor(entity.L, red.L, green.L, blue.L)
Global xEntitySpecularColor._xEntitySpecularColor = GetFunction(*Library_, "_xEntitySpecularColor@16")
Prototype.L _xEntityAmbientColor(entity.L, red.L, green.L, blue.L)
Global xEntityAmbientColor._xEntityAmbientColor = GetFunction(*Library_, "_xEntityAmbientColor@16")
Prototype.L _xEntityEmissiveColor(entity.L, red.L, green.L, blue.L)
Global xEntityEmissiveColor._xEntityEmissiveColor = GetFunction(*Library_, "_xEntityEmissiveColor@16")
Prototype.L _xEntityBlend(entity.L, mode.L)
Global xEntityBlend._xEntityBlend = GetFunction(*Library_, "_xEntityBlend@8")
Prototype.L _xEntityAlphaRef(entity.L, value.L)
Global xEntityAlphaRef._xEntityAlphaRef = GetFunction(*Library_, "_xEntityAlphaRef@8")
Prototype.L _xEntityAlphaFunc(entity.L, value.L)
Global xEntityAlphaFunc._xEntityAlphaFunc = GetFunction(*Library_, "_xEntityAlphaFunc@8")
Prototype.L _xCreateInstance_(entity.L, parent.L)
Global xCreateInstance_._xCreateInstance_ = GetFunction(*Library_, "_xCreateInstance@8")
Prototype.L _xCreateInstance(entity.L, parent.L)
Global xCreateInstance._xCreateInstance = GetFunction(*Library_, "xCreateInstance")
Prototype.L _xFreezeInstances_(entity.L, enable.L)
Global xFreezeInstances_._xFreezeInstances_ = GetFunction(*Library_, "_xFreezeInstances@8")
Prototype.L _xFreezeInstances(entity.L, enable.L)
Global xFreezeInstances._xFreezeInstances = GetFunction(*Library_, "xFreezeInstances")
Prototype.L _xInstancingAvaliable()
Global xInstancingAvaliable._xInstancingAvaliable = GetFunction(*Library_, "_xInstancingAvaliable@0")
Prototype.L _xGetEntityWorld(entity.L)
Global xGetEntityWorld._xGetEntityWorld = GetFunction(*Library_, "_xGetEntityWorld@4")
Prototype.L _xSetEntityWorld(entity.L, world.L)
Global xSetEntityWorld._xSetEntityWorld = GetFunction(*Library_, "_xSetEntityWorld@8")
Prototype.L _xScaleEntity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xScaleEntity_._xScaleEntity_ = GetFunction(*Library_, "_xScaleEntity@20")
Prototype.L _xScaleEntity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xScaleEntity._xScaleEntity = GetFunction(*Library_, "xScaleEntity")
Prototype.L _xPositionEntity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xPositionEntity_._xPositionEntity_ = GetFunction(*Library_, "_xPositionEntity@20")
Prototype.L _xPositionEntity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xPositionEntity._xPositionEntity = GetFunction(*Library_, "xPositionEntity")
Prototype.L _xMoveEntity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xMoveEntity_._xMoveEntity_ = GetFunction(*Library_, "_xMoveEntity@20")
Prototype.L _xMoveEntity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xMoveEntity._xMoveEntity = GetFunction(*Library_, "xMoveEntity")
Prototype.L _xTranslateEntity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xTranslateEntity_._xTranslateEntity_ = GetFunction(*Library_, "_xTranslateEntity@20")
Prototype.L _xTranslateEntity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xTranslateEntity._xTranslateEntity = GetFunction(*Library_, "xTranslateEntity")
Prototype.L _xRotateEntity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xRotateEntity_._xRotateEntity_ = GetFunction(*Library_, "_xRotateEntity@20")
Prototype.L _xRotateEntity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xRotateEntity._xRotateEntity = GetFunction(*Library_, "xRotateEntity")
Prototype.L _xTurnEntity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xTurnEntity_._xTurnEntity_ = GetFunction(*Library_, "_xTurnEntity@20")
Prototype.L _xTurnEntity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xTurnEntity._xTurnEntity = GetFunction(*Library_, "xTurnEntity")
Prototype.L _xPointEntity_(entity1.L, entity2.L, roll.F)
Global xPointEntity_._xPointEntity_ = GetFunction(*Library_, "_xPointEntity@12")
Prototype.L _xPointEntity(entity1.L, entity2.L, roll.F)
Global xPointEntity._xPointEntity = GetFunction(*Library_, "xPointEntity")
Prototype.L _xAlignToVector_(entity.L, x.F, y.F, z.F, axis.L, factor.F)
Global xAlignToVector_._xAlignToVector_ = GetFunction(*Library_, "_xAlignToVector@24")
Prototype.L _xAlignToVector(entity.L, x.F, y.F, z.F, axis.L, factor.F)
Global xAlignToVector._xAlignToVector = GetFunction(*Library_, "xAlignToVector")
Prototype.F _xEntityDistance(entity1.L, entity2.L)
Global xEntityDistance._xEntityDistance = GetFunction(*Library_, "_xEntityDistance@8")
Prototype.F _xGetMatElement(entity.L, row.L, col.L)
Global xGetMatElement._xGetMatElement = GetFunction(*Library_, "_xGetMatElement@12")
Prototype.I _xEntityClass(entity.L)
Global xEntityClass_._xEntityClass = GetFunction(*Library_, "_xEntityClass@4")
Macro xEntityClass(entity) : PeekS(xEntityClass_(entity), -1, #PB_Ascii) : EndMacro
Prototype.L _xGetEntityBrush(entity.L)
Global xGetEntityBrush._xGetEntityBrush = GetFunction(*Library_, "_xGetEntityBrush@4")
Prototype.F _xEntityX_(entity.L, isGlobal.L)
Global xEntityX_._xEntityX_ = GetFunction(*Library_, "_xEntityX@8")
Prototype.F _xEntityX(entity.L, isGlobal.L)
Global xEntityX._xEntityX = GetFunction(*Library_, "xEntityX")
Prototype.F _xEntityY_(entity.L, isGlobal.L)
Global xEntityY_._xEntityY_ = GetFunction(*Library_, "_xEntityY@8")
Prototype.F _xEntityY(entity.L, isGlobal.L)
Global xEntityY._xEntityY = GetFunction(*Library_, "xEntityY")
Prototype.F _xEntityZ_(entity.L, isGlobal.L)
Global xEntityZ_._xEntityZ_ = GetFunction(*Library_, "_xEntityZ@8")
Prototype.F _xEntityZ(entity.L, isGlobal.L)
Global xEntityZ._xEntityZ = GetFunction(*Library_, "xEntityZ")
Prototype.L _xEntityVisible(entity.L, destination.L)
Global xEntityVisible._xEntityVisible = GetFunction(*Library_, "_xEntityVisible@8")
Prototype.F _xEntityScaleX(entity.L)
Global xEntityScaleX._xEntityScaleX = GetFunction(*Library_, "_xEntityScaleX@4")
Prototype.F _xEntityScaleY(entity.L)
Global xEntityScaleY._xEntityScaleY = GetFunction(*Library_, "_xEntityScaleY@4")
Prototype.F _xEntityScaleZ(entity.L)
Global xEntityScaleZ._xEntityScaleZ = GetFunction(*Library_, "_xEntityScaleZ@4")
Prototype.F _xEntityRoll_(entity.L, isGlobal.L)
Global xEntityRoll_._xEntityRoll_ = GetFunction(*Library_, "_xEntityRoll@8")
Prototype.F _xEntityRoll(entity.L, isGlobal.L)
Global xEntityRoll._xEntityRoll = GetFunction(*Library_, "xEntityRoll")
Prototype.F _xEntityYaw_(entity.L, isGlobal.L)
Global xEntityYaw_._xEntityYaw_ = GetFunction(*Library_, "_xEntityYaw@8")
Prototype.F _xEntityYaw(entity.L, isGlobal.L)
Global xEntityYaw._xEntityYaw = GetFunction(*Library_, "xEntityYaw")
Prototype.F _xEntityPitch_(entity.L, isGlobal.L)
Global xEntityPitch_._xEntityPitch_ = GetFunction(*Library_, "_xEntityPitch@8")
Prototype.F _xEntityPitch(entity.L, isGlobal.L)
Global xEntityPitch._xEntityPitch = GetFunction(*Library_, "xEntityPitch")
Prototype.I _xEntityName(entity.L)
Global xEntityName_._xEntityName = GetFunction(*Library_, "_xEntityName@4")
Macro xEntityName(entity) : PeekS(xEntityName_(entity), -1, #PB_Ascii) : EndMacro
Prototype.L _xCountChildren(entity.L)
Global xCountChildren._xCountChildren = GetFunction(*Library_, "_xCountChildren@4")
Prototype.L _xGetChild(entity.L, index.L)
Global xGetChild._xGetChild = GetFunction(*Library_, "_xGetChild@8")
Prototype.L _xEntityInView(entity.L, camera.L)
Global xEntityInView._xEntityInView = GetFunction(*Library_, "_xEntityInView@8")
Prototype.L _xFindChild(entity.L, name.P-Ascii)
Global xFindChild._xFindChild = GetFunction(*Library_, "_xFindChild@8")
Prototype.L _xGetEntityMatrix(entity.L)
Global xGetEntityMatrix._xGetEntityMatrix = GetFunction(*Library_, "_xGetEntityMatrix@4")
Prototype.F _xGetEntityAlpha(entity.L)
Global xGetEntityAlpha._xGetEntityAlpha = GetFunction(*Library_, "_xGetEntityAlpha@4")
Prototype.L _xGetAlphaRef(entity.L)
Global xGetAlphaRef._xGetAlphaRef = GetFunction(*Library_, "_xGetAlphaRef@4")
Prototype.L _xGetAlphaFunc(entity.L)
Global xGetAlphaFunc._xGetAlphaFunc = GetFunction(*Library_, "_xGetAlphaFunc@4")
Prototype.L _xEntityRed(entity.L)
Global xEntityRed._xEntityRed = GetFunction(*Library_, "_xEntityRed@4")
Prototype.L _xEntityGreen(entity.L)
Global xEntityGreen._xEntityGreen = GetFunction(*Library_, "_xEntityGreen@4")
Prototype.L _xEntityBlue(entity.L)
Global xEntityBlue._xEntityBlue = GetFunction(*Library_, "_xEntityBlue@4")
Prototype.F _xGetEntityShininess(entity.L)
Global xGetEntityShininess._xGetEntityShininess = GetFunction(*Library_, "_xGetEntityShininess@4")
Prototype.L _xGetEntityBlend(entity.L)
Global xGetEntityBlend._xGetEntityBlend = GetFunction(*Library_, "_xGetEntityBlend@4")
Prototype.L _xGetEntityFX(entity.L)
Global xGetEntityFX._xGetEntityFX = GetFunction(*Library_, "_xGetEntityFX@4")
Prototype.L _xEntityHidden(entity.L)
Global xEntityHidden._xEntityHidden = GetFunction(*Library_, "_xEntityHidden@4")
Prototype.L _xEntitiesBBIntersect(entity1.L, entity2.L)
Global xEntitiesBBIntersect._xEntitiesBBIntersect = GetFunction(*Library_, "_xEntitiesBBIntersect@8")
Prototype.L _xMountPackFile_(path.P-Ascii, mountpoint.P-Ascii, password.P-Ascii)
Global xMountPackFile_._xMountPackFile_ = GetFunction(*Library_, "_xMountPackFile@12")
Prototype.L _xMountPackFile(path.P-Ascii, mountpoint.P-Ascii, password.P-Ascii)
Global xMountPackFile._xMountPackFile = GetFunction(*Library_, "xMountPackFile")
Prototype.L _xUnmountPackFile(packfile.L)
Global xUnmountPackFile._xUnmountPackFile = GetFunction(*Library_, "_xUnmountPackFile@4")
Prototype.L _xOpenFile(path.P-Ascii)
Global xOpenFile._xOpenFile = GetFunction(*Library_, "_xOpenFile@4")
Prototype.L _xReadFile(path.P-Ascii)
Global xReadFile._xReadFile = GetFunction(*Library_, "_xReadFile@4")
Prototype.L _xWriteFile(path.P-Ascii)
Global xWriteFile._xWriteFile = GetFunction(*Library_, "_xWriteFile@4")
Prototype.L _xCloseFile(file.L)
Global xCloseFile._xCloseFile = GetFunction(*Library_, "_xCloseFile@4")
Prototype.L _xFilePos(file.L)
Global xFilePos._xFilePos = GetFunction(*Library_, "_xFilePos@4")
Prototype.L _xSeekFile(file.L, offset.L)
Global xSeekFile._xSeekFile = GetFunction(*Library_, "_xSeekFile@8")
Prototype.L _xFileType(path.P-Ascii)
Global xFileType._xFileType = GetFunction(*Library_, "_xFileType@4")
Prototype.L _xFileSize(path.P-Ascii)
Global xFileSize._xFileSize = GetFunction(*Library_, "_xFileSize@4")
Prototype.L _xFileCreationTime(path.P-Ascii)
Global xFileCreationTime._xFileCreationTime = GetFunction(*Library_, "_xFileCreationTime@4")
Prototype.I _xFileCreationTimeStr(path.P-Ascii)
Global xFileCreationTimeStr_._xFileCreationTimeStr = GetFunction(*Library_, "_xFileCreationTimeStr@4")
Macro xFileCreationTimeStr(path) : PeekS(xFileCreationTimeStr_(path), -1, #PB_Ascii) : EndMacro
Prototype.L _xFileModificationTime(path.P-Ascii)
Global xFileModificationTime._xFileModificationTime = GetFunction(*Library_, "_xFileModificationTime@4")
Prototype.I _xFileModificationTimeStr(path.P-Ascii)
Global xFileModificationTimeStr_._xFileModificationTimeStr = GetFunction(*Library_, "_xFileModificationTimeStr@4")
Macro xFileModificationTimeStr(path) : PeekS(xFileModificationTimeStr_(path), -1, #PB_Ascii) : EndMacro
Prototype.L _xReadDir(path.P-Ascii)
Global xReadDir._xReadDir = GetFunction(*Library_, "_xReadDir@4")
Prototype.L _xCloseDir(handle.L)
Global xCloseDir._xCloseDir = GetFunction(*Library_, "_xCloseDir@4")
Prototype.I _xNextFile(handle.L)
Global xNextFile_._xNextFile = GetFunction(*Library_, "_xNextFile@4")
Macro xNextFile(handle) : PeekS(xNextFile_(handle), -1, #PB_Ascii) : EndMacro
Prototype.I _xCurrentDir()
Global xCurrentDir_._xCurrentDir = GetFunction(*Library_, "_xCurrentDir@0")
Macro xCurrentDir() : PeekS(xCurrentDir_(), -1, #PB_Ascii) : EndMacro
Prototype.L _xChangeDir(path.P-Ascii)
Global xChangeDir._xChangeDir = GetFunction(*Library_, "_xChangeDir@4")
Prototype.L _xCreateDir(path.P-Ascii)
Global xCreateDir._xCreateDir = GetFunction(*Library_, "_xCreateDir@4")
Prototype.L _xDeleteDir(path.P-Ascii)
Global xDeleteDir._xDeleteDir = GetFunction(*Library_, "_xDeleteDir@4")
Prototype.L _xCopyFile(pathSrc.P-Ascii, pathDest.P-Ascii)
Global xCopyFile._xCopyFile = GetFunction(*Library_, "_xCopyFile@8")
Prototype.L _xDeleteFile(path.P-Ascii)
Global xDeleteFile._xDeleteFile = GetFunction(*Library_, "_xDeleteFile@4")
Prototype.L _xEof(file.L)
Global xEof._xEof = GetFunction(*Library_, "_xEof@4")
Prototype.L _xReadByte(file.L)
Global xReadByte._xReadByte = GetFunction(*Library_, "_xReadByte@4")
Prototype.L _xReadShort(file.L)
Global xReadShort._xReadShort = GetFunction(*Library_, "_xReadShort@4")
Prototype.L _xReadInt(file.L)
Global xReadInt._xReadInt = GetFunction(*Library_, "_xReadInt@4")
Prototype.F _xReadFloat(file.L)
Global xReadFloat._xReadFloat = GetFunction(*Library_, "_xReadFloat@4")
Prototype.I _xReadString(file.L)
Global xReadString_._xReadString = GetFunction(*Library_, "_xReadString@4")
Macro xReadString(file) : PeekS(xReadString_(file), -1, #PB_Ascii) : EndMacro
Prototype.I _xReadLine_(file.L, ls_flag.L)
Global xReadLine__._xReadLine_ = GetFunction(*Library_, "_xReadLine@8")
Macro xReadLine_(file,ls_flag) : PeekS(xReadLine__(file,ls_flag), -1, #PB_Ascii) : EndMacro
Prototype.L _xWriteByte(file.L, value.L)
Global xWriteByte._xWriteByte = GetFunction(*Library_, "_xWriteByte@8")
Prototype.L _xWriteShort(file.L, value.L)
Global xWriteShort._xWriteShort = GetFunction(*Library_, "_xWriteShort@8")
Prototype.L _xWriteInt(file.L, value.L)
Global xWriteInt._xWriteInt = GetFunction(*Library_, "_xWriteInt@8")
Prototype.L _xWriteFloat(file.L, value.F)
Global xWriteFloat._xWriteFloat = GetFunction(*Library_, "_xWriteFloat@8")
Prototype.L _xWriteString(file.L, value.P-Ascii)
Global xWriteString._xWriteString = GetFunction(*Library_, "_xWriteString@8")
Prototype.L _xWriteLine_(file.L, value.P-Ascii, ls_flag.L)
Global xWriteLine_._xWriteLine_ = GetFunction(*Library_, "_xWriteLine@12")
Prototype.L _xWriteLine(file.L, value.P-Ascii, ls_flag.L)
Global xWriteLine._xWriteLine = GetFunction(*Library_, "xWriteLine")
Prototype.L _xLoadFont_(name.P-Ascii, height.L, bold.L, italic.L, underline.L, fontface.P-Ascii)
Global xLoadFont_._xLoadFont_ = GetFunction(*Library_, "_xLoadFont@24")
Prototype.L _xLoadFont(name.P-Ascii, height.L, bold.L, italic.L, underline.L, fontface.P-Ascii)
Global xLoadFont._xLoadFont = GetFunction(*Library_, "xLoadFont")
Prototype.L _xText_(x.F, y.F, textString.P-Ascii, centerx.L, centery.L)
Global xText_._xText_ = GetFunction(*Library_, "_xText@20")
Prototype.L _xText(x.F, y.F, textString.P-Ascii, centerx.L, centery.L)
Global xText._xText = GetFunction(*Library_, "xText")
Prototype.L _xSetFont(font.L)
Global xSetFont._xSetFont = GetFunction(*Library_, "_xSetFont@4")
Prototype.L _xFreeFont(font.L)
Global xFreeFont._xFreeFont = GetFunction(*Library_, "_xFreeFont@4")
Prototype.L _xFontWidth()
Global xFontWidth._xFontWidth = GetFunction(*Library_, "_xFontWidth@0")
Prototype.L _xFontHeight()
Global xFontHeight._xFontHeight = GetFunction(*Library_, "_xFontHeight@0")
Prototype.L _xStringWidth(textString.P-Ascii)
Global xStringWidth._xStringWidth = GetFunction(*Library_, "_xStringWidth@4")
Prototype.L _xStringHeight(textString.P-Ascii)
Global xStringHeight._xStringHeight = GetFunction(*Library_, "_xStringHeight@4")
Prototype.L _xWinMessage(message.P-Ascii)
Global xWinMessage._xWinMessage = GetFunction(*Library_, "_xWinMessage@4")
Prototype.L _xGetMaxPixelShaderVersion()
Global xGetMaxPixelShaderVersion._xGetMaxPixelShaderVersion = GetFunction(*Library_, "_xGetMaxPixelShaderVersion@0")
Prototype.L _xLine(x1.L, y1.L, x2.L, y2.L)
Global xLine._xLine = GetFunction(*Library_, "_xLine@16")
Prototype.L _xRect_(x.L, y.L, width.L, height.L, solid.L)
Global xRect_._xRect_ = GetFunction(*Library_, "_xRect@20")
Prototype.L _xRect(x.L, y.L, width.L, height.L, solid.L)
Global xRect._xRect = GetFunction(*Library_, "xRect")
Prototype.L _xRectsOverlap(x1.L, y1.L, width1.L, height1.L, x2.L, y2.L, width2.L, height2.L)
Global xRectsOverlap._xRectsOverlap = GetFunction(*Library_, "_xRectsOverlap@32")
Prototype.L _xViewport(x.L, y.L, width.L, height.L)
Global xViewport._xViewport = GetFunction(*Library_, "_xViewport@16")
Prototype.L _xOval_(x.L, y.L, width.L, height.L, solid.L)
Global xOval_._xOval_ = GetFunction(*Library_, "_xOval@20")
Prototype.L _xOval(x.L, y.L, width.L, height.L, solid.L)
Global xOval._xOval = GetFunction(*Library_, "xOval")
Prototype.L _xOrigin(x.L, y.L)
Global xOrigin._xOrigin = GetFunction(*Library_, "_xOrigin@8")
Prototype.L _xGetMaxVertexShaderVersion()
Global xGetMaxVertexShaderVersion._xGetMaxVertexShaderVersion = GetFunction(*Library_, "_xGetMaxVertexShaderVersion@0")
Prototype.L _xGetMaxAntiAlias()
Global xGetMaxAntiAlias._xGetMaxAntiAlias = GetFunction(*Library_, "_xGetMaxAntiAlias@0")
Prototype.L _xGetMaxTextureFiltering()
Global xGetMaxTextureFiltering._xGetMaxTextureFiltering = GetFunction(*Library_, "_xGetMaxTextureFiltering@0")
Prototype.L _xSetAntiAliasType(typeID.L)
Global xSetAntiAliasType._xSetAntiAliasType = GetFunction(*Library_, "_xSetAntiAliasType@4")
Prototype.L _xAppTitle(title.P-Ascii)
Global xAppTitle._xAppTitle = GetFunction(*Library_, "_xAppTitle@4")
Prototype.L _xSetWND(window.L)
Global xSetWND._xSetWND = GetFunction(*Library_, "_xSetWND@4")
Prototype.L _xSetRenderWindow(window.L)
Global xSetRenderWindow._xSetRenderWindow = GetFunction(*Library_, "_xSetRenderWindow@4")
Prototype.L _xSetTopWindow(window.L)
Global xSetTopWindow._xSetTopWindow = GetFunction(*Library_, "_xSetTopWindow@4")
Prototype.L _xDestroyRenderWindow()
Global xDestroyRenderWindow._xDestroyRenderWindow = GetFunction(*Library_, "_xDestroyRenderWindow@0")
Prototype.L _xFlip()
Global xFlip._xFlip = GetFunction(*Library_, "_xFlip@0")
Prototype.L _xBackBuffer()
Global xBackBuffer._xBackBuffer = GetFunction(*Library_, "_xBackBuffer@0")
Prototype.L _xLockBuffer_(buffer.L)
Global xLockBuffer_._xLockBuffer_ = GetFunction(*Library_, "_xLockBuffer@4")
Prototype.L _xLockBuffer(buffer.L)
Global xLockBuffer._xLockBuffer = GetFunction(*Library_, "xLockBuffer")
Prototype.L _xUnlockBuffer_(buffer.L)
Global xUnlockBuffer_._xUnlockBuffer_ = GetFunction(*Library_, "_xUnlockBuffer@4")
Prototype.L _xUnlockBuffer(buffer.L)
Global xUnlockBuffer._xUnlockBuffer = GetFunction(*Library_, "xUnlockBuffer")
Prototype.L _xWritePixelFast_(x.L, y.L, argb.L, buffer.L)
Global xWritePixelFast_._xWritePixelFast_ = GetFunction(*Library_, "_xWritePixelFast@16")
Prototype.L _xWritePixelFast(x.L, y.L, argb.L, buffer.L)
Global xWritePixelFast._xWritePixelFast = GetFunction(*Library_, "xWritePixelFast")
Prototype.L _xReadPixelFast_(x.L, y.L, buffer.L)
Global xReadPixelFast_._xReadPixelFast_ = GetFunction(*Library_, "_xReadPixelFast@12")
Prototype.L _xReadPixelFast(x.L, y.L, buffer.L)
Global xReadPixelFast._xReadPixelFast = GetFunction(*Library_, "xReadPixelFast")
Prototype.L _xGetPixels_(buffer.L)
Global xGetPixels_._xGetPixels_ = GetFunction(*Library_, "_xGetPixels@4")
Prototype.L _xGetPixels(buffer.L)
Global xGetPixels._xGetPixels = GetFunction(*Library_, "xGetPixels")
Prototype.L _xSaveBuffer(buffer.L, path.P-Ascii)
Global xSaveBuffer._xSaveBuffer = GetFunction(*Library_, "_xSaveBuffer@8")
Prototype.L _xGetCurrentBuffer()
Global xGetCurrentBuffer._xGetCurrentBuffer = GetFunction(*Library_, "_xGetCurrentBuffer@0")
Prototype.L _xBufferWidth_(buffer.L)
Global xBufferWidth_._xBufferWidth_ = GetFunction(*Library_, "_xBufferWidth@4")
Prototype.L _xBufferWidth(buffer.L)
Global xBufferWidth._xBufferWidth = GetFunction(*Library_, "xBufferWidth")
Prototype.L _xBufferHeight_(buffer.L)
Global xBufferHeight_._xBufferHeight_ = GetFunction(*Library_, "_xBufferHeight@4")
Prototype.L _xBufferHeight(buffer.L)
Global xBufferHeight._xBufferHeight = GetFunction(*Library_, "xBufferHeight")
Prototype.L _xCatchTimestamp()
Global xCatchTimestamp._xCatchTimestamp = GetFunction(*Library_, "_xCatchTimestamp@0")
Prototype.F _xGetElapsedTime(timeStamp.L)
Global xGetElapsedTime._xGetElapsedTime = GetFunction(*Library_, "_xGetElapsedTime@4")
Prototype.L _xSetBuffer_(buffer.L)
Global xSetBuffer_._xSetBuffer_ = GetFunction(*Library_, "_xSetBuffer@4")
Prototype.L _xSetBuffer(buffer.L)
Global xSetBuffer._xSetBuffer = GetFunction(*Library_, "xSetBuffer")
Prototype.L _xSetMRT(buffer.L, frame.L, index.L)
Global xSetMRT._xSetMRT = GetFunction(*Library_, "_xSetMRT@12")
Prototype.L _xUnSetMRT()
Global xUnSetMRT._xUnSetMRT = GetFunction(*Library_, "_xUnSetMRT@0")
Prototype.L _xGetNumberRT()
Global xGetNumberRT._xGetNumberRT = GetFunction(*Library_, "_xGetNumberRT@0")
Prototype.L _xTextureBuffer_(texture.L, frame.L)
Global xTextureBuffer_._xTextureBuffer_ = GetFunction(*Library_, "_xTextureBuffer@8")
Prototype.L _xTextureBuffer(texture.L, frame.L)
Global xTextureBuffer._xTextureBuffer = GetFunction(*Library_, "xTextureBuffer")
Prototype.L _xLoadBuffer(buffer.L, path.P-Ascii)
Global xLoadBuffer._xLoadBuffer = GetFunction(*Library_, "_xLoadBuffer@8")
Prototype.L _xWritePixel_(x.L, y.L, argb.L, buffer.L)
Global xWritePixel_._xWritePixel_ = GetFunction(*Library_, "_xWritePixel@16")
Prototype.L _xWritePixel(x.L, y.L, argb.L, buffer.L)
Global xWritePixel._xWritePixel = GetFunction(*Library_, "xWritePixel")
Prototype.L _xCopyPixel(sx.L, sy.L, sourceBuffer.L, dx.L, dy.L, destinationBuffer.L)
Global xCopyPixel._xCopyPixel = GetFunction(*Library_, "_xCopyPixel@24")
Prototype.L _xCopyPixelFast(sx.L, sy.L, sourceBuffer.L, dx.L, dy.L, destinationBuffer.L)
Global xCopyPixelFast._xCopyPixelFast = GetFunction(*Library_, "_xCopyPixelFast@24")
Prototype.L _xCopyRect(sx.L, sy.L, sw.L, sh.L, dx.L, dy.L, sourceBuffer.L, destinationBuffer.L)
Global xCopyRect._xCopyRect = GetFunction(*Library_, "_xCopyRect@32")
Prototype.L _xGraphicsBuffer()
Global xGraphicsBuffer._xGraphicsBuffer = GetFunction(*Library_, "_xGraphicsBuffer@0")
Prototype.L _xGetColor(x.L, y.L)
Global xGetColor._xGetColor = GetFunction(*Library_, "_xGetColor@8")
Prototype.L _xReadPixel_(x.L, y.L, buffer.L)
Global xReadPixel_._xReadPixel_ = GetFunction(*Library_, "_xReadPixel@12")
Prototype.L _xReadPixel(x.L, y.L, buffer.L)
Global xReadPixel._xReadPixel = GetFunction(*Library_, "xReadPixel")
Prototype.L _xGraphicsWidth_(isVirtual.L)
Global xGraphicsWidth_._xGraphicsWidth_ = GetFunction(*Library_, "_xGraphicsWidth@4")
Prototype.L _xGraphicsWidth(isVirtual.L)
Global xGraphicsWidth._xGraphicsWidth = GetFunction(*Library_, "xGraphicsWidth")
Prototype.L _xGraphicsHeight_(isVirtual.L)
Global xGraphicsHeight_._xGraphicsHeight_ = GetFunction(*Library_, "_xGraphicsHeight@4")
Prototype.L _xGraphicsHeight(isVirtual.L)
Global xGraphicsHeight._xGraphicsHeight = GetFunction(*Library_, "xGraphicsHeight")
Prototype.L _xGraphicsDepth()
Global xGraphicsDepth._xGraphicsDepth = GetFunction(*Library_, "_xGraphicsDepth@0")
Prototype.L _xColorAlpha()
Global xColorAlpha._xColorAlpha = GetFunction(*Library_, "_xColorAlpha@0")
Prototype.L _xColorRed()
Global xColorRed._xColorRed = GetFunction(*Library_, "_xColorRed@0")
Prototype.L _xColorGreen()
Global xColorGreen._xColorGreen = GetFunction(*Library_, "_xColorGreen@0")
Prototype.L _xColorBlue()
Global xColorBlue._xColorBlue = GetFunction(*Library_, "_xColorBlue@0")
Prototype.L _xClsColor_(red.L, green.L, blue.L, alpha.L)
Global xClsColor_._xClsColor_ = GetFunction(*Library_, "_xClsColor@16")
Prototype.L _xClsColor(red.L, green.L, blue.L, alpha.L)
Global xClsColor._xClsColor = GetFunction(*Library_, "xClsColor")
Prototype.L _xClearWorld_(entities.L, brushes.L, textures.L)
Global xClearWorld_._xClearWorld_ = GetFunction(*Library_, "_xClearWorld@12")
Prototype.L _xClearWorld(entities.L, brushes.L, textures.L)
Global xClearWorld._xClearWorld = GetFunction(*Library_, "xClearWorld")
Prototype.L _xColor_(red.L, green.L, blue.L, alpha.L)
Global xColor_._xColor_ = GetFunction(*Library_, "_xColor@16")
Prototype.L _xColor(red.L, green.L, blue.L, alpha.L)
Global xColor._xColor = GetFunction(*Library_, "xColor")
Prototype.L _xCls()
Global xCls._xCls = GetFunction(*Library_, "_xCls@0")
Prototype.L _xUpdateWorld_(speed.F)
Global xUpdateWorld_._xUpdateWorld_ = GetFunction(*Library_, "_xUpdateWorld@4")
Prototype.L _xUpdateWorld(speed.F)
Global xUpdateWorld._xUpdateWorld = GetFunction(*Library_, "xUpdateWorld")
Prototype.L _xRenderEntity_(camera.L, entity.L, tween.F)
Global xRenderEntity_._xRenderEntity_ = GetFunction(*Library_, "_xRenderEntity@12")
Prototype.L _xRenderEntity(camera.L, entity.L, tween.F)
Global xRenderEntity._xRenderEntity = GetFunction(*Library_, "xRenderEntity")
Prototype.L _xRenderWorld_(tween.F, renderShadows.L)
Global xRenderWorld_._xRenderWorld_ = GetFunction(*Library_, "_xRenderWorld@8")
Prototype.L _xRenderWorld(tween.F, renderShadows.L)
Global xRenderWorld._xRenderWorld = GetFunction(*Library_, "xRenderWorld")
Prototype.L _xSetAutoTB(flag.L)
Global xSetAutoTB._xSetAutoTB = GetFunction(*Library_, "_xSetAutoTB@4")
Prototype.L _xMaxClipPlanes()
Global xMaxClipPlanes._xMaxClipPlanes = GetFunction(*Library_, "_xMaxClipPlanes@0")
Prototype.L _xWireframe(state.L)
Global xWireframe._xWireframe = GetFunction(*Library_, "_xWireframe@4")
Prototype.L _xDither(state.L)
Global xDither._xDither = GetFunction(*Library_, "_xDither@4")
Prototype.L _xSetSkinningMethod(skinMethod.L)
Global xSetSkinningMethod._xSetSkinningMethod = GetFunction(*Library_, "_xSetSkinningMethod@4")
Prototype.L _xTrisRendered()
Global xTrisRendered._xTrisRendered = GetFunction(*Library_, "_xTrisRendered@0")
Prototype.L _xDIPCounter()
Global xDIPCounter._xDIPCounter = GetFunction(*Library_, "_xDIPCounter@0")
Prototype.L _xSurfRendered()
Global xSurfRendered._xSurfRendered = GetFunction(*Library_, "_xSurfRendered@0")
Prototype.L _xEntityRendered()
Global xEntityRendered._xEntityRendered = GetFunction(*Library_, "_xEntityRendered@0")
Prototype.L _xAmbientLight_(red.L, green.L, blue.L, world.L)
Global xAmbientLight_._xAmbientLight_ = GetFunction(*Library_, "_xAmbientLight@16")
Prototype.L _xAmbientLight(red.L, green.L, blue.L, world.L)
Global xAmbientLight._xAmbientLight = GetFunction(*Library_, "xAmbientLight")
Prototype.L _xGetFPS()
Global xGetFPS._xGetFPS = GetFunction(*Library_, "_xGetFPS@0")
Prototype.L _xAntiAlias(state.L)
Global xAntiAlias._xAntiAlias = GetFunction(*Library_, "_xAntiAlias@4")
Prototype.L _xSetTextureFiltering(filter.L)
Global xSetTextureFiltering._xSetTextureFiltering = GetFunction(*Library_, "_xSetTextureFiltering@4")
Prototype.L _xStretchRect(texture1.L, x1.L, y1.L, width1.L, height1.L, texture2.L, x2.L, y2.L, width2.L, height2.L, filter.L)
Global xStretchRect._xStretchRect = GetFunction(*Library_, "_xStretchRect@44")
Prototype.L _xStretchBackBuffer(texture.L, x.L, y.L, width.L, height.L, filter.L)
Global xStretchBackBuffer._xStretchBackBuffer = GetFunction(*Library_, "_xStretchBackBuffer@24")
Prototype.L _xGetDevice()
Global xGetDevice._xGetDevice = GetFunction(*Library_, "_xGetDevice@0")
Prototype.L _xReleaseGraphics()
Global xReleaseGraphics._xReleaseGraphics = GetFunction(*Library_, "_xReleaseGraphics@0")
Prototype.L _xShowPointer()
Global xShowPointer._xShowPointer = GetFunction(*Library_, "_xShowPointer@0")
Prototype.L _xHidePointer()
Global xHidePointer._xHidePointer = GetFunction(*Library_, "_xHidePointer@0")
Prototype.L _xCreateDSS(width.L, height.L)
Global xCreateDSS._xCreateDSS = GetFunction(*Library_, "_xCreateDSS@8")
Prototype.L _xDeleteDSS()
Global xDeleteDSS._xDeleteDSS = GetFunction(*Library_, "_xDeleteDSS@0")
Prototype.L _xGridColor(centerRed.L, centerGreen.L, centerBlue.L, gridRed.L, gridGreen.L, gridBlue.L)
Global xGridColor._xGridColor = GetFunction(*Library_, "_xGridColor@24")
Prototype.L _xDrawGrid(x.F, z.F, gridSize.L, range.L)
Global xDrawGrid._xDrawGrid = GetFunction(*Library_, "_xDrawGrid@16")
Prototype.L _xDrawBBox(draw.L, zOn.L, red.L, green.L, blue.L, alpha.L)
Global xDrawBBox._xDrawBBox = GetFunction(*Library_, "_xDrawBBox@24")
Prototype.L _xGraphics3D_(width.L, height.L, depth.L, mode.L, vsync.L)
Global xGraphics3D_._xGraphics3D_ = GetFunction(*Library_, "_xGraphics3D@20")
Prototype.L _xGraphics3D(width.L, height.L, depth.L, mode.L, vsync.L)
Global xGraphics3D._xGraphics3D = GetFunction(*Library_, "xGraphics3D")
Prototype.L _xGraphicsAspectRatio(aspectRatio.F)
Global xGraphicsAspectRatio._xGraphicsAspectRatio = GetFunction(*Library_, "_xGraphicsAspectRatio@4")
Prototype.L _xGraphicsBorderColor(red.L, green.L, blue.L)
Global xGraphicsBorderColor._xGraphicsBorderColor = GetFunction(*Library_, "_xGraphicsBorderColor@12")
Prototype.L _xGetRenderWindow()
Global xGetRenderWindow._xGetRenderWindow = GetFunction(*Library_, "_xGetRenderWindow@0")
Prototype.L _xKey(key.P-Ascii)
Global xKey._xKey = GetFunction(*Library_, "_xKey@4")
Prototype.L _xSetEngineSetting(parameter.P-Ascii, value.P-Ascii)
Global xSetEngineSetting._xSetEngineSetting = GetFunction(*Library_, "_xSetEngineSetting@8")
Prototype.I _xGetEngineSetting(parameter.P-Ascii)
Global xGetEngineSetting_._xGetEngineSetting = GetFunction(*Library_, "_xGetEngineSetting@4")
Macro xGetEngineSetting(parameter) : PeekS(xGetEngineSetting_(parameter), -1, #PB_Ascii) : EndMacro
Prototype.L _xHWInstancingAvailable()
Global xHWInstancingAvailable._xHWInstancingAvailable = GetFunction(*Library_, "_xHWInstancingAvailable@0")
Prototype.L _xShaderInstancingAvailable()
Global xShaderInstancingAvailable._xShaderInstancingAvailable = GetFunction(*Library_, "_xShaderInstancingAvailable@0")
Prototype.L _xSetShaderLayer(layer.L)
Global xSetShaderLayer._xSetShaderLayer = GetFunction(*Library_, "_xSetShaderLayer@4")
Prototype.L _xGetShaderLayer()
Global xGetShaderLayer._xGetShaderLayer = GetFunction(*Library_, "_xGetShaderLayer@0")
Prototype.L _xDrawMovementGizmo_(x.F, y.F, z.F, selectMask.L)
Global xDrawMovementGizmo_._xDrawMovementGizmo_ = GetFunction(*Library_, "_xDrawMovementGizmo@16")
Prototype.L _xDrawMovementGizmo(x.F, y.F, z.F, selectMask.L)
Global xDrawMovementGizmo._xDrawMovementGizmo = GetFunction(*Library_, "xDrawMovementGizmo")
Prototype.L _xDrawScaleGizmo_(x.F, y.F, z.F, selectMask.L, sx.F, sy.F, sz.F)
Global xDrawScaleGizmo_._xDrawScaleGizmo_ = GetFunction(*Library_, "_xDrawScaleGizmo@28")
Prototype.L _xDrawScaleGizmo(x.F, y.F, z.F, selectMask.L, sx.F, sy.F, sz.F)
Global xDrawScaleGizmo._xDrawScaleGizmo = GetFunction(*Library_, "xDrawScaleGizmo")
Prototype.L _xDrawRotationGizmo_(x.F, y.F, z.F, selectMask.L, pitch.F, yaw.F, roll.F)
Global xDrawRotationGizmo_._xDrawRotationGizmo_ = GetFunction(*Library_, "_xDrawRotationGizmo@28")
Prototype.L _xDrawRotationGizmo(x.F, y.F, z.F, selectMask.L, pitch.F, yaw.F, roll.F)
Global xDrawRotationGizmo._xDrawRotationGizmo = GetFunction(*Library_, "xDrawRotationGizmo")
Prototype.L _xCheckMovementGizmo(x.F, y.F, z.F, camera.L, mx.L, my.L)
Global xCheckMovementGizmo._xCheckMovementGizmo = GetFunction(*Library_, "_xCheckMovementGizmo@24")
Prototype.L _xCheckScaleGizmo(x.F, y.F, z.F, camera.L, mx.L, my.L)
Global xCheckScaleGizmo._xCheckScaleGizmo = GetFunction(*Library_, "_xCheckScaleGizmo@24")
Prototype.L _xCheckRotationGizmo(x.F, y.F, z.F, camera.L, mx.L, my.L)
Global xCheckRotationGizmo._xCheckRotationGizmo = GetFunction(*Library_, "_xCheckRotationGizmo@24")
Prototype.L _xCaptureWorld()
Global xCaptureWorld._xCaptureWorld = GetFunction(*Library_, "_xCaptureWorld@0")
Prototype.L _xCountGfxModes()
Global xCountGfxModes._xCountGfxModes = GetFunction(*Library_, "_xCountGfxModes@0")
Prototype.L _xGfxModeWidth(mode.L)
Global xGfxModeWidth._xGfxModeWidth = GetFunction(*Library_, "_xGfxModeWidth@4")
Prototype.L _xGfxModeHeight(mode.L)
Global xGfxModeHeight._xGfxModeHeight = GetFunction(*Library_, "_xGfxModeHeight@4")
Prototype.L _xGfxModeDepth(mode.L)
Global xGfxModeDepth._xGfxModeDepth = GetFunction(*Library_, "_xGfxModeDepth@4")
Prototype.L _xGfxModeExists(width.L, height.L, depth.L)
Global xGfxModeExists._xGfxModeExists = GetFunction(*Library_, "_xGfxModeExists@12")
Prototype.L _xAppWindowFrame(state.L)
Global xAppWindowFrame._xAppWindowFrame = GetFunction(*Library_, "_xAppWindowFrame@4")
Prototype.L _xMillisecs()
Global xMillisecs._xMillisecs = GetFunction(*Library_, "_xMillisecs@0")
Prototype.L _xDeltaTime_(fromInit.L)
Global xDeltaTime_._xDeltaTime_ = GetFunction(*Library_, "_xDeltaTime@4")
Prototype.L _xDeltaTime(fromInit.L)
Global xDeltaTime._xDeltaTime = GetFunction(*Library_, "xDeltaTime")
Prototype.F _xDeltaValue_(value.F, time.L)
Global xDeltaValue_._xDeltaValue_ = GetFunction(*Library_, "_xDeltaValue@8")
Prototype.F _xDeltaValue(value.F, time.L)
Global xDeltaValue._xDeltaValue = GetFunction(*Library_, "xDeltaValue")
Prototype.L _xAddDeviceLostCallback(func.L)
Global xAddDeviceLostCallback._xAddDeviceLostCallback = GetFunction(*Library_, "_xAddDeviceLostCallback@4")
Prototype.L _xDeleteDeviceLostCallback(func.L)
Global xDeleteDeviceLostCallback._xDeleteDeviceLostCallback = GetFunction(*Library_, "_xDeleteDeviceLostCallback@4")
Prototype.L _xDeinit()
Global xDeinit._xDeinit = GetFunction(*Library_, "_xDeinit@0")
Prototype.L _xImageColor(image.L, red.L, green.L, blue.L)
Global xImageColor._xImageColor = GetFunction(*Library_, "_xImageColor@16")
Prototype.L _xImageAlpha(image.L, alpha.F)
Global xImageAlpha._xImageAlpha = GetFunction(*Library_, "_xImageAlpha@8")
Prototype.L _xImageBuffer_(image.L, frame.L)
Global xImageBuffer_._xImageBuffer_ = GetFunction(*Library_, "_xImageBuffer@8")
Prototype.L _xImageBuffer(image.L, frame.L)
Global xImageBuffer._xImageBuffer = GetFunction(*Library_, "xImageBuffer")
Prototype.L _xCreateImage_(width.L, height.L, frame.L)
Global xCreateImage_._xCreateImage_ = GetFunction(*Library_, "_xCreateImage@12")
Prototype.L _xCreateImage(width.L, height.L, frame.L)
Global xCreateImage._xCreateImage = GetFunction(*Library_, "xCreateImage")
Prototype.L _xGrabImage_(image.L, x.L, y.L, frame.L)
Global xGrabImage_._xGrabImage_ = GetFunction(*Library_, "_xGrabImage@16")
Prototype.L _xGrabImage(image.L, x.L, y.L, frame.L)
Global xGrabImage._xGrabImage = GetFunction(*Library_, "xGrabImage")
Prototype.L _xFreeImage(image.L)
Global xFreeImage._xFreeImage = GetFunction(*Library_, "_xFreeImage@4")
Prototype.L _xLoadImage(path.P-Ascii)
Global xLoadImage._xLoadImage = GetFunction(*Library_, "_xLoadImage@4")
Prototype.L _xLoadAnimImage(path.P-Ascii, width.L, height.L, startFrame.L, frames.L)
Global xLoadAnimImage._xLoadAnimImage = GetFunction(*Library_, "_xLoadAnimImage@20")
Prototype.L _xSaveImage_(image.L, path.P-Ascii, frame.L)
Global xSaveImage_._xSaveImage_ = GetFunction(*Library_, "_xSaveImage@12")
Prototype.L _xSaveImage(image.L, path.P-Ascii, frame.L)
Global xSaveImage._xSaveImage = GetFunction(*Library_, "xSaveImage")
Prototype.L _xDrawImage_(image.L, x.F, y.F, frame.L)
Global xDrawImage_._xDrawImage_ = GetFunction(*Library_, "_xDrawImage@16")
Prototype.L _xDrawImage(image.L, x.F, y.F, frame.L)
Global xDrawImage._xDrawImage = GetFunction(*Library_, "xDrawImage")
Prototype.L _xDrawImageRect_(image.L, x.F, y.F, rectx.F, recty.F, rectWidth.F, rectHeight.F, frame.L)
Global xDrawImageRect_._xDrawImageRect_ = GetFunction(*Library_, "_xDrawImageRect@32")
Prototype.L _xDrawImageRect(image.L, x.F, y.F, rectx.F, recty.F, rectWidth.F, rectHeight.F, frame.L)
Global xDrawImageRect._xDrawImageRect = GetFunction(*Library_, "xDrawImageRect")
Prototype.L _xScaleImage(image.L, x.F, y.F)
Global xScaleImage._xScaleImage = GetFunction(*Library_, "_xScaleImage@12")
Prototype.L _xResizeImage(image.L, width.F, height.F)
Global xResizeImage._xResizeImage = GetFunction(*Library_, "_xResizeImage@12")
Prototype.L _xRotateImage(image.L, angle.F)
Global xRotateImage._xRotateImage = GetFunction(*Library_, "_xRotateImage@8")
Prototype.F _xImageAngle(image.L)
Global xImageAngle._xImageAngle = GetFunction(*Library_, "_xImageAngle@4")
Prototype.L _xImageWidth(image.L)
Global xImageWidth._xImageWidth = GetFunction(*Library_, "_xImageWidth@4")
Prototype.L _xImageHeight(image.L)
Global xImageHeight._xImageHeight = GetFunction(*Library_, "_xImageHeight@4")
Prototype.L _xImagesCollide(image1.L, x1.L, y1.L, frame1.L, image2.L, x2.L, y2.L, frame2.L)
Global xImagesCollide._xImagesCollide = GetFunction(*Library_, "_xImagesCollide@32")
Prototype.L _xImageRectCollide(image.L, x.L, y.L, frame.L, rectx.L, recty.L, rectWidth.L, rectHeight.L)
Global xImageRectCollide._xImageRectCollide = GetFunction(*Library_, "_xImageRectCollide@32")
Prototype.L _xImageRectOverlap(image.L, x.F, y.F, rectx.F, recty.F, rectWidth.F, rectHeight.F)
Global xImageRectOverlap._xImageRectOverlap = GetFunction(*Library_, "_xImageRectOverlap@28")
Prototype.L _xImageXHandle(image.L)
Global xImageXHandle._xImageXHandle = GetFunction(*Library_, "_xImageXHandle@4")
Prototype.L _xImageYHandle(image.L)
Global xImageYHandle._xImageYHandle = GetFunction(*Library_, "_xImageYHandle@4")
Prototype.L _xHandleImage(image.L, x.F, y.F)
Global xHandleImage._xHandleImage = GetFunction(*Library_, "_xHandleImage@12")
Prototype.L _xMidHandle(image.L)
Global xMidHandle._xMidHandle = GetFunction(*Library_, "_xMidHandle@4")
Prototype.L _xAutoMidHandle(state.L)
Global xAutoMidHandle._xAutoMidHandle = GetFunction(*Library_, "_xAutoMidHandle@4")
Prototype.L _xTileImage_(image.L, x.F, y.F, frame.L)
Global xTileImage_._xTileImage_ = GetFunction(*Library_, "_xTileImage@16")
Prototype.L _xTileImage(image.L, x.F, y.F, frame.L)
Global xTileImage._xTileImage = GetFunction(*Library_, "xTileImage")
Prototype.L _xImagesOverlap(image1.L, x1.F, y1.F, image2.L, x2.F, y2.F)
Global xImagesOverlap._xImagesOverlap = GetFunction(*Library_, "_xImagesOverlap@24")
Prototype.L _xMaskImage(image.L, red.L, green.L, blue.L)
Global xMaskImage._xMaskImage = GetFunction(*Library_, "_xMaskImage@16")
Prototype.L _xCopyImage(image.L)
Global xCopyImage._xCopyImage = GetFunction(*Library_, "_xCopyImage@4")
Prototype.L _xDrawBlock_(image.L, x.F, y.F, frame.L)
Global xDrawBlock_._xDrawBlock_ = GetFunction(*Library_, "_xDrawBlock@16")
Prototype.L _xDrawBlock(image.L, x.F, y.F, frame.L)
Global xDrawBlock._xDrawBlock = GetFunction(*Library_, "xDrawBlock")
Prototype.L _xDrawBlockRect_(image.L, x.F, y.F, rectx.F, recty.F, rectWidth.F, rectHeight.F, frame.L)
Global xDrawBlockRect_._xDrawBlockRect_ = GetFunction(*Library_, "_xDrawBlockRect@32")
Prototype.L _xDrawBlockRect(image.L, x.F, y.F, rectx.F, recty.F, rectWidth.F, rectHeight.F, frame.L)
Global xDrawBlockRect._xDrawBlockRect = GetFunction(*Library_, "xDrawBlockRect")
Prototype.L _xImageActualWidth(image.L)
Global xImageActualWidth._xImageActualWidth = GetFunction(*Library_, "_xImageActualWidth@4")
Prototype.L _xImageActualHeight(image.L)
Global xImageActualHeight._xImageActualHeight = GetFunction(*Library_, "_xImageActualHeight@4")
Prototype.L _xFlushKeys()
Global xFlushKeys._xFlushKeys = GetFunction(*Library_, "_xFlushKeys@0")
Prototype.L _xFlushMouse()
Global xFlushMouse._xFlushMouse = GetFunction(*Library_, "_xFlushMouse@0")
Prototype.L _xKeyHit(key.L)
Global xKeyHit._xKeyHit = GetFunction(*Library_, "_xKeyHit@4")
Prototype.L _xKeyUp(key.L)
Global xKeyUp._xKeyUp = GetFunction(*Library_, "_xKeyUp@4")
Prototype.L _xWaitKey()
Global xWaitKey._xWaitKey = GetFunction(*Library_, "_xWaitKey@0")
Prototype.L _xMouseHit(key.L)
Global xMouseHit._xMouseHit = GetFunction(*Library_, "_xMouseHit@4")
Prototype.L _xKeyDown(key.L)
Global xKeyDown._xKeyDown = GetFunction(*Library_, "_xKeyDown@4")
Prototype.L _xGetKey()
Global xGetKey._xGetKey = GetFunction(*Library_, "_xGetKey@0")
Prototype.L _xMouseDown(key.L)
Global xMouseDown._xMouseDown = GetFunction(*Library_, "_xMouseDown@4")
Prototype.L _xMouseUp(key.L)
Global xMouseUp._xMouseUp = GetFunction(*Library_, "_xMouseUp@4")
Prototype.L _xGetMouse()
Global xGetMouse._xGetMouse = GetFunction(*Library_, "_xGetMouse@0")
Prototype.L _xMouseX()
Global xMouseX._xMouseX = GetFunction(*Library_, "_xMouseX@0")
Prototype.L _xMouseY()
Global xMouseY._xMouseY = GetFunction(*Library_, "_xMouseY@0")
Prototype.L _xMouseZ()
Global xMouseZ._xMouseZ = GetFunction(*Library_, "_xMouseZ@0")
Prototype.L _xMouseXSpeed()
Global xMouseXSpeed._xMouseXSpeed = GetFunction(*Library_, "_xMouseXSpeed@0")
Prototype.L _xMouseYSpeed()
Global xMouseYSpeed._xMouseYSpeed = GetFunction(*Library_, "_xMouseYSpeed@0")
Prototype.L _xMouseZSpeed()
Global xMouseZSpeed._xMouseZSpeed = GetFunction(*Library_, "_xMouseZSpeed@0")
Prototype.L _xMouseSpeed()
Global xMouseSpeed._xMouseSpeed = GetFunction(*Library_, "_xMouseSpeed@0")
Prototype.L _xMoveMouse(x.L, y.L)
Global xMoveMouse._xMoveMouse = GetFunction(*Library_, "_xMoveMouse@8")
Prototype.L _xJoyType_(portID.L)
Global xJoyType_._xJoyType_ = GetFunction(*Library_, "_xJoyType@4")
Prototype.L _xJoyType(portID.L)
Global xJoyType._xJoyType = GetFunction(*Library_, "xJoyType")
Prototype.L _xJoyDown_(key.L, portID.L)
Global xJoyDown_._xJoyDown_ = GetFunction(*Library_, "_xJoyDown@8")
Prototype.L _xJoyDown(key.L, portID.L)
Global xJoyDown._xJoyDown = GetFunction(*Library_, "xJoyDown")
Prototype.L _xJoyHit_(key.L, portID.L)
Global xJoyHit_._xJoyHit_ = GetFunction(*Library_, "_xJoyHit@8")
Prototype.L _xJoyHit(key.L, portID.L)
Global xJoyHit._xJoyHit = GetFunction(*Library_, "xJoyHit")
Prototype.L _xGetJoy_(portID.L)
Global xGetJoy_._xGetJoy_ = GetFunction(*Library_, "_xGetJoy@4")
Prototype.L _xGetJoy(portID.L)
Global xGetJoy._xGetJoy = GetFunction(*Library_, "xGetJoy")
Prototype.L _xFlushJoy()
Global xFlushJoy._xFlushJoy = GetFunction(*Library_, "_xFlushJoy@0")
Prototype.L _xWaitJoy_(portID.L)
Global xWaitJoy_._xWaitJoy_ = GetFunction(*Library_, "_xWaitJoy@4")
Prototype.L _xWaitJoy(portID.L)
Global xWaitJoy._xWaitJoy = GetFunction(*Library_, "xWaitJoy")
Prototype.F _xJoyX_(portID.L)
Global xJoyX_._xJoyX_ = GetFunction(*Library_, "_xJoyX@4")
Prototype.F _xJoyX(portID.L)
Global xJoyX._xJoyX = GetFunction(*Library_, "xJoyX")
Prototype.F _xJoyY_(portID.L)
Global xJoyY_._xJoyY_ = GetFunction(*Library_, "_xJoyY@4")
Prototype.F _xJoyY(portID.L)
Global xJoyY._xJoyY = GetFunction(*Library_, "xJoyY")
Prototype.F _xJoyZ_(portID.L)
Global xJoyZ_._xJoyZ_ = GetFunction(*Library_, "_xJoyZ@4")
Prototype.F _xJoyZ(portID.L)
Global xJoyZ._xJoyZ = GetFunction(*Library_, "xJoyZ")
Prototype.F _xJoyU_(portID.L)
Global xJoyU_._xJoyU_ = GetFunction(*Library_, "_xJoyU@4")
Prototype.F _xJoyU(portID.L)
Global xJoyU._xJoyU = GetFunction(*Library_, "xJoyU")
Prototype.F _xJoyV_(portID.L)
Global xJoyV_._xJoyV_ = GetFunction(*Library_, "_xJoyV@4")
Prototype.F _xJoyV(portID.L)
Global xJoyV._xJoyV = GetFunction(*Library_, "xJoyV")
Prototype.F _xJoyPitch_(portID.L)
Global xJoyPitch_._xJoyPitch_ = GetFunction(*Library_, "_xJoyPitch@4")
Prototype.F _xJoyPitch(portID.L)
Global xJoyPitch._xJoyPitch = GetFunction(*Library_, "xJoyPitch")
Prototype.F _xJoyYaw_(portID.L)
Global xJoyYaw_._xJoyYaw_ = GetFunction(*Library_, "_xJoyYaw@4")
Prototype.F _xJoyYaw(portID.L)
Global xJoyYaw._xJoyYaw = GetFunction(*Library_, "xJoyYaw")
Prototype.F _xJoyRoll_(portID.L)
Global xJoyRoll_._xJoyRoll_ = GetFunction(*Library_, "_xJoyRoll@4")
Prototype.F _xJoyRoll(portID.L)
Global xJoyRoll._xJoyRoll = GetFunction(*Library_, "xJoyRoll")
Prototype.F _xJoyHat_(portID.L)
Global xJoyHat_._xJoyHat_ = GetFunction(*Library_, "_xJoyHat@4")
Prototype.F _xJoyHat(portID.L)
Global xJoyHat._xJoyHat = GetFunction(*Library_, "xJoyHat")
Prototype.L _xJoyXDir_(portID.L)
Global xJoyXDir_._xJoyXDir_ = GetFunction(*Library_, "_xJoyXDir@4")
Prototype.L _xJoyXDir(portID.L)
Global xJoyXDir._xJoyXDir = GetFunction(*Library_, "xJoyXDir")
Prototype.L _xJoyYDir_(portID.L)
Global xJoyYDir_._xJoyYDir_ = GetFunction(*Library_, "_xJoyYDir@4")
Prototype.L _xJoyYDir(portID.L)
Global xJoyYDir._xJoyYDir = GetFunction(*Library_, "xJoyYDir")
Prototype.L _xJoyZDir_(portID.L)
Global xJoyZDir_._xJoyZDir_ = GetFunction(*Library_, "_xJoyZDir@4")
Prototype.L _xJoyZDir(portID.L)
Global xJoyZDir._xJoyZDir = GetFunction(*Library_, "xJoyZDir")
Prototype.L _xJoyUDir_(portID.L)
Global xJoyUDir_._xJoyUDir_ = GetFunction(*Library_, "_xJoyUDir@4")
Prototype.L _xJoyUDir(portID.L)
Global xJoyUDir._xJoyUDir = GetFunction(*Library_, "xJoyUDir")
Prototype.L _xJoyVDir_(portID.L)
Global xJoyVDir_._xJoyVDir_ = GetFunction(*Library_, "_xJoyVDir@4")
Prototype.L _xJoyVDir(portID.L)
Global xJoyVDir._xJoyVDir = GetFunction(*Library_, "xJoyVDir")
Prototype.L _xCountJoys()
Global xCountJoys._xCountJoys = GetFunction(*Library_, "_xCountJoys@0")
Prototype.L _xCreateLight_(typeID.L)
Global xCreateLight_._xCreateLight_ = GetFunction(*Library_, "_xCreateLight@4")
Prototype.L _xCreateLight(typeID.L)
Global xCreateLight._xCreateLight = GetFunction(*Library_, "xCreateLight")
Prototype.L _xLightShadowEpsilons(light.L, epsilon1.F, epsilon2.F)
Global xLightShadowEpsilons._xLightShadowEpsilons = GetFunction(*Library_, "_xLightShadowEpsilons@12")
Prototype.L _xLightEnableShadows(light.L, state.L)
Global xLightEnableShadows._xLightEnableShadows = GetFunction(*Library_, "_xLightEnableShadows@8")
Prototype.L _xLightShadowsEnabled(light.L)
Global xLightShadowsEnabled._xLightShadowsEnabled = GetFunction(*Library_, "_xLightShadowsEnabled@4")
Prototype.L _xLightRange(light.L, range.F)
Global xLightRange._xLightRange = GetFunction(*Library_, "_xLightRange@8")
Prototype.L _xLightColor(light.L, red.L, green.L, blue.L)
Global xLightColor._xLightColor = GetFunction(*Library_, "_xLightColor@16")
Prototype.L _xLightConeAngles(light.L, inner.F, outer.F)
Global xLightConeAngles._xLightConeAngles = GetFunction(*Library_, "_xLightConeAngles@12")
Prototype.L _xCreateLog_(target.L, level.L, filename.P-Ascii, cssfilename.P-Ascii)
Global xCreateLog_._xCreateLog_ = GetFunction(*Library_, "_xCreateLog@16")
Prototype.L _xCreateLog(target.L, level.L, filename.P-Ascii, cssfilename.P-Ascii)
Global xCreateLog._xCreateLog = GetFunction(*Library_, "xCreateLog")
Prototype.L _xCloseLog()
Global xCloseLog._xCloseLog = GetFunction(*Library_, "_xCloseLog@0")
Prototype.I _xGetLogString()
Global xGetLogString_._xGetLogString = GetFunction(*Library_, "_xGetLogString@0")
Macro xGetLogString() : PeekS(xGetLogString_(), -1, #PB_Ascii) : EndMacro
Prototype.L _xClearLogString()
Global xClearLogString._xClearLogString = GetFunction(*Library_, "_xClearLogString@0")
Prototype.L _xSetLogLevel_(level.L)
Global xSetLogLevel_._xSetLogLevel_ = GetFunction(*Library_, "_xSetLogLevel@4")
Prototype.L _xSetLogLevel(level.L)
Global xSetLogLevel._xSetLogLevel = GetFunction(*Library_, "xSetLogLevel")
Prototype.L _xSetLogTarget_(target.L)
Global xSetLogTarget_._xSetLogTarget_ = GetFunction(*Library_, "_xSetLogTarget@4")
Prototype.L _xSetLogTarget(target.L)
Global xSetLogTarget._xSetLogTarget = GetFunction(*Library_, "xSetLogTarget")
Prototype.L _xGetLogLevel()
Global xGetLogLevel._xGetLogLevel = GetFunction(*Library_, "_xGetLogLevel@0")
Prototype.L _xGetLogTarget()
Global xGetLogTarget._xGetLogTarget = GetFunction(*Library_, "_xGetLogTarget@0")
Prototype.L _xLogInfo_(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogInfo_._xLogInfo_ = GetFunction(*Library_, "_xLogInfo@16")
Prototype.L _xLogInfo(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogInfo._xLogInfo = GetFunction(*Library_, "xLogInfo")
Prototype.L _xLogMessage_(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogMessage_._xLogMessage_ = GetFunction(*Library_, "_xLogMessage@16")
Prototype.L _xLogMessage(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogMessage._xLogMessage = GetFunction(*Library_, "xLogMessage")
Prototype.L _xLogWarning_(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogWarning_._xLogWarning_ = GetFunction(*Library_, "_xLogWarning@16")
Prototype.L _xLogWarning(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogWarning._xLogWarning = GetFunction(*Library_, "xLogWarning")
Prototype.L _xLogError_(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogError_._xLogError_ = GetFunction(*Library_, "_xLogError@16")
Prototype.L _xLogError(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogError._xLogError = GetFunction(*Library_, "xLogError")
Prototype.L _xLogFatal_(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogFatal_._xLogFatal_ = GetFunction(*Library_, "_xLogFatal@16")
Prototype.L _xLogFatal(message.P-Ascii, func.P-Ascii, file.P-Ascii, line.L)
Global xLogFatal._xLogFatal = GetFunction(*Library_, "xLogFatal")
Prototype.L _xCreateMesh_(parent.L)
Global xCreateMesh_._xCreateMesh_ = GetFunction(*Library_, "_xCreateMesh@4")
Prototype.L _xCreateMesh(parent.L)
Global xCreateMesh._xCreateMesh = GetFunction(*Library_, "xCreateMesh")
Prototype.L _xLoadMesh_(path.P-Ascii, parent.L)
Global xLoadMesh_._xLoadMesh_ = GetFunction(*Library_, "_xLoadMesh@8")
Prototype.L _xLoadMesh(path.P-Ascii, parent.L)
Global xLoadMesh._xLoadMesh = GetFunction(*Library_, "xLoadMesh")
Prototype.L _xLoadMeshWithChild_(path.P-Ascii, parent.L)
Global xLoadMeshWithChild_._xLoadMeshWithChild_ = GetFunction(*Library_, "_xLoadMeshWithChild@8")
Prototype.L _xLoadMeshWithChild(path.P-Ascii, parent.L)
Global xLoadMeshWithChild._xLoadMeshWithChild = GetFunction(*Library_, "xLoadMeshWithChild")
Prototype.L _xLoadAnimMesh_(path.P-Ascii, parent.L)
Global xLoadAnimMesh_._xLoadAnimMesh_ = GetFunction(*Library_, "_xLoadAnimMesh@8")
Prototype.L _xLoadAnimMesh(path.P-Ascii, parent.L)
Global xLoadAnimMesh._xLoadAnimMesh = GetFunction(*Library_, "xLoadAnimMesh")
Prototype.L _xCreateCube_(parent.L)
Global xCreateCube_._xCreateCube_ = GetFunction(*Library_, "_xCreateCube@4")
Prototype.L _xCreateCube(parent.L)
Global xCreateCube._xCreateCube = GetFunction(*Library_, "xCreateCube")
Prototype.L _xCreateSphere_(segments.L, parent.L)
Global xCreateSphere_._xCreateSphere_ = GetFunction(*Library_, "_xCreateSphere@8")
Prototype.L _xCreateSphere(segments.L, parent.L)
Global xCreateSphere._xCreateSphere = GetFunction(*Library_, "xCreateSphere")
Prototype.L _xCreateCylinder_(segments.L, solid.L, parent.L)
Global xCreateCylinder_._xCreateCylinder_ = GetFunction(*Library_, "_xCreateCylinder@12")
Prototype.L _xCreateCylinder(segments.L, solid.L, parent.L)
Global xCreateCylinder._xCreateCylinder = GetFunction(*Library_, "xCreateCylinder")
Prototype.L _xCreateTorus_(segments.L, R.F, r_tube.F, parent.L)
Global xCreateTorus_._xCreateTorus_ = GetFunction(*Library_, "_xCreateTorus@16")
Prototype.L _xCreateTorus(segments.L, R.F, r_tube.F, parent.L)
Global xCreateTorus._xCreateTorus = GetFunction(*Library_, "xCreateTorus")
Prototype.L _xCreateCone_(segments.L, solid.L, parent.L)
Global xCreateCone_._xCreateCone_ = GetFunction(*Library_, "_xCreateCone@12")
Prototype.L _xCreateCone(segments.L, solid.L, parent.L)
Global xCreateCone._xCreateCone = GetFunction(*Library_, "xCreateCone")
Prototype.L _xCopyMesh_(entity.L, parent.L)
Global xCopyMesh_._xCopyMesh_ = GetFunction(*Library_, "_xCopyMesh@8")
Prototype.L _xCopyMesh(entity.L, parent.L)
Global xCopyMesh._xCopyMesh = GetFunction(*Library_, "xCopyMesh")
Prototype.L _xAddMesh(source.L, destination.L)
Global xAddMesh._xAddMesh = GetFunction(*Library_, "_xAddMesh@8")
Prototype.L _xFlipMesh(entity.L)
Global xFlipMesh._xFlipMesh = GetFunction(*Library_, "_xFlipMesh@4")
Prototype.L _xPaintMesh(entity.L, brush.L)
Global xPaintMesh._xPaintMesh = GetFunction(*Library_, "_xPaintMesh@8")
Prototype.L _xFitMesh_(entity.L, x.F, y.F, z.F, width.F, height.F, depth.F, uniform.L)
Global xFitMesh_._xFitMesh_ = GetFunction(*Library_, "_xFitMesh@32")
Prototype.L _xFitMesh(entity.L, x.F, y.F, z.F, width.F, height.F, depth.F, uniform.L)
Global xFitMesh._xFitMesh = GetFunction(*Library_, "xFitMesh")
Prototype.F _xMeshWidth_(entity.L, recursive.L)
Global xMeshWidth_._xMeshWidth_ = GetFunction(*Library_, "_xMeshWidth@8")
Prototype.F _xMeshWidth(entity.L, recursive.L)
Global xMeshWidth._xMeshWidth = GetFunction(*Library_, "xMeshWidth")
Prototype.F _xMeshHeight_(entity.L, recursive.L)
Global xMeshHeight_._xMeshHeight_ = GetFunction(*Library_, "_xMeshHeight@8")
Prototype.F _xMeshHeight(entity.L, recursive.L)
Global xMeshHeight._xMeshHeight = GetFunction(*Library_, "xMeshHeight")
Prototype.F _xMeshDepth_(entity.L, recursive.L)
Global xMeshDepth_._xMeshDepth_ = GetFunction(*Library_, "_xMeshDepth@8")
Prototype.F _xMeshDepth(entity.L, recursive.L)
Global xMeshDepth._xMeshDepth = GetFunction(*Library_, "xMeshDepth")
Prototype.L _xScaleMesh(entity.L, x.F, y.F, z.F)
Global xScaleMesh._xScaleMesh = GetFunction(*Library_, "_xScaleMesh@16")
Prototype.L _xRotateMesh(entity.L, x.F, y.F, z.F)
Global xRotateMesh._xRotateMesh = GetFunction(*Library_, "_xRotateMesh@16")
Prototype.L _xPositionMesh(entity.L, x.F, y.F, z.F)
Global xPositionMesh._xPositionMesh = GetFunction(*Library_, "_xPositionMesh@16")
Prototype.L _xUpdateNormals(entity.L)
Global xUpdateNormals._xUpdateNormals = GetFunction(*Library_, "_xUpdateNormals@4")
Prototype.L _xUpdateN(entity.L)
Global xUpdateN._xUpdateN = GetFunction(*Library_, "_xUpdateN@4")
Prototype.L _xUpdateTB(entity.L)
Global xUpdateTB._xUpdateTB = GetFunction(*Library_, "_xUpdateTB@4")
Prototype.L _xMeshesBBIntersect(entity1.L, entity2.L)
Global xMeshesBBIntersect._xMeshesBBIntersect = GetFunction(*Library_, "_xMeshesBBIntersect@8")
Prototype.L _xMeshesIntersect(entity1.L, entity2.L)
Global xMeshesIntersect._xMeshesIntersect = GetFunction(*Library_, "_xMeshesIntersect@8")
Prototype.L _xGetMeshVB(entity.L)
Global xGetMeshVB._xGetMeshVB = GetFunction(*Library_, "_xGetMeshVB@4")
Prototype.L _xGetMeshIB(entity.L)
Global xGetMeshIB._xGetMeshIB = GetFunction(*Library_, "_xGetMeshIB@4")
Prototype.L _xGetMeshVBSize(entity.L)
Global xGetMeshVBSize._xGetMeshVBSize = GetFunction(*Library_, "_xGetMeshVBSize@4")
Prototype.L _xGetMeshIBSize(entity.L)
Global xGetMeshIBSize._xGetMeshIBSize = GetFunction(*Library_, "_xGetMeshIBSize@4")
Prototype.L _xDeleteMeshVB(entity.L)
Global xDeleteMeshVB._xDeleteMeshVB = GetFunction(*Library_, "_xDeleteMeshVB@4")
Prototype.L _xDeleteMeshIB(entity.L)
Global xDeleteMeshIB._xDeleteMeshIB = GetFunction(*Library_, "_xDeleteMeshIB@4")
Prototype.L _xCountSurfaces(entity.L)
Global xCountSurfaces._xCountSurfaces = GetFunction(*Library_, "_xCountSurfaces@4")
Prototype.L _xGetSurface(entity.L, index.L)
Global xGetSurface._xGetSurface = GetFunction(*Library_, "_xGetSurface@8")
Prototype.L _xCreatePivot_(parent.L)
Global xCreatePivot_._xCreatePivot_ = GetFunction(*Library_, "_xCreatePivot@4")
Prototype.L _xCreatePivot(parent.L)
Global xCreatePivot._xCreatePivot = GetFunction(*Library_, "xCreatePivot")
Prototype.L _xFindSurface(entity.L, brush.L)
Global xFindSurface._xFindSurface = GetFunction(*Library_, "_xFindSurface@8")
Prototype.L _xCreatePoly_(sides.L, parent.L)
Global xCreatePoly_._xCreatePoly_ = GetFunction(*Library_, "_xCreatePoly@8")
Prototype.L _xCreatePoly(sides.L, parent.L)
Global xCreatePoly._xCreatePoly = GetFunction(*Library_, "xCreatePoly")
Prototype.L _xMeshSingleSurface(entity.L)
Global xMeshSingleSurface._xMeshSingleSurface = GetFunction(*Library_, "_xMeshSingleSurface@4")
Prototype.L _xSaveMesh(entity.L, path.P-Ascii)
Global xSaveMesh._xSaveMesh = GetFunction(*Library_, "_xSaveMesh@8")
Prototype.L _xLightMesh_(entity.L, red.L, green.L, blue.L, range.F, lightX.F, lightY.F, lightZ.F)
Global xLightMesh_._xLightMesh_ = GetFunction(*Library_, "_xLightMesh@32")
Prototype.L _xLightMesh(entity.L, red.L, green.L, blue.L, range.F, lightX.F, lightY.F, lightZ.F)
Global xLightMesh._xLightMesh = GetFunction(*Library_, "xLightMesh")
Prototype.L _xMeshPrimitiveType(entity.L, ptype.L)
Global xMeshPrimitiveType._xMeshPrimitiveType = GetFunction(*Library_, "_xMeshPrimitiveType@8")
Prototype.L _xParticlePosition(particle.L, x.F, y.F, z.F)
Global xParticlePosition._xParticlePosition = GetFunction(*Library_, "_xParticlePosition@16")
Prototype.F _xParticleX(particle.L)
Global xParticleX._xParticleX = GetFunction(*Library_, "_xParticleX@4")
Prototype.F _xParticleY(particle.L)
Global xParticleY._xParticleY = GetFunction(*Library_, "_xParticleY@4")
Prototype.F _xParticleZ(particle.L)
Global xParticleZ._xParticleZ = GetFunction(*Library_, "_xParticleZ@4")
Prototype.L _xParticleVeclocity(particle.L, x.F, y.F, z.F)
Global xParticleVeclocity._xParticleVeclocity = GetFunction(*Library_, "_xParticleVeclocity@16")
Prototype.F _xParticleVX(particle.L)
Global xParticleVX._xParticleVX = GetFunction(*Library_, "_xParticleVX@4")
Prototype.F _xParticleVY(particle.L)
Global xParticleVY._xParticleVY = GetFunction(*Library_, "_xParticleVY@4")
Prototype.F _xParticleVZ(particle.L)
Global xParticleVZ._xParticleVZ = GetFunction(*Library_, "_xParticleVZ@4")
Prototype.L _xParticleRotation(particle.L, x.F, y.F, z.F)
Global xParticleRotation._xParticleRotation = GetFunction(*Library_, "_xParticleRotation@16")
Prototype.F _xParticlePitch(particle.L)
Global xParticlePitch._xParticlePitch = GetFunction(*Library_, "_xParticlePitch@4")
Prototype.F _xParticleYaw(particle.L)
Global xParticleYaw._xParticleYaw = GetFunction(*Library_, "_xParticleYaw@4")
Prototype.F _xParticleRoll(particle.L)
Global xParticleRoll._xParticleRoll = GetFunction(*Library_, "_xParticleRoll@4")
Prototype.L _xParticleTorque(particle.L, x.F, y.F, z.F)
Global xParticleTorque._xParticleTorque = GetFunction(*Library_, "_xParticleTorque@16")
Prototype.F _xParticleTPitch(particle.L)
Global xParticleTPitch._xParticleTPitch = GetFunction(*Library_, "_xParticleTPitch@4")
Prototype.F _xParticleTYaw(particle.L)
Global xParticleTYaw._xParticleTYaw = GetFunction(*Library_, "_xParticleTYaw@4")
Prototype.F _xParticleTRoll(particle.L)
Global xParticleTRoll._xParticleTRoll = GetFunction(*Library_, "_xParticleTRoll@4")
Prototype.L _xParticleSetAlpha(particle.L, alpha.F)
Global xParticleSetAlpha._xParticleSetAlpha = GetFunction(*Library_, "_xParticleSetAlpha@8")
Prototype.F _xParticleGetAlpha(particle.L)
Global xParticleGetAlpha._xParticleGetAlpha = GetFunction(*Library_, "_xParticleGetAlpha@4")
Prototype.L _xParticleColor(particle.L, x.F, y.F, z.F)
Global xParticleColor._xParticleColor = GetFunction(*Library_, "_xParticleColor@16")
Prototype.F _xParticleRed(particle.L)
Global xParticleRed._xParticleRed = GetFunction(*Library_, "_xParticleRed@4")
Prototype.F _xParticleGreen(particle.L)
Global xParticleGreen._xParticleGreen = GetFunction(*Library_, "_xParticleGreen@4")
Prototype.F _xParticleBlue(particle.L)
Global xParticleBlue._xParticleBlue = GetFunction(*Library_, "_xParticleBlue@4")
Prototype.L _xParticleScale(particle.L, x.F, y.F)
Global xParticleScale._xParticleScale = GetFunction(*Library_, "_xParticleScale@12")
Prototype.F _xParticleSX(particle.L)
Global xParticleSX._xParticleSX = GetFunction(*Library_, "_xParticleSX@4")
Prototype.F _xParticleSY(particle.L)
Global xParticleSY._xParticleSY = GetFunction(*Library_, "_xParticleSY@4")
Prototype.L _xParticleScaleSpeed(particle.L, x.F, y.F)
Global xParticleScaleSpeed._xParticleScaleSpeed = GetFunction(*Library_, "_xParticleScaleSpeed@12")
Prototype.F _xParticleScaleSpeedX(particle.L)
Global xParticleScaleSpeedX._xParticleScaleSpeedX = GetFunction(*Library_, "_xParticleScaleSpeedX@4")
Prototype.F _xParticleScaleSpeedY(particle.L)
Global xParticleScaleSpeedY._xParticleScaleSpeedY = GetFunction(*Library_, "_xParticleScaleSpeedY@4")
Prototype.L _xEntityAddDummyShape(entity.L)
Global xEntityAddDummyShape._xEntityAddDummyShape = GetFunction(*Library_, "_xEntityAddDummyShape@4")
Prototype.L _xEntityAddBoxShape_(entity.L, mass.F, width.F, height.F, depth.F)
Global xEntityAddBoxShape_._xEntityAddBoxShape_ = GetFunction(*Library_, "_xEntityAddBoxShape@20")
Prototype.L _xEntityAddBoxShape(entity.L, mass.F, width.F, height.F, depth.F)
Global xEntityAddBoxShape._xEntityAddBoxShape = GetFunction(*Library_, "xEntityAddBoxShape")
Prototype.L _xEntityAddSphereShape_(entity.L, mass.F, radius.F)
Global xEntityAddSphereShape_._xEntityAddSphereShape_ = GetFunction(*Library_, "_xEntityAddSphereShape@12")
Prototype.L _xEntityAddSphereShape(entity.L, mass.F, radius.F)
Global xEntityAddSphereShape._xEntityAddSphereShape = GetFunction(*Library_, "xEntityAddSphereShape")
Prototype.L _xEntityAddCapsuleShape_(entity.L, mass.F, radius.F, height.F)
Global xEntityAddCapsuleShape_._xEntityAddCapsuleShape_ = GetFunction(*Library_, "_xEntityAddCapsuleShape@16")
Prototype.L _xEntityAddCapsuleShape(entity.L, mass.F, radius.F, height.F)
Global xEntityAddCapsuleShape._xEntityAddCapsuleShape = GetFunction(*Library_, "xEntityAddCapsuleShape")
Prototype.L _xEntityAddConeShape_(entity.L, mass.F, radius.F, height.F)
Global xEntityAddConeShape_._xEntityAddConeShape_ = GetFunction(*Library_, "_xEntityAddConeShape@16")
Prototype.L _xEntityAddConeShape(entity.L, mass.F, radius.F, height.F)
Global xEntityAddConeShape._xEntityAddConeShape = GetFunction(*Library_, "xEntityAddConeShape")
Prototype.L _xEntityAddCylinderShape_(entity.L, mass.F, width.F, height.F, depth.F)
Global xEntityAddCylinderShape_._xEntityAddCylinderShape_ = GetFunction(*Library_, "_xEntityAddCylinderShape@20")
Prototype.L _xEntityAddCylinderShape(entity.L, mass.F, width.F, height.F, depth.F)
Global xEntityAddCylinderShape._xEntityAddCylinderShape = GetFunction(*Library_, "xEntityAddCylinderShape")
Prototype.L _xEntityAddTriMeshShape(entity.L)
Global xEntityAddTriMeshShape._xEntityAddTriMeshShape = GetFunction(*Library_, "_xEntityAddTriMeshShape@4")
Prototype.L _xEntityAddTriMeshShapeProxy(entity.L, proxy.L)
Global xEntityAddTriMeshShapeProxy._xEntityAddTriMeshShapeProxy = GetFunction(*Library_, "_xEntityAddTriMeshShapeProxy@8")
Prototype.L _xEntityAddConvexShape(entity.L, mass.F)
Global xEntityAddConvexShape._xEntityAddConvexShape = GetFunction(*Library_, "_xEntityAddConvexShape@8")
Prototype.L _xEntityAddConvexShapeProxy(entity.L, proxy.L, mass.F)
Global xEntityAddConvexShapeProxy._xEntityAddConvexShapeProxy = GetFunction(*Library_, "_xEntityAddConvexShapeProxy@12")
Prototype.L _xEntityAddConcaveShape(entity.L, mass.F)
Global xEntityAddConcaveShape._xEntityAddConcaveShape = GetFunction(*Library_, "_xEntityAddConcaveShape@8")
Prototype.L _xEntityAddConcaveShapeProxy(entity.L, proxy.L, mass.F)
Global xEntityAddConcaveShapeProxy._xEntityAddConcaveShapeProxy = GetFunction(*Library_, "_xEntityAddConcaveShapeProxy@12")
Prototype.L _xEntityAddTerrainShape(entity.L)
Global xEntityAddTerrainShape._xEntityAddTerrainShape = GetFunction(*Library_, "_xEntityAddTerrainShape@4")
Prototype.L _xEntityAttachBody(entity.L, body.L)
Global xEntityAttachBody._xEntityAttachBody = GetFunction(*Library_, "_xEntityAttachBody@8")
Prototype.L _xEntityDetachBody(entity.L)
Global xEntityDetachBody._xEntityDetachBody = GetFunction(*Library_, "_xEntityDetachBody@4")
Prototype.L _xFreeEntityBody(entity.L)
Global xFreeEntityBody._xFreeEntityBody = GetFunction(*Library_, "_xFreeEntityBody@4")
Prototype.L _xEntityAddCompoundShape(entity.L, mass.F)
Global xEntityAddCompoundShape._xEntityAddCompoundShape = GetFunction(*Library_, "_xEntityAddCompoundShape@8")
Prototype.L _xEntityCompoundAddBox(entity.L, width.F, height.F, depth.F)
Global xEntityCompoundAddBox._xEntityCompoundAddBox = GetFunction(*Library_, "_xEntityCompoundAddBox@16")
Prototype.L _xEntityCompoundAddSphere(entity.L, radius.F)
Global xEntityCompoundAddSphere._xEntityCompoundAddSphere = GetFunction(*Library_, "_xEntityCompoundAddSphere@8")
Prototype.L _xEntityCompoundAddCapsule(entity.L, radius.F, height.F)
Global xEntityCompoundAddCapsule._xEntityCompoundAddCapsule = GetFunction(*Library_, "_xEntityCompoundAddCapsule@12")
Prototype.L _xEntityCompoundAddCone(entity.L, radius.F, height.F)
Global xEntityCompoundAddCone._xEntityCompoundAddCone = GetFunction(*Library_, "_xEntityCompoundAddCone@12")
Prototype.L _xEntityCompoundAddCylinder(entity.L, radius.F, height.F)
Global xEntityCompoundAddCylinder._xEntityCompoundAddCylinder = GetFunction(*Library_, "_xEntityCompoundAddCylinder@12")
Prototype.L _xEntityCompoundCountChildren(entity.L)
Global xEntityCompoundCountChildren._xEntityCompoundCountChildren = GetFunction(*Library_, "_xEntityCompoundCountChildren@4")
Prototype.L _xEntityCompoundRemoveChild(entity.L, index.L)
Global xEntityCompoundRemoveChild._xEntityCompoundRemoveChild = GetFunction(*Library_, "_xEntityCompoundRemoveChild@8")
Prototype.L _xEntityCompoundChildSetPosition(entity.L, index.L, x.F, y.F, z.F)
Global xEntityCompoundChildSetPosition._xEntityCompoundChildSetPosition = GetFunction(*Library_, "_xEntityCompoundChildSetPosition@20")
Prototype.F _xEntityCompoundChildGetX(entity.L, index.L)
Global xEntityCompoundChildGetX._xEntityCompoundChildGetX = GetFunction(*Library_, "_xEntityCompoundChildGetX@8")
Prototype.F _xEntityCompoundChildGetY(entity.L, index.L)
Global xEntityCompoundChildGetY._xEntityCompoundChildGetY = GetFunction(*Library_, "_xEntityCompoundChildGetY@8")
Prototype.F _xEntityCompoundChildGetZ(entity.L, index.L)
Global xEntityCompoundChildGetZ._xEntityCompoundChildGetZ = GetFunction(*Library_, "_xEntityCompoundChildGetZ@8")
Prototype.L _xEntityCompoundChildSetRotation(entity.L, index.L, pitch.F, yaw.F, roll.F)
Global xEntityCompoundChildSetRotation._xEntityCompoundChildSetRotation = GetFunction(*Library_, "_xEntityCompoundChildSetRotation@20")
Prototype.F _xEntityCompoundChildGetPitch(entity.L, index.L)
Global xEntityCompoundChildGetPitch._xEntityCompoundChildGetPitch = GetFunction(*Library_, "_xEntityCompoundChildGetPitch@8")
Prototype.F _xEntityCompoundChildGetYaw(entity.L, index.L)
Global xEntityCompoundChildGetYaw._xEntityCompoundChildGetYaw = GetFunction(*Library_, "_xEntityCompoundChildGetYaw@8")
Prototype.F _xEntityCompoundChildGetRoll(entity.L, index.L)
Global xEntityCompoundChildGetRoll._xEntityCompoundChildGetRoll = GetFunction(*Library_, "_xEntityCompoundChildGetRoll@8")
Prototype.L _xCreateHingeJoint_(firstBody.L, secondBody.L, pivotX.F, pivotY.F, pivotZ.F, axisX.F, axisY.F, axisZ.F, isGlobal.L)
Global xCreateHingeJoint_._xCreateHingeJoint_ = GetFunction(*Library_, "_xCreateHingeJoint@36")
Prototype.L _xCreateHingeJoint(firstBody.L, secondBody.L, pivotX.F, pivotY.F, pivotZ.F, axisX.F, axisY.F, axisZ.F, isGlobal.L)
Global xCreateHingeJoint._xCreateHingeJoint = GetFunction(*Library_, "xCreateHingeJoint")
Prototype.L _xCreateBallJoint_(firstBody.L, secondBody.L, pivotX.F, pivotY.F, pivotZ.F, isGlobal.L)
Global xCreateBallJoint_._xCreateBallJoint_ = GetFunction(*Library_, "_xCreateBallJoint@24")
Prototype.L _xCreateBallJoint(firstBody.L, secondBody.L, pivotX.F, pivotY.F, pivotZ.F, isGlobal.L)
Global xCreateBallJoint._xCreateBallJoint = GetFunction(*Library_, "xCreateBallJoint")
Prototype.L _xCreateD6Joint_(firstBody.L, secondBody.L, pivot1X.F, pivot1Y.F, pivot1Z.F, pivot2X.F, pivot2Y.F, pivot2Z.F, isGlobal1.L, isGlobal2.L)
Global xCreateD6Joint_._xCreateD6Joint_ = GetFunction(*Library_, "_xCreateD6Joint@40")
Prototype.L _xCreateD6Joint(firstBody.L, secondBody.L, pivot1X.F, pivot1Y.F, pivot1Z.F, pivot2X.F, pivot2Y.F, pivot2Z.F, isGlobal1.L, isGlobal2.L)
Global xCreateD6Joint._xCreateD6Joint = GetFunction(*Library_, "xCreateD6Joint")
Prototype.L _xCreateD6SpringJoint_(firstBody.L, secondBody.L, pivot1X.F, pivot1Y.F, pivot1Z.F, pivot2X.F, pivot2Y.F, pivot2Z.F, isGlobal1.L, isGlobal2.L)
Global xCreateD6SpringJoint_._xCreateD6SpringJoint_ = GetFunction(*Library_, "_xCreateD6SpringJoint@40")
Prototype.L _xCreateD6SpringJoint(firstBody.L, secondBody.L, pivot1X.F, pivot1Y.F, pivot1Z.F, pivot2X.F, pivot2Y.F, pivot2Z.F, isGlobal1.L, isGlobal2.L)
Global xCreateD6SpringJoint._xCreateD6SpringJoint = GetFunction(*Library_, "xCreateD6SpringJoint")
Prototype.F _xJointHingeGetAngle(joint.L)
Global xJointHingeGetAngle._xJointHingeGetAngle = GetFunction(*Library_, "_xJointHingeGetAngle@4")
Prototype.F _xJointD6GetPitchAngle(joint.L)
Global xJointD6GetPitchAngle._xJointD6GetPitchAngle = GetFunction(*Library_, "_xJointD6GetPitchAngle@4")
Prototype.F _xJointD6GetYawAngle(joint.L)
Global xJointD6GetYawAngle._xJointD6GetYawAngle = GetFunction(*Library_, "_xJointD6GetYawAngle@4")
Prototype.F _xJointD6GetRollAngle(joint.L)
Global xJointD6GetRollAngle._xJointD6GetRollAngle = GetFunction(*Library_, "_xJointD6GetRollAngle@4")
Prototype.F _xJointD6GetAngle_(joint.L, axis.L)
Global xJointD6GetAngle_._xJointD6GetAngle_ = GetFunction(*Library_, "_xJointD6GetAngle@8")
Prototype.F _xJointD6GetAngle(joint.L, axis.L)
Global xJointD6GetAngle._xJointD6GetAngle = GetFunction(*Library_, "xJointD6GetAngle")
Prototype.L _xJointDisableCollisions(joint.L, state.L)
Global xJointDisableCollisions._xJointDisableCollisions = GetFunction(*Library_, "_xJointDisableCollisions@8")
Prototype.L _xJointEnable(joint.L, state.L)
Global xJointEnable._xJointEnable = GetFunction(*Library_, "_xJointEnable@8")
Prototype.L _xJointIsEnabled(joint.L)
Global xJointIsEnabled._xJointIsEnabled = GetFunction(*Library_, "_xJointIsEnabled@4")
Prototype.F _xJointGetImpulse(joint.L)
Global xJointGetImpulse._xJointGetImpulse = GetFunction(*Library_, "_xJointGetImpulse@4")
Prototype.L _xFreeJoint(joint.L)
Global xFreeJoint._xFreeJoint = GetFunction(*Library_, "_xFreeJoint@4")
Prototype.L _xJointBallSetPivot_(joint.L, x.F, y.F, z.F, isGlobal.L)
Global xJointBallSetPivot_._xJointBallSetPivot_ = GetFunction(*Library_, "_xJointBallSetPivot@20")
Prototype.L _xJointBallSetPivot(joint.L, x.F, y.F, z.F, isGlobal.L)
Global xJointBallSetPivot._xJointBallSetPivot = GetFunction(*Library_, "xJointBallSetPivot")
Prototype.F _xJointBallGetPivotX_(joint.L, isGlobal.L)
Global xJointBallGetPivotX_._xJointBallGetPivotX_ = GetFunction(*Library_, "_xJointBallGetPivotX@8")
Prototype.F _xJointBallGetPivotX(joint.L, isGlobal.L)
Global xJointBallGetPivotX._xJointBallGetPivotX = GetFunction(*Library_, "xJointBallGetPivotX")
Prototype.F _xJointBallGetPivotY_(joint.L, isGlobal.L)
Global xJointBallGetPivotY_._xJointBallGetPivotY_ = GetFunction(*Library_, "_xJointBallGetPivotY@8")
Prototype.F _xJointBallGetPivotY(joint.L, isGlobal.L)
Global xJointBallGetPivotY._xJointBallGetPivotY = GetFunction(*Library_, "xJointBallGetPivotY")
Prototype.F _xJointBallGetPivotZ_(joint.L, isGlobal.L)
Global xJointBallGetPivotZ_._xJointBallGetPivotZ_ = GetFunction(*Library_, "_xJointBallGetPivotZ@8")
Prototype.F _xJointBallGetPivotZ(joint.L, isGlobal.L)
Global xJointBallGetPivotZ._xJointBallGetPivotZ = GetFunction(*Library_, "xJointBallGetPivotZ")
Prototype.L _xJointD6SetLimits(joint.L, axis.L, lower.F, upper.F)
Global xJointD6SetLimits._xJointD6SetLimits = GetFunction(*Library_, "_xJointD6SetLimits@16")
Prototype.L _xJointD6SetLowerLinearLimits(joint.L, lowerX.F, lowerY.F, lowerZ.F)
Global xJointD6SetLowerLinearLimits._xJointD6SetLowerLinearLimits = GetFunction(*Library_, "_xJointD6SetLowerLinearLimits@16")
Prototype.L _xJointD6SetUpperLinearLimits(joint.L, upperX.F, upperY.F, upperZ.F)
Global xJointD6SetUpperLinearLimits._xJointD6SetUpperLinearLimits = GetFunction(*Library_, "_xJointD6SetUpperLinearLimits@16")
Prototype.L _xJointD6SetLowerAngularLimits(joint.L, lowerX.F, lowerY.F, lowerZ.F)
Global xJointD6SetLowerAngularLimits._xJointD6SetLowerAngularLimits = GetFunction(*Library_, "_xJointD6SetLowerAngularLimits@16")
Prototype.L _xJointD6SetUpperAngularLimits(joint.L, upperX.F, upperY.F, upperZ.F)
Global xJointD6SetUpperAngularLimits._xJointD6SetUpperAngularLimits = GetFunction(*Library_, "_xJointD6SetUpperAngularLimits@16")
Prototype.L _xJointD6SetLinearLimits(joint.L, lowerX.F, lowerY.F, lowerZ.F, upperX.F, upperY.F, upperZ.F)
Global xJointD6SetLinearLimits._xJointD6SetLinearLimits = GetFunction(*Library_, "_xJointD6SetLinearLimits@28")
Prototype.L _xJointD6SetAngularLimits(joint.L, lowerX.F, lowerY.F, lowerZ.F, upperX.F, upperY.F, upperZ.F)
Global xJointD6SetAngularLimits._xJointD6SetAngularLimits = GetFunction(*Library_, "_xJointD6SetAngularLimits@28")
Prototype.F _xJointD6GetLinearLowerX(joint.L)
Global xJointD6GetLinearLowerX._xJointD6GetLinearLowerX = GetFunction(*Library_, "_xJointD6GetLinearLowerX@4")
Prototype.F _xJointD6GetLinearLowerY(joint.L)
Global xJointD6GetLinearLowerY._xJointD6GetLinearLowerY = GetFunction(*Library_, "_xJointD6GetLinearLowerY@4")
Prototype.F _xJointD6GetLinearLowerZ(joint.L)
Global xJointD6GetLinearLowerZ._xJointD6GetLinearLowerZ = GetFunction(*Library_, "_xJointD6GetLinearLowerZ@4")
Prototype.F _xJointD6GetLinearUpperX(joint.L)
Global xJointD6GetLinearUpperX._xJointD6GetLinearUpperX = GetFunction(*Library_, "_xJointD6GetLinearUpperX@4")
Prototype.F _xJointD6GetLinearUpperY(joint.L)
Global xJointD6GetLinearUpperY._xJointD6GetLinearUpperY = GetFunction(*Library_, "_xJointD6GetLinearUpperY@4")
Prototype.F _xJointD6GetLinearUpperZ(joint.L)
Global xJointD6GetLinearUpperZ._xJointD6GetLinearUpperZ = GetFunction(*Library_, "_xJointD6GetLinearUpperZ@4")
Prototype.F _xJointD6GetAngularLowerX(joint.L)
Global xJointD6GetAngularLowerX._xJointD6GetAngularLowerX = GetFunction(*Library_, "_xJointD6GetAngularLowerX@4")
Prototype.F _xJointD6GetAngularLowerY(joint.L)
Global xJointD6GetAngularLowerY._xJointD6GetAngularLowerY = GetFunction(*Library_, "_xJointD6GetAngularLowerY@4")
Prototype.F _xJointD6GetAngularLowerZ(joint.L)
Global xJointD6GetAngularLowerZ._xJointD6GetAngularLowerZ = GetFunction(*Library_, "_xJointD6GetAngularLowerZ@4")
Prototype.F _xJointD6GetAngularUpperX(joint.L)
Global xJointD6GetAngularUpperX._xJointD6GetAngularUpperX = GetFunction(*Library_, "_xJointD6GetAngularUpperX@4")
Prototype.F _xJointD6GetAngularUpperY(joint.L)
Global xJointD6GetAngularUpperY._xJointD6GetAngularUpperY = GetFunction(*Library_, "_xJointD6GetAngularUpperY@4")
Prototype.F _xJointD6GetAngularUpperZ(joint.L)
Global xJointD6GetAngularUpperZ._xJointD6GetAngularUpperZ = GetFunction(*Library_, "_xJointD6GetAngularUpperZ@4")
Prototype.L _xJointD6SpringSetParam_(joint.L, index.L, enabled.L, damping.F, stiffness.F)
Global xJointD6SpringSetParam_._xJointD6SpringSetParam_ = GetFunction(*Library_, "_xJointD6SpringSetParam@20")
Prototype.L _xJointD6SpringSetParam(joint.L, index.L, enabled.L, damping.F, stiffness.F)
Global xJointD6SpringSetParam._xJointD6SpringSetParam = GetFunction(*Library_, "xJointD6SpringSetParam")
Prototype.L _xJointHingeSetAxis(joint.L, x.F, y.F, z.F)
Global xJointHingeSetAxis._xJointHingeSetAxis = GetFunction(*Library_, "_xJointHingeSetAxis@16")
Prototype.L _xJointHingeSetLimits_(joint.L, lowerLimit.F, upperLimit.F, softness.F, biasFactor.F, relaxationFactor.F)
Global xJointHingeSetLimits_._xJointHingeSetLimits_ = GetFunction(*Library_, "_xJointHingeSetLimits@24")
Prototype.L _xJointHingeSetLimits(joint.L, lowerLimit.F, upperLimit.F, softness.F, biasFactor.F, relaxationFactor.F)
Global xJointHingeSetLimits._xJointHingeSetLimits = GetFunction(*Library_, "xJointHingeSetLimits")
Prototype.F _xJointHingeGetLowerLimit(joint.L)
Global xJointHingeGetLowerLimit._xJointHingeGetLowerLimit = GetFunction(*Library_, "_xJointHingeGetLowerLimit@4")
Prototype.F _xJointHingeGetUpperLimit(joint.L)
Global xJointHingeGetUpperLimit._xJointHingeGetUpperLimit = GetFunction(*Library_, "_xJointHingeGetUpperLimit@4")
Prototype.L _xJointEnableMotor_(joint.L, enabled.L, targetVelocity.F, maxForce.F, index.L)
Global xJointEnableMotor_._xJointEnableMotor_ = GetFunction(*Library_, "_xJointEnableMotor@20")
Prototype.L _xJointEnableMotor(joint.L, enabled.L, targetVelocity.F, maxForce.F, index.L)
Global xJointEnableMotor._xJointEnableMotor = GetFunction(*Library_, "xJointEnableMotor")
Prototype.L _xJointHingeSetMotorTarget(joint.L, targetAngle.F, deltaTime.F)
Global xJointHingeSetMotorTarget._xJointHingeSetMotorTarget = GetFunction(*Library_, "_xJointHingeSetMotorTarget@12")
Prototype.L _xJointGetEntityA(joint.L)
Global xJointGetEntityA._xJointGetEntityA = GetFunction(*Library_, "_xJointGetEntityA@4")
Prototype.L _xJointGetEntityB(joint.L)
Global xJointGetEntityB._xJointGetEntityB = GetFunction(*Library_, "_xJointGetEntityB@4")
Prototype.L _xEntityApplyCentralForce_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyCentralForce_._xEntityApplyCentralForce_ = GetFunction(*Library_, "_xEntityApplyCentralForce@20")
Prototype.L _xEntityApplyCentralForce(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyCentralForce._xEntityApplyCentralForce = GetFunction(*Library_, "xEntityApplyCentralForce")
Prototype.L _xEntityApplyCentralImpulse_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyCentralImpulse_._xEntityApplyCentralImpulse_ = GetFunction(*Library_, "_xEntityApplyCentralImpulse@20")
Prototype.L _xEntityApplyCentralImpulse(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyCentralImpulse._xEntityApplyCentralImpulse = GetFunction(*Library_, "xEntityApplyCentralImpulse")
Prototype.L _xEntityApplyTorque_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyTorque_._xEntityApplyTorque_ = GetFunction(*Library_, "_xEntityApplyTorque@20")
Prototype.L _xEntityApplyTorque(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyTorque._xEntityApplyTorque = GetFunction(*Library_, "xEntityApplyTorque")
Prototype.L _xEntityApplyTorqueImpulse_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyTorqueImpulse_._xEntityApplyTorqueImpulse_ = GetFunction(*Library_, "_xEntityApplyTorqueImpulse@20")
Prototype.L _xEntityApplyTorqueImpulse(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityApplyTorqueImpulse._xEntityApplyTorqueImpulse = GetFunction(*Library_, "xEntityApplyTorqueImpulse")
Prototype.L _xEntityApplyForce_(entity.L, x.F, y.F, z.F, pointx.F, pointy.F, pointz.F, isGlobal.L, globalPoint.L)
Global xEntityApplyForce_._xEntityApplyForce_ = GetFunction(*Library_, "_xEntityApplyForce@36")
Prototype.L _xEntityApplyForce(entity.L, x.F, y.F, z.F, pointx.F, pointy.F, pointz.F, isGlobal.L, globalPoint.L)
Global xEntityApplyForce._xEntityApplyForce = GetFunction(*Library_, "xEntityApplyForce")
Prototype.L _xEntityApplyImpulse_(entity.L, x.F, y.F, z.F, pointx.F, pointy.F, pointz.F, isGlobal.L, globalPoint.L)
Global xEntityApplyImpulse_._xEntityApplyImpulse_ = GetFunction(*Library_, "_xEntityApplyImpulse@36")
Prototype.L _xEntityApplyImpulse(entity.L, x.F, y.F, z.F, pointx.F, pointy.F, pointz.F, isGlobal.L, globalPoint.L)
Global xEntityApplyImpulse._xEntityApplyImpulse = GetFunction(*Library_, "xEntityApplyImpulse")
Prototype.L _xEntityReleaseForces(entity.L)
Global xEntityReleaseForces._xEntityReleaseForces = GetFunction(*Library_, "_xEntityReleaseForces@4")
Prototype.L _xWorldSetGravity_(x.F, y.F, z.F, world.L)
Global xWorldSetGravity_._xWorldSetGravity_ = GetFunction(*Library_, "_xWorldSetGravity@16")
Prototype.L _xWorldSetGravity(x.F, y.F, z.F, world.L)
Global xWorldSetGravity._xWorldSetGravity = GetFunction(*Library_, "xWorldSetGravity")
Prototype.F _xWorldGetGravityX_(world.L)
Global xWorldGetGravityX_._xWorldGetGravityX_ = GetFunction(*Library_, "_xWorldGetGravityX@4")
Prototype.F _xWorldGetGravityX(world.L)
Global xWorldGetGravityX._xWorldGetGravityX = GetFunction(*Library_, "xWorldGetGravityX")
Prototype.F _xWorldGetGravityY_(world.L)
Global xWorldGetGravityY_._xWorldGetGravityY_ = GetFunction(*Library_, "_xWorldGetGravityY@4")
Prototype.F _xWorldGetGravityY(world.L)
Global xWorldGetGravityY._xWorldGetGravityY = GetFunction(*Library_, "xWorldGetGravityY")
Prototype.F _xWorldGetGravityZ_(world.L)
Global xWorldGetGravityZ_._xWorldGetGravityZ_ = GetFunction(*Library_, "_xWorldGetGravityZ@4")
Prototype.F _xWorldGetGravityZ(world.L)
Global xWorldGetGravityZ._xWorldGetGravityZ = GetFunction(*Library_, "xWorldGetGravityZ")
Prototype.L _xEntitySetGravity(entity.L, x.F, y.F, z.F)
Global xEntitySetGravity._xEntitySetGravity = GetFunction(*Library_, "_xEntitySetGravity@16")
Prototype.F _xEntityGetGravityX(entity.L)
Global xEntityGetGravityX._xEntityGetGravityX = GetFunction(*Library_, "_xEntityGetGravityX@4")
Prototype.F _xEntityGetGravityY(entity.L)
Global xEntityGetGravityY._xEntityGetGravityY = GetFunction(*Library_, "_xEntityGetGravityY@4")
Prototype.F _xEntityGetGravityZ(entity.L)
Global xEntityGetGravityZ._xEntityGetGravityZ = GetFunction(*Library_, "_xEntityGetGravityZ@4")
Prototype.L _xEntitySetLinearVelocity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntitySetLinearVelocity_._xEntitySetLinearVelocity_ = GetFunction(*Library_, "_xEntitySetLinearVelocity@20")
Prototype.L _xEntitySetLinearVelocity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntitySetLinearVelocity._xEntitySetLinearVelocity = GetFunction(*Library_, "xEntitySetLinearVelocity")
Prototype.F _xEntityGetLinearVelocityX_(entity.L, isGlobal.L)
Global xEntityGetLinearVelocityX_._xEntityGetLinearVelocityX_ = GetFunction(*Library_, "_xEntityGetLinearVelocityX@8")
Prototype.F _xEntityGetLinearVelocityX(entity.L, isGlobal.L)
Global xEntityGetLinearVelocityX._xEntityGetLinearVelocityX = GetFunction(*Library_, "xEntityGetLinearVelocityX")
Prototype.F _xEntityGetLinearVelocityY_(entity.L, isGlobal.L)
Global xEntityGetLinearVelocityY_._xEntityGetLinearVelocityY_ = GetFunction(*Library_, "_xEntityGetLinearVelocityY@8")
Prototype.F _xEntityGetLinearVelocityY(entity.L, isGlobal.L)
Global xEntityGetLinearVelocityY._xEntityGetLinearVelocityY = GetFunction(*Library_, "xEntityGetLinearVelocityY")
Prototype.F _xEntityGetLinearVelocityZ_(entity.L, isGlobal.L)
Global xEntityGetLinearVelocityZ_._xEntityGetLinearVelocityZ_ = GetFunction(*Library_, "_xEntityGetLinearVelocityZ@8")
Prototype.F _xEntityGetLinearVelocityZ(entity.L, isGlobal.L)
Global xEntityGetLinearVelocityZ._xEntityGetLinearVelocityZ = GetFunction(*Library_, "xEntityGetLinearVelocityZ")
Prototype.L _xEntitySetAngularVelocity_(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntitySetAngularVelocity_._xEntitySetAngularVelocity_ = GetFunction(*Library_, "_xEntitySetAngularVelocity@20")
Prototype.L _xEntitySetAngularVelocity(entity.L, x.F, y.F, z.F, isGlobal.L)
Global xEntitySetAngularVelocity._xEntitySetAngularVelocity = GetFunction(*Library_, "xEntitySetAngularVelocity")
Prototype.F _xEntityGetAngularVelocityX_(entity.L, isGlobal.L)
Global xEntityGetAngularVelocityX_._xEntityGetAngularVelocityX_ = GetFunction(*Library_, "_xEntityGetAngularVelocityX@8")
Prototype.F _xEntityGetAngularVelocityX(entity.L, isGlobal.L)
Global xEntityGetAngularVelocityX._xEntityGetAngularVelocityX = GetFunction(*Library_, "xEntityGetAngularVelocityX")
Prototype.F _xEntityGetAngularVelocityY_(entity.L, isGlobal.L)
Global xEntityGetAngularVelocityY_._xEntityGetAngularVelocityY_ = GetFunction(*Library_, "_xEntityGetAngularVelocityY@8")
Prototype.F _xEntityGetAngularVelocityY(entity.L, isGlobal.L)
Global xEntityGetAngularVelocityY._xEntityGetAngularVelocityY = GetFunction(*Library_, "xEntityGetAngularVelocityY")
Prototype.F _xEntityGetAngularVelocityZ_(entity.L, isGlobal.L)
Global xEntityGetAngularVelocityZ_._xEntityGetAngularVelocityZ_ = GetFunction(*Library_, "_xEntityGetAngularVelocityZ@8")
Prototype.F _xEntityGetAngularVelocityZ(entity.L, isGlobal.L)
Global xEntityGetAngularVelocityZ._xEntityGetAngularVelocityZ = GetFunction(*Library_, "xEntityGetAngularVelocityZ")
Prototype.L _xEntitySetDamping(entity.L, linear.F, angular.F)
Global xEntitySetDamping._xEntitySetDamping = GetFunction(*Library_, "_xEntitySetDamping@12")
Prototype.F _xEntityGetLinearDamping(entity.L)
Global xEntityGetLinearDamping._xEntityGetLinearDamping = GetFunction(*Library_, "_xEntityGetLinearDamping@4")
Prototype.F _xEntityGetAngularDamping(entity.L)
Global xEntityGetAngularDamping._xEntityGetAngularDamping = GetFunction(*Library_, "_xEntityGetAngularDamping@4")
Prototype.L _xEntitySetFriction(entity.L, friction.F)
Global xEntitySetFriction._xEntitySetFriction = GetFunction(*Library_, "_xEntitySetFriction@8")
Prototype.F _xEntityGetFriction(entity.L)
Global xEntityGetFriction._xEntityGetFriction = GetFunction(*Library_, "_xEntityGetFriction@4")
Prototype.L _xEntitySetAnisotropicFriction(entity.L, fx.F, fy.F, fz.F)
Global xEntitySetAnisotropicFriction._xEntitySetAnisotropicFriction = GetFunction(*Library_, "_xEntitySetAnisotropicFriction@16")
Prototype.F _xEntityGetAnisotropicFrictionX(entity.L)
Global xEntityGetAnisotropicFrictionX._xEntityGetAnisotropicFrictionX = GetFunction(*Library_, "_xEntityGetAnisotropicFrictionX@4")
Prototype.F _xEntityGetAnisotropicFrictionY(entity.L)
Global xEntityGetAnisotropicFrictionY._xEntityGetAnisotropicFrictionY = GetFunction(*Library_, "_xEntityGetAnisotropicFrictionY@4")
Prototype.F _xEntityGetAnisotropicFrictionZ(entity.L)
Global xEntityGetAnisotropicFrictionZ._xEntityGetAnisotropicFrictionZ = GetFunction(*Library_, "_xEntityGetAnisotropicFrictionZ@4")
Prototype.L _xEntitySetLinearFactor(entity.L, x.F, y.F, z.F)
Global xEntitySetLinearFactor._xEntitySetLinearFactor = GetFunction(*Library_, "_xEntitySetLinearFactor@16")
Prototype.F _xEntityGetLinearFactorX(entity.L)
Global xEntityGetLinearFactorX._xEntityGetLinearFactorX = GetFunction(*Library_, "_xEntityGetLinearFactorX@4")
Prototype.F _xEntityGetLinearFactorY(entity.L)
Global xEntityGetLinearFactorY._xEntityGetLinearFactorY = GetFunction(*Library_, "_xEntityGetLinearFactorY@4")
Prototype.F _xEntityGetLinearFactorZ(entity.L)
Global xEntityGetLinearFactorZ._xEntityGetLinearFactorZ = GetFunction(*Library_, "_xEntityGetLinearFactorZ@4")
Prototype.L _xEntitySetAngularFactor(entity.L, x.F, y.F, z.F)
Global xEntitySetAngularFactor._xEntitySetAngularFactor = GetFunction(*Library_, "_xEntitySetAngularFactor@16")
Prototype.F _xEntityGetAngularFactorX(entity.L)
Global xEntityGetAngularFactorX._xEntityGetAngularFactorX = GetFunction(*Library_, "_xEntityGetAngularFactorX@4")
Prototype.F _xEntityGetAngularFactorY(entity.L)
Global xEntityGetAngularFactorY._xEntityGetAngularFactorY = GetFunction(*Library_, "_xEntityGetAngularFactorY@4")
Prototype.F _xEntityGetAngularFactorZ(entity.L)
Global xEntityGetAngularFactorZ._xEntityGetAngularFactorZ = GetFunction(*Library_, "_xEntityGetAngularFactorZ@4")
Prototype.L _xEntitySetRestitution(entity.L, restitution.F)
Global xEntitySetRestitution._xEntitySetRestitution = GetFunction(*Library_, "_xEntitySetRestitution@8")
Prototype.F _xEntityGetRestitution(entity.L)
Global xEntityGetRestitution._xEntityGetRestitution = GetFunction(*Library_, "_xEntityGetRestitution@4")
Prototype.L _xEntitySetMass(entity.L, mass.F)
Global xEntitySetMass._xEntitySetMass = GetFunction(*Library_, "_xEntitySetMass@8")
Prototype.F _xEntityGetMass(entity.L)
Global xEntityGetMass._xEntityGetMass = GetFunction(*Library_, "_xEntityGetMass@4")
Prototype.L _xEntityCountContacts(entity.L)
Global xEntityCountContacts._xEntityCountContacts = GetFunction(*Library_, "_xEntityCountContacts@4")
Prototype.F _xEntityGetContactX(entity.L, index.L)
Global xEntityGetContactX._xEntityGetContactX = GetFunction(*Library_, "_xEntityGetContactX@8")
Prototype.F _xEntityGetContactY(entity.L, index.L)
Global xEntityGetContactY._xEntityGetContactY = GetFunction(*Library_, "_xEntityGetContactY@8")
Prototype.F _xEntityGetContactZ(entity.L, index.L)
Global xEntityGetContactZ._xEntityGetContactZ = GetFunction(*Library_, "_xEntityGetContactZ@8")
Prototype.F _xEntityGetContactNX(entity.L, index.L)
Global xEntityGetContactNX._xEntityGetContactNX = GetFunction(*Library_, "_xEntityGetContactNX@8")
Prototype.F _xEntityGetContactNY(entity.L, index.L)
Global xEntityGetContactNY._xEntityGetContactNY = GetFunction(*Library_, "_xEntityGetContactNY@8")
Prototype.F _xEntityGetContactNZ(entity.L, index.L)
Global xEntityGetContactNZ._xEntityGetContactNZ = GetFunction(*Library_, "_xEntityGetContactNZ@8")
Prototype.F _xEntityGetContactDistance(entity.L, index.L)
Global xEntityGetContactDistance._xEntityGetContactDistance = GetFunction(*Library_, "_xEntityGetContactDistance@8")
Prototype.L _xEntityGetContact(entity.L, index.L)
Global xEntityGetContact._xEntityGetContact = GetFunction(*Library_, "_xEntityGetContact@8")
Prototype.F _xEntityGetContactImpulse(entity.L, index.L)
Global xEntityGetContactImpulse._xEntityGetContactImpulse = GetFunction(*Library_, "_xEntityGetContactImpulse@8")
Prototype.L _xEntitySetCollisionGroup(entity.L, group.L)
Global xEntitySetCollisionGroup._xEntitySetCollisionGroup = GetFunction(*Library_, "_xEntitySetCollisionGroup@8")
Prototype.L _xEntityGetCollisionGroup(entity.L)
Global xEntityGetCollisionGroup._xEntityGetCollisionGroup = GetFunction(*Library_, "_xEntityGetCollisionGroup@4")
Prototype.L _xEntitySetContactGroup(entity.L, group.L)
Global xEntitySetContactGroup._xEntitySetContactGroup = GetFunction(*Library_, "_xEntitySetContactGroup@8")
Prototype.L _xEntityGetContactGroup(entity.L)
Global xEntityGetContactGroup._xEntityGetContactGroup = GetFunction(*Library_, "_xEntityGetContactGroup@4")
Prototype.L _xEntitySetRaycastGroup(entity.L, group.L)
Global xEntitySetRaycastGroup._xEntitySetRaycastGroup = GetFunction(*Library_, "_xEntitySetRaycastGroup@8")
Prototype.L _xEntityGetRaycastGroup(entity.L)
Global xEntityGetRaycastGroup._xEntityGetRaycastGroup = GetFunction(*Library_, "_xEntityGetRaycastGroup@4")
Prototype.L _xPhysicsSetCollisionFilter(group0.L, group1.L, state.L)
Global xPhysicsSetCollisionFilter._xPhysicsSetCollisionFilter = GetFunction(*Library_, "_xPhysicsSetCollisionFilter@12")
Prototype.L _xPhysicsGetCollisionFilter(group0.L, group1.L)
Global xPhysicsGetCollisionFilter._xPhysicsGetCollisionFilter = GetFunction(*Library_, "_xPhysicsGetCollisionFilter@8")
Prototype.L _xPhysicsSetContactFilter(group0.L, group1.L, state.L)
Global xPhysicsSetContactFilter._xPhysicsSetContactFilter = GetFunction(*Library_, "_xPhysicsSetContactFilter@12")
Prototype.L _xPhysicsGetContactFilter(group0.L, group1.L)
Global xPhysicsGetContactFilter._xPhysicsGetContactFilter = GetFunction(*Library_, "_xPhysicsGetContactFilter@8")
Prototype.L _xPhysicsSetRaycastFilter(rayGroup.L, bodyGroup.L, state.L)
Global xPhysicsSetRaycastFilter._xPhysicsSetRaycastFilter = GetFunction(*Library_, "_xPhysicsSetRaycastFilter@12")
Prototype.L _xPhysicsGetRaycastFilter(rayGroup.L, bodyGroup.L)
Global xPhysicsGetRaycastFilter._xPhysicsGetRaycastFilter = GetFunction(*Library_, "_xPhysicsGetRaycastFilter@8")
Prototype.L _xEntityIsSleeping(entity.L)
Global xEntityIsSleeping._xEntityIsSleeping = GetFunction(*Library_, "_xEntityIsSleeping@4")
Prototype.L _xEntityDisableSleeping_(entity.L, state.L)
Global xEntityDisableSleeping_._xEntityDisableSleeping_ = GetFunction(*Library_, "_xEntityDisableSleeping@8")
Prototype.L _xEntityDisableSleeping(entity.L, state.L)
Global xEntityDisableSleeping._xEntityDisableSleeping = GetFunction(*Library_, "xEntityDisableSleeping")
Prototype.L _xEntityWakeUp(entity.L)
Global xEntityWakeUp._xEntityWakeUp = GetFunction(*Library_, "_xEntityWakeUp@4")
Prototype.L _xEntitySleep(entity.L)
Global xEntitySleep._xEntitySleep = GetFunction(*Library_, "_xEntitySleep@4")
Prototype.L _xEntitySetSleepingThresholds(entity.L, linearThreshold.F, angularThreshold.F)
Global xEntitySetSleepingThresholds._xEntitySetSleepingThresholds = GetFunction(*Library_, "_xEntitySetSleepingThresholds@12")
Prototype.F _xEntityGetLinearSleepingThreshold(entity.L)
Global xEntityGetLinearSleepingThreshold._xEntityGetLinearSleepingThreshold = GetFunction(*Library_, "_xEntityGetLinearSleepingThreshold@4")
Prototype.F _xEntityGetAngularSleepingThreshold(entity.L)
Global xEntityGetAngularSleepingThreshold._xEntityGetAngularSleepingThreshold = GetFunction(*Library_, "_xEntityGetAngularSleepingThreshold@4")
Prototype.L _xPhysicsRayCast_(fromX.F, fromY.F, fromZ.F, toX.F, toY.F, toZ.F, rcType.L, rayGroup.L)
Global xPhysicsRayCast_._xPhysicsRayCast_ = GetFunction(*Library_, "_xPhysicsRayCast@32")
Prototype.L _xPhysicsRayCast(fromX.F, fromY.F, fromZ.F, toX.F, toY.F, toZ.F, rcType.L, rayGroup.L)
Global xPhysicsRayCast._xPhysicsRayCast = GetFunction(*Library_, "xPhysicsRayCast")
Prototype.L _xPhysicsGetHitEntity_(index.L)
Global xPhysicsGetHitEntity_._xPhysicsGetHitEntity_ = GetFunction(*Library_, "_xPhysicsGetHitEntity@4")
Prototype.L _xPhysicsGetHitEntity(index.L)
Global xPhysicsGetHitEntity._xPhysicsGetHitEntity = GetFunction(*Library_, "xPhysicsGetHitEntity")
Prototype.F _xPhysicsGetHitPointX_(index.L)
Global xPhysicsGetHitPointX_._xPhysicsGetHitPointX_ = GetFunction(*Library_, "_xPhysicsGetHitPointX@4")
Prototype.F _xPhysicsGetHitPointX(index.L)
Global xPhysicsGetHitPointX._xPhysicsGetHitPointX = GetFunction(*Library_, "xPhysicsGetHitPointX")
Prototype.F _xPhysicsGetHitPointY_(index.L)
Global xPhysicsGetHitPointY_._xPhysicsGetHitPointY_ = GetFunction(*Library_, "_xPhysicsGetHitPointY@4")
Prototype.F _xPhysicsGetHitPointY(index.L)
Global xPhysicsGetHitPointY._xPhysicsGetHitPointY = GetFunction(*Library_, "xPhysicsGetHitPointY")
Prototype.F _xPhysicsGetHitPointZ_(index.L)
Global xPhysicsGetHitPointZ_._xPhysicsGetHitPointZ_ = GetFunction(*Library_, "_xPhysicsGetHitPointZ@4")
Prototype.F _xPhysicsGetHitPointZ(index.L)
Global xPhysicsGetHitPointZ._xPhysicsGetHitPointZ = GetFunction(*Library_, "xPhysicsGetHitPointZ")
Prototype.F _xPhysicsGetHitNormalX_(index.L)
Global xPhysicsGetHitNormalX_._xPhysicsGetHitNormalX_ = GetFunction(*Library_, "_xPhysicsGetHitNormalX@4")
Prototype.F _xPhysicsGetHitNormalX(index.L)
Global xPhysicsGetHitNormalX._xPhysicsGetHitNormalX = GetFunction(*Library_, "xPhysicsGetHitNormalX")
Prototype.F _xPhysicsGetHitNormalY_(index.L)
Global xPhysicsGetHitNormalY_._xPhysicsGetHitNormalY_ = GetFunction(*Library_, "_xPhysicsGetHitNormalY@4")
Prototype.F _xPhysicsGetHitNormalY(index.L)
Global xPhysicsGetHitNormalY._xPhysicsGetHitNormalY = GetFunction(*Library_, "xPhysicsGetHitNormalY")
Prototype.F _xPhysicsGetHitNormalZ_(index.L)
Global xPhysicsGetHitNormalZ_._xPhysicsGetHitNormalZ_ = GetFunction(*Library_, "_xPhysicsGetHitNormalZ@4")
Prototype.F _xPhysicsGetHitNormalZ(index.L)
Global xPhysicsGetHitNormalZ._xPhysicsGetHitNormalZ = GetFunction(*Library_, "xPhysicsGetHitNormalZ")
Prototype.F _xPhysicsGetHitDistance_(index.L)
Global xPhysicsGetHitDistance_._xPhysicsGetHitDistance_ = GetFunction(*Library_, "_xPhysicsGetHitDistance@4")
Prototype.F _xPhysicsGetHitDistance(index.L)
Global xPhysicsGetHitDistance._xPhysicsGetHitDistance = GetFunction(*Library_, "xPhysicsGetHitDistance")
Prototype.L _xPhysicsCountHits()
Global xPhysicsCountHits._xPhysicsCountHits = GetFunction(*Library_, "_xPhysicsCountHits@0")
Prototype.L _xEntityBodyLocalPosition(entity.L, x.F, y.F, z.F)
Global xEntityBodyLocalPosition._xEntityBodyLocalPosition = GetFunction(*Library_, "_xEntityBodyLocalPosition@16")
Prototype.L _xEntityBodyLocalRotation(entity.L, pitch.F, yaw.F, roll.F)
Global xEntityBodyLocalRotation._xEntityBodyLocalRotation = GetFunction(*Library_, "_xEntityBodyLocalRotation@16")
Prototype.L _xEntityBodyLocalScale(entity.L, x.F, y.F, z.F)
Global xEntityBodyLocalScale._xEntityBodyLocalScale = GetFunction(*Library_, "_xEntityBodyLocalScale@16")
Prototype.L _xWorldSetFrequency_(frequency.F, world.L)
Global xWorldSetFrequency_._xWorldSetFrequency_ = GetFunction(*Library_, "_xWorldSetFrequency@8")
Prototype.L _xWorldSetFrequency(frequency.F, world.L)
Global xWorldSetFrequency._xWorldSetFrequency = GetFunction(*Library_, "xWorldSetFrequency")
Prototype.L _xEntityMakeKinematic(entity.L, state.L)
Global xEntityMakeKinematic._xEntityMakeKinematic = GetFunction(*Library_, "_xEntityMakeKinematic@8")
Prototype.L _xEntityIsKinematic(entity.L)
Global xEntityIsKinematic._xEntityIsKinematic = GetFunction(*Library_, "_xEntityIsKinematic@4")
Prototype.L _xPhysicsDebugRender(state.L)
Global xPhysicsDebugRender._xPhysicsDebugRender = GetFunction(*Library_, "_xPhysicsDebugRender@4")
Prototype.L _xEntityDisableSimulation(entity.L, state.L)
Global xEntityDisableSimulation._xEntityDisableSimulation = GetFunction(*Library_, "_xEntityDisableSimulation@8")
Prototype.L _xEntityHasBody(entity.L)
Global xEntityHasBody._xEntityHasBody = GetFunction(*Library_, "_xEntityHasBody@4")
Prototype.L _xEntityCreateVehicle(chassisEntity.L)
Global xEntityCreateVehicle._xEntityCreateVehicle = GetFunction(*Library_, "_xEntityCreateVehicle@4")
Prototype.L _xEntityFreeVehicle(chassisEntity.L)
Global xEntityFreeVehicle._xEntityFreeVehicle = GetFunction(*Library_, "_xEntityFreeVehicle@4")
Prototype.L _xEntityCountWheels(chassisEntity.L)
Global xEntityCountWheels._xEntityCountWheels = GetFunction(*Library_, "_xEntityCountWheels@4")
Prototype.L _xEntityAddWheel(chassisEntity.L, wheelEntity.L)
Global xEntityAddWheel._xEntityAddWheel = GetFunction(*Library_, "_xEntityAddWheel@8")
Prototype.L _xEntityWheelSetRadius(chassisEntity.L, index.L, radius.F)
Global xEntityWheelSetRadius._xEntityWheelSetRadius = GetFunction(*Library_, "_xEntityWheelSetRadius@12")
Prototype.L _xEntityWheelSetAxle(chassisEntity.L, index.L, x.F, y.F, z.F)
Global xEntityWheelSetAxle._xEntityWheelSetAxle = GetFunction(*Library_, "_xEntityWheelSetAxle@20")
Prototype.L _xEntityWheelSetRay(chassisEntity.L, index.L, x.F, y.F, z.F)
Global xEntityWheelSetRay._xEntityWheelSetRay = GetFunction(*Library_, "_xEntityWheelSetRay@20")
Prototype.L _xEntityWheelSetSuspensionLength(chassisEntity.L, index.L, length.F)
Global xEntityWheelSetSuspensionLength._xEntityWheelSetSuspensionLength = GetFunction(*Library_, "_xEntityWheelSetSuspensionLength@12")
Prototype.L _xEntityWheelSetBrake(chassisEntity.L, index.L, brake.F)
Global xEntityWheelSetBrake._xEntityWheelSetBrake = GetFunction(*Library_, "_xEntityWheelSetBrake@12")
Prototype.L _xEntityWheelSetMaxSuspensionForce(chassisEntity.L, index.L, force.F)
Global xEntityWheelSetMaxSuspensionForce._xEntityWheelSetMaxSuspensionForce = GetFunction(*Library_, "_xEntityWheelSetMaxSuspensionForce@12")
Prototype.L _xEntityWheelSetMaxSuspensionTravel(chassisEntity.L, index.L, travel.F)
Global xEntityWheelSetMaxSuspensionTravel._xEntityWheelSetMaxSuspensionTravel = GetFunction(*Library_, "_xEntityWheelSetMaxSuspensionTravel@12")
Prototype.L _xEntityWheelSetSuspensionStiffness(chassisEntity.L, index.L, stiffness.F)
Global xEntityWheelSetSuspensionStiffness._xEntityWheelSetSuspensionStiffness = GetFunction(*Library_, "_xEntityWheelSetSuspensionStiffness@12")
Prototype.L _xEntityWheelSetSuspensionDamping(chassisEntity.L, index.L, damping.F)
Global xEntityWheelSetSuspensionDamping._xEntityWheelSetSuspensionDamping = GetFunction(*Library_, "_xEntityWheelSetSuspensionDamping@12")
Prototype.L _xEntityWheelSetSuspensionCompression(chassisEntity.L, index.L, compression.F)
Global xEntityWheelSetSuspensionCompression._xEntityWheelSetSuspensionCompression = GetFunction(*Library_, "_xEntityWheelSetSuspensionCompression@12")
Prototype.L _xEntityWheelSetFriction(chassisEntity.L, index.L, friction.F)
Global xEntityWheelSetFriction._xEntityWheelSetFriction = GetFunction(*Library_, "_xEntityWheelSetFriction@12")
Prototype.L _xEntityWheelSetEngineForce(chassisEntity.L, index.L, force.F)
Global xEntityWheelSetEngineForce._xEntityWheelSetEngineForce = GetFunction(*Library_, "_xEntityWheelSetEngineForce@12")
Prototype.L _xEntityWheelSetRollInfluence(chassisEntity.L, index.L, roll.F)
Global xEntityWheelSetRollInfluence._xEntityWheelSetRollInfluence = GetFunction(*Library_, "_xEntityWheelSetRollInfluence@12")
Prototype.L _xEntityWheelSetRotation(chassisEntity.L, index.L, rotation.F)
Global xEntityWheelSetRotation._xEntityWheelSetRotation = GetFunction(*Library_, "_xEntityWheelSetRotation@12")
Prototype.L _xEntityWheelSetSteering(chassisEntity.L, index.L, steering.F)
Global xEntityWheelSetSteering._xEntityWheelSetSteering = GetFunction(*Library_, "_xEntityWheelSetSteering@12")
Prototype.L _xEntityWheelSetConnectionPoint_(chassisEntity.L, index.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityWheelSetConnectionPoint_._xEntityWheelSetConnectionPoint_ = GetFunction(*Library_, "_xEntityWheelSetConnectionPoint@24")
Prototype.L _xEntityWheelSetConnectionPoint(chassisEntity.L, index.L, x.F, y.F, z.F, isGlobal.L)
Global xEntityWheelSetConnectionPoint._xEntityWheelSetConnectionPoint = GetFunction(*Library_, "xEntityWheelSetConnectionPoint")
Prototype.F _xEntityWheelGetSuspensionLength(chassisEntity.L, index.L)
Global xEntityWheelGetSuspensionLength._xEntityWheelGetSuspensionLength = GetFunction(*Library_, "_xEntityWheelGetSuspensionLength@8")
Prototype.F _xEntityWheelGetPitch(chassisEntity.L, index.L)
Global xEntityWheelGetPitch._xEntityWheelGetPitch = GetFunction(*Library_, "_xEntityWheelGetPitch@8")
Prototype.F _xEntityWheelGetYaw(chassisEntity.L, index.L)
Global xEntityWheelGetYaw._xEntityWheelGetYaw = GetFunction(*Library_, "_xEntityWheelGetYaw@8")
Prototype.F _xEntityWheelGetRoll(chassisEntity.L, index.L)
Global xEntityWheelGetRoll._xEntityWheelGetRoll = GetFunction(*Library_, "_xEntityWheelGetRoll@8")
Prototype.L _xEntityWheelGetContactEntity(chassisEntity.L, index.L)
Global xEntityWheelGetContactEntity._xEntityWheelGetContactEntity = GetFunction(*Library_, "_xEntityWheelGetContactEntity@8")
Prototype.L _xLoadPostEffect(path.P-Ascii)
Global xLoadPostEffect._xLoadPostEffect = GetFunction(*Library_, "_xLoadPostEffect@4")
Prototype.L _xFreePostEffect(postEffect.L)
Global xFreePostEffect._xFreePostEffect = GetFunction(*Library_, "_xFreePostEffect@4")
Prototype.L _xSetPostEffect_(index.L, postEffect.L, technique.P-Ascii)
Global xSetPostEffect_._xSetPostEffect_ = GetFunction(*Library_, "_xSetPostEffect@12")
Prototype.L _xSetPostEffect(index.L, postEffect.L, technique.P-Ascii)
Global xSetPostEffect._xSetPostEffect = GetFunction(*Library_, "xSetPostEffect")
Prototype.L _xRenderPostEffects()
Global xRenderPostEffects._xRenderPostEffects = GetFunction(*Library_, "_xRenderPostEffects@0")
Prototype.L _xSetPostEffectInt(postEffect.L, name.P-Ascii, value.L)
Global xSetPostEffectInt._xSetPostEffectInt = GetFunction(*Library_, "_xSetPostEffectInt@12")
Prototype.L _xSetPostEffectFloat(postEffect.L, name.P-Ascii, value.F)
Global xSetPostEffectFloat._xSetPostEffectFloat = GetFunction(*Library_, "_xSetPostEffectFloat@12")
Prototype.L _xSetPostEffectBool(postEffect.L, name.P-Ascii, value.L)
Global xSetPostEffectBool._xSetPostEffectBool = GetFunction(*Library_, "_xSetPostEffectBool@12")
Prototype.L _xSetPostEffectVector_(postEffect.L, name.P-Ascii, x.F, y.F, z.F, w.F)
Global xSetPostEffectVector_._xSetPostEffectVector_ = GetFunction(*Library_, "_xSetPostEffectVector@24")
Prototype.L _xSetPostEffectVector(postEffect.L, name.P-Ascii, x.F, y.F, z.F, w.F)
Global xSetPostEffectVector._xSetPostEffectVector = GetFunction(*Library_, "xSetPostEffectVector")
Prototype.L _xSetPostEffectTexture_(postEffect.L, name.P-Ascii, texture.L, frame.L)
Global xSetPostEffectTexture_._xSetPostEffectTexture_ = GetFunction(*Library_, "_xSetPostEffectTexture@16")
Prototype.L _xSetPostEffectTexture(postEffect.L, name.P-Ascii, texture.L, frame.L)
Global xSetPostEffectTexture._xSetPostEffectTexture = GetFunction(*Library_, "xSetPostEffectTexture")
Prototype.L _xDeletePostEffectConstant(postEffect.L, name.P-Ascii)
Global xDeletePostEffectConstant._xDeletePostEffectConstant = GetFunction(*Library_, "_xDeletePostEffectConstant@8")
Prototype.L _xClearPostEffectConstants(postEffect.L)
Global xClearPostEffectConstants._xClearPostEffectConstants = GetFunction(*Library_, "_xClearPostEffectConstants@4")
Prototype.L _xCreatePSystem_(pointSprites.L)
Global xCreatePSystem_._xCreatePSystem_ = GetFunction(*Library_, "_xCreatePSystem@4")
Prototype.L _xCreatePSystem(pointSprites.L)
Global xCreatePSystem._xCreatePSystem = GetFunction(*Library_, "xCreatePSystem")
Prototype.L _xPSystemType(psystem.L)
Global xPSystemType._xPSystemType = GetFunction(*Library_, "_xPSystemType@4")
Prototype.L _xPSystemSetBlend(psystem.L, mode.L)
Global xPSystemSetBlend._xPSystemSetBlend = GetFunction(*Library_, "_xPSystemSetBlend@8")
Prototype.L _xPSystemGetBlend(psystem.L)
Global xPSystemGetBlend._xPSystemGetBlend = GetFunction(*Library_, "_xPSystemGetBlend@4")
Prototype.L _xPSystemSetMaxParticles(psystem.L, maxNumber.L)
Global xPSystemSetMaxParticles._xPSystemSetMaxParticles = GetFunction(*Library_, "_xPSystemSetMaxParticles@8")
Prototype.L _xPSystemGetMaxParticles(psystem.L)
Global xPSystemGetMaxParticles._xPSystemGetMaxParticles = GetFunction(*Library_, "_xPSystemGetMaxParticles@4")
Prototype.L _xPSystemSetEmitterLifetime(psystem.L, lifetime.L)
Global xPSystemSetEmitterLifetime._xPSystemSetEmitterLifetime = GetFunction(*Library_, "_xPSystemSetEmitterLifetime@8")
Prototype.L _xPSystemGetEmitterLifetime(psystem.L)
Global xPSystemGetEmitterLifetime._xPSystemGetEmitterLifetime = GetFunction(*Library_, "_xPSystemGetEmitterLifetime@4")
Prototype.L _xPSystemSetParticleLifetime(psystem.L, lifetime.L)
Global xPSystemSetParticleLifetime._xPSystemSetParticleLifetime = GetFunction(*Library_, "_xPSystemSetParticleLifetime@8")
Prototype.L _xPSystemGetParticleLifetime(psystem.L)
Global xPSystemGetParticleLifetime._xPSystemGetParticleLifetime = GetFunction(*Library_, "_xPSystemGetParticleLifetime@4")
Prototype.L _xPSystemSetCreationInterval(psystem.L, interval.L)
Global xPSystemSetCreationInterval._xPSystemSetCreationInterval = GetFunction(*Library_, "_xPSystemSetCreationInterval@8")
Prototype.L _xPSystemGetCreationInterval(psystem.L)
Global xPSystemGetCreationInterval._xPSystemGetCreationInterval = GetFunction(*Library_, "_xPSystemGetCreationInterval@4")
Prototype.L _xPSystemSetCreationFrequency(psystem.L, frequency.L)
Global xPSystemSetCreationFrequency._xPSystemSetCreationFrequency = GetFunction(*Library_, "_xPSystemSetCreationFrequency@8")
Prototype.L _xPSystemGetCreationFrequency(psystem.L)
Global xPSystemGetCreationFrequency._xPSystemGetCreationFrequency = GetFunction(*Library_, "_xPSystemGetCreationFrequency@4")
Prototype.L _xPSystemSetTexture(psystem.L, texture.L, frames.L, speed.F)
Global xPSystemSetTexture._xPSystemSetTexture = GetFunction(*Library_, "_xPSystemSetTexture@16")
Prototype.L _xPSystemGetTexture(psystem.L)
Global xPSystemGetTexture._xPSystemGetTexture = GetFunction(*Library_, "_xPSystemGetTexture@4")
Prototype.L _xPSystemGetTextureFrames(psystem.L)
Global xPSystemGetTextureFrames._xPSystemGetTextureFrames = GetFunction(*Library_, "_xPSystemGetTextureFrames@4")
Prototype.L _xPSystemGetTextureAnimationSpeed(psystem.L)
Global xPSystemGetTextureAnimationSpeed._xPSystemGetTextureAnimationSpeed = GetFunction(*Library_, "_xPSystemGetTextureAnimationSpeed@4")
Prototype.L _xPSystemSetOffset(psystem.L, minx.F, miny.F, minz.F, maxx.F, maxy.F, maxz.F)
Global xPSystemSetOffset._xPSystemSetOffset = GetFunction(*Library_, "_xPSystemSetOffset@28")
Prototype.F _xPSystemGetOffsetMinX(psystem.L)
Global xPSystemGetOffsetMinX._xPSystemGetOffsetMinX = GetFunction(*Library_, "_xPSystemGetOffsetMinX@4")
Prototype.F _xPSystemGetOffsetMinY(psystem.L)
Global xPSystemGetOffsetMinY._xPSystemGetOffsetMinY = GetFunction(*Library_, "_xPSystemGetOffsetMinY@4")
Prototype.F _xPSystemGetOffsetMinZ(psystem.L)
Global xPSystemGetOffsetMinZ._xPSystemGetOffsetMinZ = GetFunction(*Library_, "_xPSystemGetOffsetMinZ@4")
Prototype.F _xPSystemGetOffsetMaxX(psystem.L)
Global xPSystemGetOffsetMaxX._xPSystemGetOffsetMaxX = GetFunction(*Library_, "_xPSystemGetOffsetMaxX@4")
Prototype.F _xPSystemGetOffsetMaxY(psystem.L)
Global xPSystemGetOffsetMaxY._xPSystemGetOffsetMaxY = GetFunction(*Library_, "_xPSystemGetOffsetMaxY@4")
Prototype.F _xPSystemGetOffsetMaxZ(psystem.L)
Global xPSystemGetOffsetMaxZ._xPSystemGetOffsetMaxZ = GetFunction(*Library_, "_xPSystemGetOffsetMaxZ@4")
Prototype.L _xPSystemSetVelocity(psystem.L, minx.F, miny.F, minz.F, maxx.F, maxy.F, maxz.F)
Global xPSystemSetVelocity._xPSystemSetVelocity = GetFunction(*Library_, "_xPSystemSetVelocity@28")
Prototype.F _xPSystemGetVelocityMinX(psystem.L)
Global xPSystemGetVelocityMinX._xPSystemGetVelocityMinX = GetFunction(*Library_, "_xPSystemGetVelocityMinX@4")
Prototype.F _xPSystemGetVelocityMinY(psystem.L)
Global xPSystemGetVelocityMinY._xPSystemGetVelocityMinY = GetFunction(*Library_, "_xPSystemGetVelocityMinY@4")
Prototype.F _xPSystemGetVelocityMinZ(psystem.L)
Global xPSystemGetVelocityMinZ._xPSystemGetVelocityMinZ = GetFunction(*Library_, "_xPSystemGetVelocityMinZ@4")
Prototype.F _xPSystemGetVelocityMaxX(psystem.L)
Global xPSystemGetVelocityMaxX._xPSystemGetVelocityMaxX = GetFunction(*Library_, "_xPSystemGetVelocityMaxX@4")
Prototype.F _xPSystemGetVelocityMaxY(psystem.L)
Global xPSystemGetVelocityMaxY._xPSystemGetVelocityMaxY = GetFunction(*Library_, "_xPSystemGetVelocityMaxY@4")
Prototype.F _xPSystemGetVelocityMaxZ(psystem.L)
Global xPSystemGetVelocityMaxZ._xPSystemGetVelocityMaxZ = GetFunction(*Library_, "_xPSystemGetVelocityMaxZ@4")
Prototype.L _xPSystemEnableFixedQuads(psystem.L, state.L)
Global xPSystemEnableFixedQuads._xPSystemEnableFixedQuads = GetFunction(*Library_, "_xPSystemEnableFixedQuads@8")
Prototype.L _xPSystemFixedQuadsUsed(psystem.L)
Global xPSystemFixedQuadsUsed._xPSystemFixedQuadsUsed = GetFunction(*Library_, "_xPSystemFixedQuadsUsed@4")
Prototype.L _xPSystemSetTorque(psystem.L, minx.F, miny.F, minz.F, maxx.F, maxy.F, maxz.F)
Global xPSystemSetTorque._xPSystemSetTorque = GetFunction(*Library_, "_xPSystemSetTorque@28")
Prototype.F _xPSystemGetTorqueMinX(psystem.L)
Global xPSystemGetTorqueMinX._xPSystemGetTorqueMinX = GetFunction(*Library_, "_xPSystemGetTorqueMinX@4")
Prototype.F _xPSystemGetTorqueMinY(psystem.L)
Global xPSystemGetTorqueMinY._xPSystemGetTorqueMinY = GetFunction(*Library_, "_xPSystemGetTorqueMinY@4")
Prototype.F _xPSystemGetTorqueMinZ(psystem.L)
Global xPSystemGetTorqueMinZ._xPSystemGetTorqueMinZ = GetFunction(*Library_, "_xPSystemGetTorqueMinZ@4")
Prototype.F _xPSystemGetTorqueMaxX(psystem.L)
Global xPSystemGetTorqueMaxX._xPSystemGetTorqueMaxX = GetFunction(*Library_, "_xPSystemGetTorqueMaxX@4")
Prototype.F _xPSystemGetTorqueMaxY(psystem.L)
Global xPSystemGetTorqueMaxY._xPSystemGetTorqueMaxY = GetFunction(*Library_, "_xPSystemGetTorqueMaxY@4")
Prototype.F _xPSystemGetTorqueMaxZ(psystem.L)
Global xPSystemGetTorqueMaxZ._xPSystemGetTorqueMaxZ = GetFunction(*Library_, "_xPSystemGetTorqueMaxZ@4")
Prototype.L _xPSystemSetGravity(psystem.L, gravity.F)
Global xPSystemSetGravity._xPSystemSetGravity = GetFunction(*Library_, "_xPSystemSetGravity@8")
Prototype.F _xPSystemGetGravity(psystem.L)
Global xPSystemGetGravity._xPSystemGetGravity = GetFunction(*Library_, "_xPSystemGetGravity@4")
Prototype.L _xPSystemSetAlpha(psystem.L, alpha.F)
Global xPSystemSetAlpha._xPSystemSetAlpha = GetFunction(*Library_, "_xPSystemSetAlpha@8")
Prototype.F _xPSystemGetAlpha(psystem.L)
Global xPSystemGetAlpha._xPSystemGetAlpha = GetFunction(*Library_, "_xPSystemGetAlpha@4")
Prototype.L _xPSystemSetFadeSpeed(psystem.L, speed.F)
Global xPSystemSetFadeSpeed._xPSystemSetFadeSpeed = GetFunction(*Library_, "_xPSystemSetFadeSpeed@8")
Prototype.F _xPSystemGetFadeSpeed(psystem.L)
Global xPSystemGetFadeSpeed._xPSystemGetFadeSpeed = GetFunction(*Library_, "_xPSystemGetFadeSpeed@4")
Prototype.L _xPSystemSetParticleSize(psystem.L, minx.F, miny.F, maxx.F, maxy.F)
Global xPSystemSetParticleSize._xPSystemSetParticleSize = GetFunction(*Library_, "_xPSystemSetParticleSize@20")
Prototype.F _xPSystemGetSizeMinX(psystem.L)
Global xPSystemGetSizeMinX._xPSystemGetSizeMinX = GetFunction(*Library_, "_xPSystemGetSizeMinX@4")
Prototype.F _xPSystemGetSizeMinY(psystem.L)
Global xPSystemGetSizeMinY._xPSystemGetSizeMinY = GetFunction(*Library_, "_xPSystemGetSizeMinY@4")
Prototype.F _xPSystemGetSizeMaxX(psystem.L)
Global xPSystemGetSizeMaxX._xPSystemGetSizeMaxX = GetFunction(*Library_, "_xPSystemGetSizeMaxX@4")
Prototype.F _xPSystemGetSizeMaxY(psystem.L)
Global xPSystemGetSizeMaxY._xPSystemGetSizeMaxY = GetFunction(*Library_, "_xPSystemGetSizeMaxY@4")
Prototype.L _xPSystemSetScaleSpeed(psystem.L, minx.F, miny.F, maxx.F, maxy.F)
Global xPSystemSetScaleSpeed._xPSystemSetScaleSpeed = GetFunction(*Library_, "_xPSystemSetScaleSpeed@20")
Prototype.F _xPSystemGetScaleSpeedMinX(psystem.L)
Global xPSystemGetScaleSpeedMinX._xPSystemGetScaleSpeedMinX = GetFunction(*Library_, "_xPSystemGetScaleSpeedMinX@4")
Prototype.F _xPSystemGetScaleSpeedMinY(psystem.L)
Global xPSystemGetScaleSpeedMinY._xPSystemGetScaleSpeedMinY = GetFunction(*Library_, "_xPSystemGetScaleSpeedMinY@4")
Prototype.F _xPSystemGetScaleSpeedMaxX(psystem.L)
Global xPSystemGetScaleSpeedMaxX._xPSystemGetScaleSpeedMaxX = GetFunction(*Library_, "_xPSystemGetScaleSpeedMaxX@4")
Prototype.F _xPSystemGetScaleSpeedMaxY(psystem.L)
Global xPSystemGetScaleSpeedMaxY._xPSystemGetScaleSpeedMaxY = GetFunction(*Library_, "_xPSystemGetScaleSpeedMaxY@4")
Prototype.L _xPSystemSetAngles(psystem.L, minx.F, miny.F, minz.F, maxx.F, maxy.F, maxz.F)
Global xPSystemSetAngles._xPSystemSetAngles = GetFunction(*Library_, "_xPSystemSetAngles@28")
Prototype.F _xPSystemGetAnglesMinX(psystem.L)
Global xPSystemGetAnglesMinX._xPSystemGetAnglesMinX = GetFunction(*Library_, "_xPSystemGetAnglesMinX@4")
Prototype.F _xPSystemGetAnglesMinY(psystem.L)
Global xPSystemGetAnglesMinY._xPSystemGetAnglesMinY = GetFunction(*Library_, "_xPSystemGetAnglesMinY@4")
Prototype.F _xPSystemGetAnglesMinZ(psystem.L)
Global xPSystemGetAnglesMinZ._xPSystemGetAnglesMinZ = GetFunction(*Library_, "_xPSystemGetAnglesMinZ@4")
Prototype.F _xPSystemGetAnglesMaxX(psystem.L)
Global xPSystemGetAnglesMaxX._xPSystemGetAnglesMaxX = GetFunction(*Library_, "_xPSystemGetAnglesMaxX@4")
Prototype.F _xPSystemGetAnglesMaxY(psystem.L)
Global xPSystemGetAnglesMaxY._xPSystemGetAnglesMaxY = GetFunction(*Library_, "_xPSystemGetAnglesMaxY@4")
Prototype.F _xPSystemGetAnglesMaxZ(psystem.L)
Global xPSystemGetAnglesMaxZ._xPSystemGetAnglesMaxZ = GetFunction(*Library_, "_xPSystemGetAnglesMaxZ@4")
Prototype.L _xPSystemSetColorMode(psystem.L, mode.L)
Global xPSystemSetColorMode._xPSystemSetColorMode = GetFunction(*Library_, "_xPSystemSetColorMode@8")
Prototype.L _xPSystemGetColorMode(psystem.L)
Global xPSystemGetColorMode._xPSystemGetColorMode = GetFunction(*Library_, "_xPSystemGetColorMode@4")
Prototype.L _xPSystemSetColors(psystem.L, sred.F, sgreen.F, sblue.F, ered.F, egreen.F, eblue.F)
Global xPSystemSetColors._xPSystemSetColors = GetFunction(*Library_, "_xPSystemSetColors@28")
Prototype.F _xPSystemGetBeginColorRed(psystem.L)
Global xPSystemGetBeginColorRed._xPSystemGetBeginColorRed = GetFunction(*Library_, "_xPSystemGetBeginColorRed@4")
Prototype.F _xPSystemGetBeginColorGreen(psystem.L)
Global xPSystemGetBeginColorGreen._xPSystemGetBeginColorGreen = GetFunction(*Library_, "_xPSystemGetBeginColorGreen@4")
Prototype.F _xPSystemGetBeginColorBlue(psystem.L)
Global xPSystemGetBeginColorBlue._xPSystemGetBeginColorBlue = GetFunction(*Library_, "_xPSystemGetBeginColorBlue@4")
Prototype.F _xPSystemGetEndColorRed(psystem.L)
Global xPSystemGetEndColorRed._xPSystemGetEndColorRed = GetFunction(*Library_, "_xPSystemGetEndColorRed@4")
Prototype.F _xPSystemGetEndColorGreen(psystem.L)
Global xPSystemGetEndColorGreen._xPSystemGetEndColorGreen = GetFunction(*Library_, "_xPSystemGetEndColorGreen@4")
Prototype.F _xPSystemGetEndColorBlue(psystem.L)
Global xPSystemGetEndColorBlue._xPSystemGetEndColorBlue = GetFunction(*Library_, "_xPSystemGetEndColorBlue@4")
Prototype.L _xFreePSystem(psystem.L)
Global xFreePSystem._xFreePSystem = GetFunction(*Library_, "_xFreePSystem@4")
Prototype.L _xPSystemSetParticleParenting(psystem.L, mode.L)
Global xPSystemSetParticleParenting._xPSystemSetParticleParenting = GetFunction(*Library_, "_xPSystemSetParticleParenting@8")
Prototype.L _xPSystemGetParticleParenting(psystem.L)
Global xPSystemGetParticleParenting._xPSystemGetParticleParenting = GetFunction(*Library_, "_xPSystemGetParticleParenting@4")
Prototype.L _xLinePick_(x.F, y.F, z.F, dx.F, dy.F, dz.F, distance.F)
Global xLinePick_._xLinePick_ = GetFunction(*Library_, "_xLinePick@28")
Prototype.L _xLinePick(x.F, y.F, z.F, dx.F, dy.F, dz.F, distance.F)
Global xLinePick._xLinePick = GetFunction(*Library_, "xLinePick")
Prototype.L _xEntityPick_(entity.L, range.F)
Global xEntityPick_._xEntityPick_ = GetFunction(*Library_, "_xEntityPick@8")
Prototype.L _xEntityPick(entity.L, range.F)
Global xEntityPick._xEntityPick = GetFunction(*Library_, "xEntityPick")
Prototype.L _xCameraPick(camera.L, x.L, y.L)
Global xCameraPick._xCameraPick = GetFunction(*Library_, "_xCameraPick@12")
Prototype.F _xPickedNX()
Global xPickedNX._xPickedNX = GetFunction(*Library_, "_xPickedNX@0")
Prototype.F _xPickedNY()
Global xPickedNY._xPickedNY = GetFunction(*Library_, "_xPickedNY@0")
Prototype.F _xPickedNZ()
Global xPickedNZ._xPickedNZ = GetFunction(*Library_, "_xPickedNZ@0")
Prototype.F _xPickedX()
Global xPickedX._xPickedX = GetFunction(*Library_, "_xPickedX@0")
Prototype.F _xPickedY()
Global xPickedY._xPickedY = GetFunction(*Library_, "_xPickedY@0")
Prototype.F _xPickedZ()
Global xPickedZ._xPickedZ = GetFunction(*Library_, "_xPickedZ@0")
Prototype.L _xPickedEntity()
Global xPickedEntity._xPickedEntity = GetFunction(*Library_, "_xPickedEntity@0")
Prototype.L _xPickedSurface()
Global xPickedSurface._xPickedSurface = GetFunction(*Library_, "_xPickedSurface@0")
Prototype.L _xPickedTriangle()
Global xPickedTriangle._xPickedTriangle = GetFunction(*Library_, "_xPickedTriangle@0")
Prototype.L _xPickedTime()
Global xPickedTime._xPickedTime = GetFunction(*Library_, "_xPickedTime@0")
Prototype.L _xSetShadowsBlur(blurLevel.L)
Global xSetShadowsBlur._xSetShadowsBlur = GetFunction(*Library_, "_xSetShadowsBlur@4")
Prototype.L _xSetShadowShader(path.P-Ascii)
Global xSetShadowShader._xSetShadowShader = GetFunction(*Library_, "_xSetShadowShader@4")
Prototype.L _xInitShadows(dirSize.L, spotSize.L, pointSize.L)
Global xInitShadows._xInitShadows = GetFunction(*Library_, "_xInitShadows@12")
Prototype.L _xSetShadowParams_(splitPlanes.L, splitLambda.F, useOrtho.L, lightDist.F)
Global xSetShadowParams_._xSetShadowParams_ = GetFunction(*Library_, "_xSetShadowParams@16")
Prototype.L _xSetShadowParams(splitPlanes.L, splitLambda.F, useOrtho.L, lightDist.F)
Global xSetShadowParams._xSetShadowParams = GetFunction(*Library_, "xSetShadowParams")
Prototype.L _xRenderShadows(mainCamera.L, texture.L)
Global xRenderShadows._xRenderShadows = GetFunction(*Library_, "_xRenderShadows@8")
Prototype.L _xShadowPriority(priority.L)
Global xShadowPriority._xShadowPriority = GetFunction(*Library_, "_xShadowPriority@4")
Prototype.L _xCameraDisableShadows(camera.L)
Global xCameraDisableShadows._xCameraDisableShadows = GetFunction(*Library_, "_xCameraDisableShadows@4")
Prototype.L _xCameraEnableShadows(camera.L)
Global xCameraEnableShadows._xCameraEnableShadows = GetFunction(*Library_, "_xCameraEnableShadows@4")
Prototype.L _xEntityCastShadows(entity.L, light.L, state.L)
Global xEntityCastShadows._xEntityCastShadows = GetFunction(*Library_, "_xEntityCastShadows@12")
Prototype.L _xEntityReceiveShadows(entity.L, light.L, state.L)
Global xEntityReceiveShadows._xEntityReceiveShadows = GetFunction(*Library_, "_xEntityReceiveShadows@12")
Prototype.L _xEntityIsCaster(entity.L, light.L)
Global xEntityIsCaster._xEntityIsCaster = GetFunction(*Library_, "_xEntityIsCaster@8")
Prototype.L _xEntityIsReceiver(entity.L, light.L)
Global xEntityIsReceiver._xEntityIsReceiver = GetFunction(*Library_, "_xEntityIsReceiver@8")
Prototype.L _xLoadSound(path.P-Ascii)
Global xLoadSound._xLoadSound = GetFunction(*Library_, "_xLoadSound@4")
Prototype.L _xLoad3DSound(path.P-Ascii)
Global xLoad3DSound._xLoad3DSound = GetFunction(*Library_, "_xLoad3DSound@4")
Prototype.L _xFreeSound(sound.L)
Global xFreeSound._xFreeSound = GetFunction(*Library_, "_xFreeSound@4")
Prototype.L _xLoopSound(sound.L)
Global xLoopSound._xLoopSound = GetFunction(*Library_, "_xLoopSound@4")
Prototype.L _xSoundPitch(sound.L, pitch.L)
Global xSoundPitch._xSoundPitch = GetFunction(*Library_, "_xSoundPitch@8")
Prototype.L _xSoundVolume(sound.L, volume.F)
Global xSoundVolume._xSoundVolume = GetFunction(*Library_, "_xSoundVolume@8")
Prototype.L _xSoundPan(sound.L, pan.F)
Global xSoundPan._xSoundPan = GetFunction(*Library_, "_xSoundPan@8")
Prototype.L _xPlaySound(sound.L)
Global xPlaySound._xPlaySound = GetFunction(*Library_, "_xPlaySound@4")
Prototype.L _xStopChannel(channel.L)
Global xStopChannel._xStopChannel = GetFunction(*Library_, "_xStopChannel@4")
Prototype.L _xPauseChannel(channel.L)
Global xPauseChannel._xPauseChannel = GetFunction(*Library_, "_xPauseChannel@4")
Prototype.L _xResumeChannel(channel.L)
Global xResumeChannel._xResumeChannel = GetFunction(*Library_, "_xResumeChannel@4")
Prototype.L _xPlayMusic(path.P-Ascii)
Global xPlayMusic._xPlayMusic = GetFunction(*Library_, "_xPlayMusic@4")
Prototype.L _xChannelPitch(channel.L, pitch.L)
Global xChannelPitch._xChannelPitch = GetFunction(*Library_, "_xChannelPitch@8")
Prototype.L _xChannelVolume(channel.L, volume.F)
Global xChannelVolume._xChannelVolume = GetFunction(*Library_, "_xChannelVolume@8")
Prototype.L _xChannelPan(channel.L, pan.F)
Global xChannelPan._xChannelPan = GetFunction(*Library_, "_xChannelPan@8")
Prototype.L _xChannelPlaying(channel.L)
Global xChannelPlaying._xChannelPlaying = GetFunction(*Library_, "_xChannelPlaying@4")
Prototype.L _xEmitSound(sound.L, entity.L)
Global xEmitSound._xEmitSound = GetFunction(*Library_, "_xEmitSound@8")
Prototype.L _xCreateListener_(parent.L, roFactor.F, doplerFactor.F, distFactor.F)
Global xCreateListener_._xCreateListener_ = GetFunction(*Library_, "_xCreateListener@16")
Prototype.L _xCreateListener(parent.L, roFactor.F, doplerFactor.F, distFactor.F)
Global xCreateListener._xCreateListener = GetFunction(*Library_, "xCreateListener")
Prototype.L _xGetListener()
Global xGetListener._xGetListener = GetFunction(*Library_, "_xGetListener@0")
Prototype.L _xInitalizeSound()
Global xInitalizeSound._xInitalizeSound = GetFunction(*Library_, "_xInitalizeSound@0")
Prototype.L _xCreateSprite_(parent.L)
Global xCreateSprite_._xCreateSprite_ = GetFunction(*Library_, "_xCreateSprite@4")
Prototype.L _xCreateSprite(parent.L)
Global xCreateSprite._xCreateSprite = GetFunction(*Library_, "xCreateSprite")
Prototype.L _xSpriteViewMode(sprite.L, mode.L)
Global xSpriteViewMode._xSpriteViewMode = GetFunction(*Library_, "_xSpriteViewMode@8")
Prototype.L _xHandleSprite(sprite.L, x.F, y.F)
Global xHandleSprite._xHandleSprite = GetFunction(*Library_, "_xHandleSprite@12")
Prototype.L _xLoadSprite_(path.P-Ascii, flags.L, parent.L)
Global xLoadSprite_._xLoadSprite_ = GetFunction(*Library_, "_xLoadSprite@12")
Prototype.L _xLoadSprite(path.P-Ascii, flags.L, parent.L)
Global xLoadSprite._xLoadSprite = GetFunction(*Library_, "xLoadSprite")
Prototype.L _xRotateSprite(sprite.L, angle.F)
Global xRotateSprite._xRotateSprite = GetFunction(*Library_, "_xRotateSprite@8")
Prototype.L _xScaleSprite(sprite.L, xScale.F, yScale.F)
Global xScaleSprite._xScaleSprite = GetFunction(*Library_, "_xScaleSprite@12")
Prototype.L _xCreateSurface_(entity.L, brush.L, dynamic.L)
Global xCreateSurface_._xCreateSurface_ = GetFunction(*Library_, "_xCreateSurface@12")
Prototype.L _xCreateSurface(entity.L, brush.L, dynamic.L)
Global xCreateSurface._xCreateSurface = GetFunction(*Library_, "xCreateSurface")
Prototype.L _xGetSurfaceBrush(surface.L)
Global xGetSurfaceBrush._xGetSurfaceBrush = GetFunction(*Library_, "_xGetSurfaceBrush@4")
Prototype.L _xAddVertex_(surface.L, x.F, y.F, z.F, u.F, v.F, w.F)
Global xAddVertex_._xAddVertex_ = GetFunction(*Library_, "_xAddVertex@28")
Prototype.L _xAddVertex(surface.L, x.F, y.F, z.F, u.F, v.F, w.F)
Global xAddVertex._xAddVertex = GetFunction(*Library_, "xAddVertex")
Prototype.L _xAddTriangle(surface.L, v0.L, v1.L, v2.L)
Global xAddTriangle._xAddTriangle = GetFunction(*Library_, "_xAddTriangle@16")
Prototype.L _xSetSurfaceFrustumSphere(surface.L, x.F, y.F, z.F, radii.F)
Global xSetSurfaceFrustumSphere._xSetSurfaceFrustumSphere = GetFunction(*Library_, "_xSetSurfaceFrustumSphere@20")
Prototype.L _xVertexCoords(surface.L, vertex.L, x.F, y.F, z.F)
Global xVertexCoords._xVertexCoords = GetFunction(*Library_, "_xVertexCoords@20")
Prototype.L _xVertexNormal(surface.L, vertex.L, x.F, y.F, z.F)
Global xVertexNormal._xVertexNormal = GetFunction(*Library_, "_xVertexNormal@20")
Prototype.L _xVertexTangent(surface.L, vertex.L, x.F, y.F, z.F)
Global xVertexTangent._xVertexTangent = GetFunction(*Library_, "_xVertexTangent@20")
Prototype.L _xVertexBinormal(surface.L, vertex.L, x.F, y.F, z.F)
Global xVertexBinormal._xVertexBinormal = GetFunction(*Library_, "_xVertexBinormal@20")
Prototype.L _xVertexColor_(surface.L, vertex.L, red.L, green.L, blue.L, alpha.F)
Global xVertexColor_._xVertexColor_ = GetFunction(*Library_, "_xVertexColor@24")
Prototype.L _xVertexColor(surface.L, vertex.L, red.L, green.L, blue.L, alpha.F)
Global xVertexColor._xVertexColor = GetFunction(*Library_, "xVertexColor")
Prototype.L _xVertexTexCoords_(surface.L, vertex.L, u.F, v.F, w.F, textureSet.L)
Global xVertexTexCoords_._xVertexTexCoords_ = GetFunction(*Library_, "_xVertexTexCoords@24")
Prototype.L _xVertexTexCoords(surface.L, vertex.L, u.F, v.F, w.F, textureSet.L)
Global xVertexTexCoords._xVertexTexCoords = GetFunction(*Library_, "xVertexTexCoords")
Prototype.L _xCountVertices(surface.L)
Global xCountVertices._xCountVertices = GetFunction(*Library_, "_xCountVertices@4")
Prototype.F _xVertexX(surface.L, vertex.L)
Global xVertexX._xVertexX = GetFunction(*Library_, "_xVertexX@8")
Prototype.F _xVertexY(surface.L, vertex.L)
Global xVertexY._xVertexY = GetFunction(*Library_, "_xVertexY@8")
Prototype.F _xVertexZ(surface.L, vertex.L)
Global xVertexZ._xVertexZ = GetFunction(*Library_, "_xVertexZ@8")
Prototype.F _xVertexNX(surface.L, vertex.L)
Global xVertexNX._xVertexNX = GetFunction(*Library_, "_xVertexNX@8")
Prototype.F _xVertexNY(surface.L, vertex.L)
Global xVertexNY._xVertexNY = GetFunction(*Library_, "_xVertexNY@8")
Prototype.F _xVertexNZ(surface.L, vertex.L)
Global xVertexNZ._xVertexNZ = GetFunction(*Library_, "_xVertexNZ@8")
Prototype.F _xVertexTX(surface.L, vertex.L)
Global xVertexTX._xVertexTX = GetFunction(*Library_, "_xVertexTX@8")
Prototype.F _xVertexTY(surface.L, vertex.L)
Global xVertexTY._xVertexTY = GetFunction(*Library_, "_xVertexTY@8")
Prototype.F _xVertexTZ(surface.L, vertex.L)
Global xVertexTZ._xVertexTZ = GetFunction(*Library_, "_xVertexTZ@8")
Prototype.F _xVertexBX(surface.L, vertex.L)
Global xVertexBX._xVertexBX = GetFunction(*Library_, "_xVertexBX@8")
Prototype.F _xVertexBY(surface.L, vertex.L)
Global xVertexBY._xVertexBY = GetFunction(*Library_, "_xVertexBY@8")
Prototype.F _xVertexBZ(surface.L, vertex.L)
Global xVertexBZ._xVertexBZ = GetFunction(*Library_, "_xVertexBZ@8")
Prototype.F _xVertexU_(surface.L, vertex.L, textureSet.L)
Global xVertexU_._xVertexU_ = GetFunction(*Library_, "_xVertexU@12")
Prototype.F _xVertexU(surface.L, vertex.L, textureSet.L)
Global xVertexU._xVertexU = GetFunction(*Library_, "xVertexU")
Prototype.F _xVertexV_(surface.L, vertex.L, textureSet.L)
Global xVertexV_._xVertexV_ = GetFunction(*Library_, "_xVertexV@12")
Prototype.F _xVertexV(surface.L, vertex.L, textureSet.L)
Global xVertexV._xVertexV = GetFunction(*Library_, "xVertexV")
Prototype.F _xVertexW_(surface.L, vertex.L, textureSet.L)
Global xVertexW_._xVertexW_ = GetFunction(*Library_, "_xVertexW@12")
Prototype.F _xVertexW(surface.L, vertex.L, textureSet.L)
Global xVertexW._xVertexW = GetFunction(*Library_, "xVertexW")
Prototype.F _xVertexRed(surface.L, vertex.L)
Global xVertexRed._xVertexRed = GetFunction(*Library_, "_xVertexRed@8")
Prototype.F _xVertexGreen(surface.L, vertex.L)
Global xVertexGreen._xVertexGreen = GetFunction(*Library_, "_xVertexGreen@8")
Prototype.F _xVertexBlue(surface.L, vertex.L)
Global xVertexBlue._xVertexBlue = GetFunction(*Library_, "_xVertexBlue@8")
Prototype.F _xVertexAlpha(surface.L, vertex.L)
Global xVertexAlpha._xVertexAlpha = GetFunction(*Library_, "_xVertexAlpha@8")
Prototype.L _xTriangleVertex(surface.L, triangle.L, corner.L)
Global xTriangleVertex._xTriangleVertex = GetFunction(*Library_, "_xTriangleVertex@12")
Prototype.L _xCountTriangles(surface.L)
Global xCountTriangles._xCountTriangles = GetFunction(*Library_, "_xCountTriangles@4")
Prototype.L _xPaintSurface(surface.L, brush.L)
Global xPaintSurface._xPaintSurface = GetFunction(*Library_, "_xPaintSurface@8")
Prototype.L _xClearSurface_(surface.L, vertices.L, triangles.L)
Global xClearSurface_._xClearSurface_ = GetFunction(*Library_, "_xClearSurface@12")
Prototype.L _xClearSurface(surface.L, vertices.L, triangles.L)
Global xClearSurface._xClearSurface = GetFunction(*Library_, "xClearSurface")
Prototype.L _xGetSurfaceTexture_(surface.L, index.L)
Global xGetSurfaceTexture_._xGetSurfaceTexture_ = GetFunction(*Library_, "_xGetSurfaceTexture@8")
Prototype.L _xGetSurfaceTexture(surface.L, index.L)
Global xGetSurfaceTexture._xGetSurfaceTexture = GetFunction(*Library_, "xGetSurfaceTexture")
Prototype.L _xFreeSurface(surface.L)
Global xFreeSurface._xFreeSurface = GetFunction(*Library_, "_xFreeSurface@4")
Prototype.L _xSurfacePrimitiveType(surface.L, ptype.L)
Global xSurfacePrimitiveType._xSurfacePrimitiveType = GetFunction(*Library_, "_xSurfacePrimitiveType@8")
Prototype.L _xSurfaceTexture(surface.L, texture.L, frame.L, index.L)
Global xSurfaceTexture._xSurfaceTexture = GetFunction(*Library_, "_xSurfaceTexture@16")
Prototype.L _xSurfaceColor(surface.L, red.L, green.L, blue.L)
Global xSurfaceColor._xSurfaceColor = GetFunction(*Library_, "_xSurfaceColor@16")
Prototype.L _xSurfaceAlpha(surface.L, alpha.F)
Global xSurfaceAlpha._xSurfaceAlpha = GetFunction(*Library_, "_xSurfaceAlpha@8")
Prototype.L _xSurfaceShininess(surface.L, shininess.F)
Global xSurfaceShininess._xSurfaceShininess = GetFunction(*Library_, "_xSurfaceShininess@8")
Prototype.L _xSurfaceBlend(surface.L, blendMode.L)
Global xSurfaceBlend._xSurfaceBlend = GetFunction(*Library_, "_xSurfaceBlend@8")
Prototype.L _xSurfaceFX(surface.L, fxFlags.L)
Global xSurfaceFX._xSurfaceFX = GetFunction(*Library_, "_xSurfaceFX@8")
Prototype.L _xSurfaceAlphaRef(surface.L, alphaRef.L)
Global xSurfaceAlphaRef._xSurfaceAlphaRef = GetFunction(*Library_, "_xSurfaceAlphaRef@8")
Prototype.L _xSurfaceAlphaFunc(surface.L, alphaFunc.L)
Global xSurfaceAlphaFunc._xSurfaceAlphaFunc = GetFunction(*Library_, "_xSurfaceAlphaFunc@8")
Prototype.I _xCPUName()
Global xCPUName_._xCPUName = GetFunction(*Library_, "_xCPUName@0")
Macro xCPUName() : PeekS(xCPUName_(), -1, #PB_Ascii) : EndMacro
Prototype.I _xCPUVendor()
Global xCPUVendor_._xCPUVendor = GetFunction(*Library_, "_xCPUVendor@0")
Macro xCPUVendor() : PeekS(xCPUVendor_(), -1, #PB_Ascii) : EndMacro
Prototype.L _xCPUFamily()
Global xCPUFamily._xCPUFamily = GetFunction(*Library_, "_xCPUFamily@0")
Prototype.L _xCPUModel()
Global xCPUModel._xCPUModel = GetFunction(*Library_, "_xCPUModel@0")
Prototype.L _xCPUStepping()
Global xCPUStepping._xCPUStepping = GetFunction(*Library_, "_xCPUStepping@0")
Prototype.L _xCPUSpeed()
Global xCPUSpeed._xCPUSpeed = GetFunction(*Library_, "_xCPUSpeed@0")
Prototype.I _xVideoInfo()
Global xVideoInfo_._xVideoInfo = GetFunction(*Library_, "_xVideoInfo@0")
Macro xVideoInfo() : PeekS(xVideoInfo_(), -1, #PB_Ascii) : EndMacro
Prototype.F _xVideoAspectRatio()
Global xVideoAspectRatio._xVideoAspectRatio = GetFunction(*Library_, "_xVideoAspectRatio@0")
Prototype.I _xVideoAspectRatioStr()
Global xVideoAspectRatioStr_._xVideoAspectRatioStr = GetFunction(*Library_, "_xVideoAspectRatioStr@0")
Macro xVideoAspectRatioStr() : PeekS(xVideoAspectRatioStr_(), -1, #PB_Ascii) : EndMacro
Prototype.F _xGetTotalPhysMem()
Global xGetTotalPhysMem._xGetTotalPhysMem = GetFunction(*Library_, "_xGetTotalPhysMem@0")
Prototype.F _xGetAvailPhysMem()
Global xGetAvailPhysMem._xGetAvailPhysMem = GetFunction(*Library_, "_xGetAvailPhysMem@0")
Prototype.F _xGetTotalPageMem()
Global xGetTotalPageMem._xGetTotalPageMem = GetFunction(*Library_, "_xGetTotalPageMem@0")
Prototype.F _xGetAvailPageMem()
Global xGetAvailPageMem._xGetAvailPageMem = GetFunction(*Library_, "_xGetAvailPageMem@0")
Prototype.F _xGetTotalVidMem()
Global xGetTotalVidMem._xGetTotalVidMem = GetFunction(*Library_, "_xGetTotalVidMem@0")
Prototype.F _xGetAvailVidMem()
Global xGetAvailVidMem._xGetAvailVidMem = GetFunction(*Library_, "_xGetAvailVidMem@0")
Prototype.F _xGetTotalVidLocalMem()
Global xGetTotalVidLocalMem._xGetTotalVidLocalMem = GetFunction(*Library_, "_xGetTotalVidLocalMem@0")
Prototype.F _xGetAvailVidLocalMem()
Global xGetAvailVidLocalMem._xGetAvailVidLocalMem = GetFunction(*Library_, "_xGetAvailVidLocalMem@0")
Prototype.F _xGetTotalVidNonlocalMem()
Global xGetTotalVidNonlocalMem._xGetTotalVidNonlocalMem = GetFunction(*Library_, "_xGetTotalVidNonlocalMem@0")
Prototype.F _xGetAvailVidNonlocalMem()
Global xGetAvailVidNonlocalMem._xGetAvailVidNonlocalMem = GetFunction(*Library_, "_xGetAvailVidNonlocalMem@0")
Prototype.I _xGetXors3dVersion()
Global xGetXors3dVersion_._xGetXors3dVersion = GetFunction(*Library_, "_xGetXors3dVersion@0")
Macro xGetXors3dVersion() : PeekS(xGetXors3dVersion_(), -1, #PB_Ascii) : EndMacro
Prototype.L _xGetXors3dMajorVersion()
Global xGetXors3dMajorVersion._xGetXors3dMajorVersion = GetFunction(*Library_, "_xGetXors3dMajorVersion@0")
Prototype.L _xGetXors3dMinorVersion()
Global xGetXors3dMinorVersion._xGetXors3dMinorVersion = GetFunction(*Library_, "_xGetXors3dMinorVersion@0")
Prototype.L _xGetXors3dRevision()
Global xGetXors3dRevision._xGetXors3dRevision = GetFunction(*Library_, "_xGetXors3dRevision@0")
Prototype.L _xLoadTerrain_(path.P-Ascii, parent.L)
Global xLoadTerrain_._xLoadTerrain_ = GetFunction(*Library_, "_xLoadTerrain@8")
Prototype.L _xLoadTerrain(path.P-Ascii, parent.L)
Global xLoadTerrain._xLoadTerrain = GetFunction(*Library_, "xLoadTerrain")
Prototype.L _xCreateTerrain_(size.L, parent.L)
Global xCreateTerrain_._xCreateTerrain_ = GetFunction(*Library_, "_xCreateTerrain@8")
Prototype.L _xCreateTerrain(size.L, parent.L)
Global xCreateTerrain._xCreateTerrain = GetFunction(*Library_, "xCreateTerrain")
Prototype.L _xTerrainShading_(terrain.L, state.L)
Global xTerrainShading_._xTerrainShading_ = GetFunction(*Library_, "_xTerrainShading@8")
Prototype.L _xTerrainShading(terrain.L, state.L)
Global xTerrainShading._xTerrainShading = GetFunction(*Library_, "xTerrainShading")
Prototype.F _xTerrainHeight(terrain.L, x.L, y.L)
Global xTerrainHeight._xTerrainHeight = GetFunction(*Library_, "_xTerrainHeight@12")
Prototype.L _xTerrainSize(terrain.L)
Global xTerrainSize._xTerrainSize = GetFunction(*Library_, "_xTerrainSize@4")
Prototype.F _xTerrainX(terrain.L, x.F, y.F, z.F)
Global xTerrainX._xTerrainX = GetFunction(*Library_, "_xTerrainX@16")
Prototype.F _xTerrainY(terrain.L, x.F, y.F, z.F)
Global xTerrainY._xTerrainY = GetFunction(*Library_, "_xTerrainY@16")
Prototype.F _xTerrainZ(terrain.L, x.F, y.F, z.F)
Global xTerrainZ._xTerrainZ = GetFunction(*Library_, "_xTerrainZ@16")
Prototype.L _xModifyTerrain_(terrain.L, x.L, y.L, height.F, realtime.L)
Global xModifyTerrain_._xModifyTerrain_ = GetFunction(*Library_, "_xModifyTerrain@20")
Prototype.L _xModifyTerrain(terrain.L, x.L, y.L, height.F, realtime.L)
Global xModifyTerrain._xModifyTerrain = GetFunction(*Library_, "xModifyTerrain")
Prototype.L _xTerrainDetail(terrain.L, detail.L)
Global xTerrainDetail._xTerrainDetail = GetFunction(*Library_, "_xTerrainDetail@8")
Prototype.L _xTerrainSplatting(terrain.L, state.L)
Global xTerrainSplatting._xTerrainSplatting = GetFunction(*Library_, "_xTerrainSplatting@8")
Prototype.L _xLoadTerrainTexture(path.P-Ascii)
Global xLoadTerrainTexture._xLoadTerrainTexture = GetFunction(*Library_, "_xLoadTerrainTexture@4")
Prototype.L _xFreeTerrainTexture(texture.L)
Global xFreeTerrainTexture._xFreeTerrainTexture = GetFunction(*Library_, "_xFreeTerrainTexture@4")
Prototype.L _xTerrainTextureLightmap(texture.L, state.L)
Global xTerrainTextureLightmap._xTerrainTextureLightmap = GetFunction(*Library_, "_xTerrainTextureLightmap@8")
Prototype.L _xTerrainTexture(terrain.L, texture.L)
Global xTerrainTexture._xTerrainTexture = GetFunction(*Library_, "_xTerrainTexture@8")
Prototype.L _xTerrainViewZone_(terrain.L, viewZone.L, texturingZone.L)
Global xTerrainViewZone_._xTerrainViewZone_ = GetFunction(*Library_, "_xTerrainViewZone@12")
Prototype.L _xTerrainViewZone(terrain.L, viewZone.L, texturingZone.L)
Global xTerrainViewZone._xTerrainViewZone = GetFunction(*Library_, "xTerrainViewZone")
Prototype.L _xTerrainLODs(lodsCount.L)
Global xTerrainLODs._xTerrainLODs = GetFunction(*Library_, "_xTerrainLODs@4")
Prototype.L _xTextureWidth(texture.L)
Global xTextureWidth._xTextureWidth = GetFunction(*Library_, "_xTextureWidth@4")
Prototype.L _xTextureHeight(texture.L)
Global xTextureHeight._xTextureHeight = GetFunction(*Library_, "_xTextureHeight@4")
Prototype.L _xCreateTexture_(width.L, height.L, flags.L, frames.L)
Global xCreateTexture_._xCreateTexture_ = GetFunction(*Library_, "_xCreateTexture@16")
Prototype.L _xCreateTexture(width.L, height.L, flags.L, frames.L)
Global xCreateTexture._xCreateTexture = GetFunction(*Library_, "xCreateTexture")
Prototype.L _xFreeTexture(texture.L)
Global xFreeTexture._xFreeTexture = GetFunction(*Library_, "_xFreeTexture@4")
Prototype.L _xSetTextureFilter(texture.L, mode.L)
Global xSetTextureFilter._xSetTextureFilter = GetFunction(*Library_, "_xSetTextureFilter@8")
Prototype.L _xTextureBlend(texture.L, blend.L)
Global xTextureBlend._xTextureBlend = GetFunction(*Library_, "_xTextureBlend@8")
Prototype.L _xTextureCoords(texture.L, coords.L)
Global xTextureCoords._xTextureCoords = GetFunction(*Library_, "_xTextureCoords@8")
Prototype.L _xTextureFilter(matchText.P-Ascii, flags.L)
Global xTextureFilter._xTextureFilter = GetFunction(*Library_, "_xTextureFilter@8")
Prototype.L _xClearTextureFilters()
Global xClearTextureFilters._xClearTextureFilters = GetFunction(*Library_, "_xClearTextureFilters@0")
Prototype.L _xLoadTexture_(path.P-Ascii, flags.L)
Global xLoadTexture_._xLoadTexture_ = GetFunction(*Library_, "_xLoadTexture@8")
Prototype.L _xLoadTexture(path.P-Ascii, flags.L)
Global xLoadTexture._xLoadTexture = GetFunction(*Library_, "xLoadTexture")
Prototype.I _xTextureName(texture.L)
Global xTextureName_._xTextureName = GetFunction(*Library_, "_xTextureName@4")
Macro xTextureName(texture) : PeekS(xTextureName_(texture), -1, #PB_Ascii) : EndMacro
Prototype.L _xPositionTexture(texture.L, x.F, y.F)
Global xPositionTexture._xPositionTexture = GetFunction(*Library_, "_xPositionTexture@12")
Prototype.L _xScaleTexture(texture.L, x.F, y.F)
Global xScaleTexture._xScaleTexture = GetFunction(*Library_, "_xScaleTexture@12")
Prototype.L _xRotateTexture(texture.L, angle.F)
Global xRotateTexture._xRotateTexture = GetFunction(*Library_, "_xRotateTexture@8")
Prototype.L _xLoadAnimTexture(path.P-Ascii, flags.L, width.L, height.L, startFrame.L, frames.L)
Global xLoadAnimTexture._xLoadAnimTexture = GetFunction(*Library_, "_xLoadAnimTexture@24")
Prototype.L _xCreateTextureFromData_(pixelsData.L, width.L, height.L, flags.L, frames.L)
Global xCreateTextureFromData_._xCreateTextureFromData_ = GetFunction(*Library_, "_xCreateTextureFromData@20")
Prototype.L _xCreateTextureFromData(pixelsData.L, width.L, height.L, flags.L, frames.L)
Global xCreateTextureFromData._xCreateTextureFromData = GetFunction(*Library_, "xCreateTextureFromData")
Prototype.L _xGetTextureData_(texture.L, frame.L)
Global xGetTextureData_._xGetTextureData_ = GetFunction(*Library_, "_xGetTextureData@8")
Prototype.L _xGetTextureData(texture.L, frame.L)
Global xGetTextureData._xGetTextureData = GetFunction(*Library_, "xGetTextureData")
Prototype.L _xGetTextureDataPitch_(texture.L, frame.L)
Global xGetTextureDataPitch_._xGetTextureDataPitch_ = GetFunction(*Library_, "_xGetTextureDataPitch@8")
Prototype.L _xGetTextureDataPitch(texture.L, frame.L)
Global xGetTextureDataPitch._xGetTextureDataPitch = GetFunction(*Library_, "xGetTextureDataPitch")
Prototype.L _xGetTextureSurface_(texture.L, frame.L)
Global xGetTextureSurface_._xGetTextureSurface_ = GetFunction(*Library_, "_xGetTextureSurface@8")
Prototype.L _xGetTextureSurface(texture.L, frame.L)
Global xGetTextureSurface._xGetTextureSurface = GetFunction(*Library_, "xGetTextureSurface")
Prototype.L _xGetTextureFrames(texture.L)
Global xGetTextureFrames._xGetTextureFrames = GetFunction(*Library_, "_xGetTextureFrames@4")
Prototype.L _xSetCubeFace(texture.L, face.L)
Global xSetCubeFace._xSetCubeFace = GetFunction(*Library_, "_xSetCubeFace@8")
Prototype.L _xSetCubeMode(texture.L, mode.L)
Global xSetCubeMode._xSetCubeMode = GetFunction(*Library_, "_xSetCubeMode@8")
Prototype.L _xGetTextureBlend(texture.L)
Global xGetTextureBlend._xGetTextureBlend = GetFunction(*Library_, "_xGetTextureBlend@4")
Prototype.F _xGetTextureX(texture.L)
Global xGetTextureX._xGetTextureX = GetFunction(*Library_, "_xGetTextureX@4")
Prototype.F _xGetTextureY(texture.L)
Global xGetTextureY._xGetTextureY = GetFunction(*Library_, "_xGetTextureY@4")
Prototype.F _xGetTextureScaleX(texture.L)
Global xGetTextureScaleX._xGetTextureScaleX = GetFunction(*Library_, "_xGetTextureScaleX@4")
Prototype.F _xGetTextureScaleY(texture.L)
Global xGetTextureScaleY._xGetTextureScaleY = GetFunction(*Library_, "_xGetTextureScaleY@4")
Prototype.F _xGetTextureAngle(texture.L)
Global xGetTextureAngle._xGetTextureAngle = GetFunction(*Library_, "_xGetTextureAngle@4")
Prototype.L _xGetTextureCoords(texture.L)
Global xGetTextureCoords._xGetTextureCoords = GetFunction(*Library_, "_xGetTextureCoords@4")
Prototype.L _xGetCubeFace(texture.L)
Global xGetCubeFace._xGetCubeFace = GetFunction(*Library_, "_xGetCubeFace@4")
Prototype.L _xGetCubeMode(texture.L)
Global xGetCubeMode._xGetCubeMode = GetFunction(*Library_, "_xGetCubeMode@4")
Prototype.L _xGetTextureFlags(texture.L)
Global xGetTextureFlags._xGetTextureFlags = GetFunction(*Library_, "_xGetTextureFlags@4")
Prototype.L _xSetTextureFlags(texture.L, flags.L)
Global xSetTextureFlags._xSetTextureFlags = GetFunction(*Library_, "_xSetTextureFlags@8")
Prototype.L _xTextureCounter(texture.L)
Global xTextureCounter._xTextureCounter = GetFunction(*Library_, "_xTextureCounter@4")
Prototype.F _xVectorPitch(x.F, y.F, z.F)
Global xVectorPitch._xVectorPitch = GetFunction(*Library_, "_xVectorPitch@12")
Prototype.F _xVectorYaw(x.F, y.F, z.F)
Global xVectorYaw._xVectorYaw = GetFunction(*Library_, "_xVectorYaw@12")
Prototype.F _xDeltaPitch(entity1.L, entity2.L)
Global xDeltaPitch._xDeltaPitch = GetFunction(*Library_, "_xDeltaPitch@8")
Prototype.F _xDeltaYaw(entity1.L, entity2.L)
Global xDeltaYaw._xDeltaYaw = GetFunction(*Library_, "_xDeltaYaw@8")
Prototype.F _xTFormedX()
Global xTFormedX._xTFormedX = GetFunction(*Library_, "_xTFormedX@0")
Prototype.F _xTFormedY()
Global xTFormedY._xTFormedY = GetFunction(*Library_, "_xTFormedY@0")
Prototype.F _xTFormedZ()
Global xTFormedZ._xTFormedZ = GetFunction(*Library_, "_xTFormedZ@0")
Prototype.L _xTFormPoint(x.F, y.F, z.F, source.L, destination.L)
Global xTFormPoint._xTFormPoint = GetFunction(*Library_, "_xTFormPoint@20")
Prototype.L _xTFormVector(x.F, y.F, z.F, source.L, destination.L)
Global xTFormVector._xTFormVector = GetFunction(*Library_, "_xTFormVector@20")
Prototype.L _xTFormNormal(x.F, y.F, z.F, source.L, destination.L)
Global xTFormNormal._xTFormNormal = GetFunction(*Library_, "_xTFormNormal@20")
Prototype.L _xOpenMovie(path.P-Ascii)
Global xOpenMovie._xOpenMovie = GetFunction(*Library_, "_xOpenMovie@4")
Prototype.L _xCloseMovie(video.L)
Global xCloseMovie._xCloseMovie = GetFunction(*Library_, "_xCloseMovie@4")
Prototype.L _xDrawMovie_(video.L, x.L, y.L, width.L, height.L)
Global xDrawMovie_._xDrawMovie_ = GetFunction(*Library_, "_xDrawMovie@20")
Prototype.L _xDrawMovie(video.L, x.L, y.L, width.L, height.L)
Global xDrawMovie._xDrawMovie = GetFunction(*Library_, "xDrawMovie")
Prototype.L _xMovieWidth(video.L)
Global xMovieWidth._xMovieWidth = GetFunction(*Library_, "_xMovieWidth@4")
Prototype.L _xMovieHeight(video.L)
Global xMovieHeight._xMovieHeight = GetFunction(*Library_, "_xMovieHeight@4")
Prototype.L _xMoviePlaying(video.L)
Global xMoviePlaying._xMoviePlaying = GetFunction(*Library_, "_xMoviePlaying@4")
Prototype.L _xMovieSeek_(video.L, time.F, relative.L)
Global xMovieSeek_._xMovieSeek_ = GetFunction(*Library_, "_xMovieSeek@12")
Prototype.L _xMovieSeek(video.L, time.F, relative.L)
Global xMovieSeek._xMovieSeek = GetFunction(*Library_, "xMovieSeek")
Prototype.F _xMovieLength(video.L)
Global xMovieLength._xMovieLength = GetFunction(*Library_, "_xMovieLength@4")
Prototype.F _xMovieCurrentTime(video.L)
Global xMovieCurrentTime._xMovieCurrentTime = GetFunction(*Library_, "_xMovieCurrentTime@4")
Prototype.L _xMoviePause(video.L)
Global xMoviePause._xMoviePause = GetFunction(*Library_, "_xMoviePause@4")
Prototype.L _xMovieResume(video.L)
Global xMovieResume._xMovieResume = GetFunction(*Library_, "_xMovieResume@4")
Prototype.L _xMovieTexture(video.L)
Global xMovieTexture._xMovieTexture = GetFunction(*Library_, "_xMovieTexture@4")
Prototype.L _xCreateWorld()
Global xCreateWorld._xCreateWorld = GetFunction(*Library_, "_xCreateWorld@0")
Prototype.L _xSetActiveWorld(world.L)
Global xSetActiveWorld._xSetActiveWorld = GetFunction(*Library_, "_xSetActiveWorld@4")
Prototype.L _xGetActiveWorld()
Global xGetActiveWorld._xGetActiveWorld = GetFunction(*Library_, "_xGetActiveWorld@0")
Prototype.L _xGetDefaultWorld()
Global xGetDefaultWorld._xGetDefaultWorld = GetFunction(*Library_, "_xGetDefaultWorld@0")
Prototype.L _xDeleteWorld(world.L)
Global xDeleteWorld._xDeleteWorld = GetFunction(*Library_, "_xDeleteWorld@4")

; IDE Options = PureBasic 5.70 LTS (Windows - x86)
; EnableXP
; EnableUnicode